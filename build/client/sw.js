"use strict";class e{constructor(e){this.name="MethodNotFound"}}class t{getView(e,t){const{pathname:n}=new URL(e),{method:r}=t,i=this.constructor.route,s=n.match(i+"/(.+)/");if("GET"===r){const r=n.match(i+"/(.+)/");return n.match(i+"/new")?this.create(e):n.match(i+"/(.+)/edit$")?this.edit(e,r[1],t):n.match(i+"/(.+)/")?this.get(e,r[1],t):this.getAll(e,t)}if("POST"===r){if(n.match(i+"/*$"))return this.post(e,t);if(n.match(i+"/(.+)/edit$"))return this.put(e,s[1],t);if(n.match(i+"/(.+)/delete$")){const r=n.match(i+"/(.+)/");return this.del(e,r[1],t)}}else{if("PUT"===r)return this.put(e,s[1],t);if("DELETE"===r){const r=n.match(i+"/(.+)/");return this.del(e,r[1],t)}}}redirect(e){return Response.redirect(e,"302")}create(t){throw new e("create")}edit(t){throw new e("")}get(t){throw new e("get")}getAll(t){throw new e("getAll")}post(t){throw new e("post")}del(t){throw new e("delete")}}class n extends t{render(e){}}const r=[],i=new n,s=new TextEncoder,a=async(e,t)=>{const n=e.getReader();return n.read().then((function e(r){if(!r.done)return r.value&&t.enqueue(r.value),n.read().then(e)}))},o=async(e,t)=>{if(e instanceof globalThis.ReadableStream)await a(e,t);else if(e instanceof Promise){let n;n=await e,n instanceof globalThis.ReadableStream?await a(n,t):await o(n,t)}else if(Array.isArray(e))for(let n of e)await o(n,t);else e&&t.enqueue(s.encode(e))};var d=async(e,...t)=>("ReadableStream"in globalThis==!1&&(globalThis={...globalThis,...await Promise.resolve().then((function(){return require("./streams-6a7ac95a.js")}))}),new globalThis.ReadableStream({start(n){!async function(){let r=0;for(;r<t.length;){let i=e[r];n.enqueue(s.encode(i)),await o(t[r],n),r++}n.enqueue(s.encode(e[r])),n.close()}()}}));const l=(e,t)=>d`<!DOCTYPE html>
<html>
  <head>
    <title>Baby Logger</title>
    <script src="/client.js" type="module" defer></script>
    <link rel="stylesheet" href="/styles/main.css">
    <link rel="manifest" href="/manifest.json">
    <meta name="viewport" content="width=device-width">
  </head>
  ${t}
</html>`,c=(e,t)=>d`
  <header>
    <h1>Baby Log</h1>
    <div><a href="/">All</a>, <a href="/feeds">Feeds</a>, <a href="/sleeps">Sleeps</a>, <a href="/poops">Poops</a>,  <a href="/wees">Wees</a></div>
    </header>
  <main>
    <header>
      <h2>${e.header}</h2>
    </header>
    <section>
    ${t}
    </section>
  </main>
  <footer>
    <span>Add</span><a href="/feeds/new" title="Add a feed">üçº</a><a href="/sleeps/new" title="Add a Sleep">üí§</a><a href="/poops/new" title="Add a Poop">üí©</a><a href="/wees/new" title="Add a Wee">‚õ≤Ô∏è</a>
  </footer>
  `;"navigator"in globalThis==!1&&(globalThis.navigator={language:"en-GB"});const m=e=>{const t=Math.floor(e/36e5);e-=1e3*t*60*60;const n=Math.floor(e/6e4);return`${t} ${1==t?"Hour":"Hours"} ${n} ${1==n?"Minute":"Minutes"}`},p=e=>{const t=[],n=navigator.language,r={weekday:"long",year:"numeric",month:"long",day:"numeric"};let i,s={},a=!0;for(let o of e)o.startTime.toLocaleDateString(n,r)!=i&&(0==a&&(t.push(d`<div>${Object.entries(s).map(([e,t])=>`${t} ${e}${t>1?"s":""}`).join(", ")}</div>`),s={}),a=!1,i=o.startTime.toLocaleDateString(n,r),t.push(d`<h3>${i}</h3>`)),o.type in s==0&&(s[o.type]=0),s[o.type]++,t.push(d`<div class="row">
      <img src="/images/icons/${o.type}/res/mipmap-xxhdpi/${o.type}.png" alt="${o.type}"><span>
        ${o.startTime.toLocaleTimeString(navigator.language,{hour:"numeric",minute:"numeric"})} 
        ${o.isDuration?`- ${m(o.duration)} ${!1===o.hasFinished?`(Still ${o.type}ing)`:""} `:""}
        </span>
        <a href="/${o.type}s/${o.id}/edit"><img src="/images/icons/ui/edit_18dp.png"></a><button class="delete row" form="deleteForm${o.id}"><img src="/images/icons/ui/delete_18dp.png"></button>
        <form id="deleteForm${o.id}" class="deleteForm" method="POST" action="/${o.type}s/${o.id}/delete"></form>
    </div>`);return t.push(d`<div>${Object.entries(s).map(([e,t])=>`${t} ${e}${t>1?"s":""}`).join(", ")}</div>`),t};class u{async getAll(e){return e.type="All",e.header="All",d`${l(0,c(e,d`${p(e)}`))}`}}const g={name:"babylog",version:6,stores:{Log:{properties:{autoIncrement:!0,keyPath:"id"},indexes:{"type,startTime":{unique:!0},"startTime,type":{unique:!0}}}}};function h(){return void 0!==globalThis.ConfigManagerInstance_||(globalThis.ConfigManagerInstance_=new f),Promise.resolve(globalThis.ConfigManagerInstance_)}class f{constructor(){this.config=g}set config(e){this.config_=e}get config(){return this.config_}getStore(e){return this.config_.stores[e]}}function w(){return void 0!==globalThis.DatabaseInstance_||(globalThis.DatabaseInstance_=new v),Promise.resolve(globalThis.DatabaseInstance_)}function y(){return"indexedDB"in globalThis}class v{constructor(){h().then(e=>{var t=e.config;this.db_=null,this.name_=t.name,this.version_=t.version,this.stores_=t.stores})}getStore(e){if(!this.stores_[e])throw'There is no store with name "'+e+'"';return this.stores_[e]}async open(){return this.db_?Promise.resolve(this.db_):new Promise((e,t)=>{var n=indexedDB.open(this.name_,this.version_);n.onupgradeneeded=e=>{this.db_=e.target.result;for(var t,n=e.target.transaction,r=Object.keys(this.stores_),i=0;i<r.length;i++){var s;if(t=r[i],this.db_.objectStoreNames.contains(t)){if(this.stores_[t].deleteOnUpgrade){this.db_.deleteObjectStore(t);continue}s=n.objectStore(t)}else s=this.db_.createObjectStore(t,this.stores_[t].properties);if(void 0!==this.stores_[t].indexes){for(var a,o=this.stores_[t].indexes,d=Object.keys(o),l=s.indexNames,c=0;c<d.length;c++)a=d[c],!1===l.contains(a)&&s.createIndex(a,a.split(","),o[a]);for(c=0;c<s.indexNames.length;c++)a=s.indexNames[c],d.indexOf(a)<0&&s.deleteIndex(a)}}},n.onsuccess=t=>{this.db_=t.target.result,e(this.db_)},n.onerror=e=>{t(e)}})}close(){return new Promise((e,t)=>{this.db_||t("No database connection"),this.db_.close(),e(this.db_)})}nuke(){return new Promise((e,t)=>{console.log("Nuking... "+this.name_),this.close();var n=indexedDB.deleteDatabase(this.name_);n.onsuccess=t=>{console.log("Nuked..."),e(t)},n.onerror=e=>{t(e)}})}put(e,t,n){return this.open().then(r=>new Promise((i,s)=>{var a=r.transaction(e,"readwrite"),o=a.objectStore(e).put(t,n);a.oncomplete=e=>{i(o.result)},a.onabort=a.onerror=e=>{s(e)}}))}get(e,t){return this.open().then(n=>new Promise((r,i)=>{var s,a=n.transaction(e,"readonly"),o=a.objectStore(e);a.oncomplete=e=>{r(s.result)},a.onabort=a.onerror=e=>{i(e)},s=o.get(t)}))}getAll(e,t,{filter:n,order:r,cmpFunc:i}){return this.open().then(s=>new Promise((a,o)=>{var d,l=s.transaction(e,"readonly").objectStore(e),c=(([e,...t])=>{const[n,r]=t;switch(e){case"BETWEEN":return IDBKeyRange.bound(n,r,!1,!1);case"=":return IDBKeyRange.only(n);case"<":return IDBKeyRange.upperBound(n);case"<=":return IDBKeyRange.upperBound(n,!0);case">":return IDBKeyRange.lowerBound(n);case">=":return IDBKeyRange.lowerBound(n,!0);default:return}})(n);"string"!=typeof r&&(r="next"),d="string"==typeof t?l.index(t).openCursor(c,r):l.openCursor();var m=[];d.onsuccess=e=>{var t=e.target.result;t?((void 0===i||i(t.value))&&m.push({key:t.key,value:t.value}),t.continue()):a(m)},d.onerror=e=>{o(e)}}))}delete(e,t){return this.open().then(n=>new Promise((r,i)=>{var s=n.transaction(e,"readwrite"),a=s.objectStore(e);s.oncomplete=e=>{r(e)},s.onabort=s.onerror=e=>{i(e)},a.delete(t)}))}deleteAll(e){return this.open().then(t=>new Promise((n,r)=>{var i=t.transaction(e,"readwrite").objectStore(e).clear();i.onsuccess=e=>{n(e)},i.onerror=e=>{r(e)}}))}}class T{constructor(e){this.key=e}static get ASCENDING(){return"next"}static get DESCENDING(){return"prev"}static get UPDATED(){return"Model-updated"}static get storeName(){return"Model"}static nuke(){return w().then(e=>e.close()).then(e=>e.nuke())}static get(e){return!1===y()?Promise.resolve():(this instanceof T&&Promise.reject("Can't call get on Model directly. Inherit first."),w().then(t=>t.get(this.storeName,e)).then(t=>h().then(n=>{var r=n.getStore(this.storeName);if(t){var i=e;return r.properties.keyPath&&(i=void 0),new this(t,i)}})))}static getAll(e,{filter:t,order:n,cmpFunc:r}){return!1===y()?Promise.resolve():(this instanceof T&&Promise.reject("Can't call getAll on Model directly. Inherit first."),w().then(i=>i.getAll(this.storeName,e,{filter:t,order:n,cmpFunc:r})).then(e=>h().then(t=>{var n=t.getStore(this.storeName),r=[];for(let t of e){var i=t.key;n.properties.keyPath&&(i=void 0),r.push(new this(t.value,i))}return r})))}put(){return this.constructor.put(this)}static put(e){return this instanceof T&&Promise.reject("Can't call put on Model directly. Inherit first."),w().then(t=>t.put(this.storeName,e,e.key)).then(t=>h().then(n=>(n.getStore(this.storeName).properties.keyPath||(e.key=t),e)))}static deleteAll(){return this instanceof T&&Promise.reject("Can't call deleteAll on Model directly. Inherit first."),w().then(e=>e.deleteAll(this.storeName)).catch(e=>{if("NotFoundError"!==e.name)throw e})}delete(){return this.constructor.delete(this)}static delete(e){return this instanceof T&&Promise.reject("Can't call delete on Model directly. Inherit first."),h().then(t=>{if(e instanceof this){var n=t.getStore(this.storeName).properties.keyPath;e=n?e[n]:e.key}return w().then(t=>t.delete(this.storeName,e))})}}class $ extends T{get hasFinished(){return!!this.endTime}get duration(){let e=this.endTime;return!1==!!e&&(e=new Date),e-this.startTime}constructor({id:e,endTime:t,startTime:n,type:r,isDuration:i=!1},s){super(s),e&&(this.id=e),t&&(this.endTime=new Date(t)),this.startTime=new Date(n),this.isDuration=i,this.type=r}static get storeName(){return"Log"}}class b extends t{static get route(){return"^/$"}async getAll(e){const t=new u,n=await $.getAll("startTime,type",{filter:["BETWEEN",[new Date(0),"a"],[new Date(9999999999999),"z"]],order:$.DESCENDING})||[];return t.getAll(n)}get(e){return(new u).render({title:"Ay....",newTitle:"Testing"})}}class S extends ${constructor(e={},t){super({...e,isDuration:!0},t),this.type="feed"}}const x=e=>{const t=6e4*(new Date).getTimezoneOffset();return new Date(e-t).toISOString().replace(/:(\d+).(\d+)Z$/,"")};"navigator"in globalThis==!1&&(globalThis.navigator={language:"en-GB"});class D{async getAll(e){return e.type="Feed",e.header="Feeds",d`${l(0,c(e,d`${p(e)}`))}`}async get(e){e.header="Feed";const t=navigator.language,n={weekday:"long",year:"numeric",month:"long",day:"numeric",hour:"numeric",minute:"numeric"};return d`${l(0,c(e,d`<div>Start time: ${e.startTime.toLocaleString(t,n)}</div>
        <div>End time: ${e.endTime?e.endTime.toLocaleString(t,n):""}</div>
        <a href="/${e.type}s/${e.id}/edit"><img src="/images/icons/ui/edit_18dp.png"></a>
        <div class="row">
        <form method="POST" id="deleteForm" action="/${e.type}s/${e.id}/delete"></form>
        <button form="deleteForm" class="delete"><img src="/images/icons/ui/delete_18dp.png"></button>
        </div>`))}`}async create(e){return e.header="Add a Feed",d`${l(0,c(e,`<div>\n    <form method="POST" action="/feeds">\n      <div><label for=startTime>Start time: <input type="datetime-local" name="startTime" value="${x(new Date)}"></label></div>\n      <div><label for=endTime>End time:<input type="datetime-local" name="endTime"></label></div>\n      <input type="submit">\n    </form></div>\n    `))}`}async edit(e){return e.header="Update a Feed",d`${l(0,c(e,`<div class="form">\n    <form method="POST" id="deleteForm" action="/${e.type}s/${e.id}/delete"></form>\n    <form method="POST" id="editForm" action="/${e.type}s/${e.id}/edit"></form>\n    <div>\n      <div><label for=startTime>Start time: <input type="datetime-local" name="startTime" form="editForm" value="${x(e.startTime)}"></label></div>\n      <div><label for=endTime>End time:<input type="datetime-local" name="endTime" form="editForm" value="${e.hasFinished?x(new Date):""}"></label></div>\n      <div class="controls">\n        <button form="deleteForm" class="delete"><img src="/images/icons/ui/delete_18dp.png"></button>\n        <input type="submit" form="editForm" value="Save">\n      </div>\n    </div>\n    </div>\n    `))}`}}class _ extends Error{constructor(e){super(e)}}const P=async e=>{const t=await e.arrayBuffer(),n=new TextDecoder("utf-8");return new URLSearchParams("?"+n.decode(t))};class A extends t{static get route(){return"/feeds"}async create(e,t){return(new D).create(new S)}async post(e,t){const n=await P(t),r=n.get("startTime"),i=n.get("endTime");return new S({startTime:r,endTime:i}).put(),this.redirect(A.route)}async edit(e,t){const n=await S.get(parseInt(t,10));if(0==!!n)throw new _(`Feed ${t} not found`);return(new D).edit(n)}async put(e,t,n){const r=await S.get(parseInt(t,10));if(0==!!r)throw new _(`Feed ${t} not found`);const i=await P(n),s=i.get("startTime"),a=i.get("endTime");return r.startTime=new Date(s),r.endTime=new Date(a),r.put(),this.redirect(A.route)}async get(e,t){const n=await S.get(parseInt(t,10));if(0==!!n)throw new _(`Feed ${t} not found`);return(new D).get(n)}async getAll(e){const t=await S.getAll("type,startTime",{filter:["BETWEEN",["feed",new Date(0)],["feed",new Date(99999999999999)]],order:S.DESCENDING})||[];return(new D).getAll(t)}async del(e,t){const n=await S.get(parseInt(t,10));if(0==!!n)throw new _(`Feed ${t} not found`);return await n.delete(),this.redirect(A.route)}}class E extends ${constructor(e={},t){super({...e,isDuration:!0},t),this.type="sleep"}}class F{async getAll(e){return e.type="Sleeps",e.header="Sleeps",d`${l(0,c(e,d`${p(e)}`))}`}async get(e){e.header="Sleep";const t=navigator.language,n={weekday:"long",year:"numeric",month:"long",day:"numeric",hour:"numeric",minute:"numeric"};return d`${l(0,c(e,d`<div>Start time: ${e.startTime.toLocaleString(t,n)}</div>
        <div>End time: ${e.endTime?e.endTime.toLocaleString(t,n):""}</div>`))}`}async create(e){return e.header="Add a Sleep",d`${l(0,c(e,`<div>\n    <form method="POST" action="/sleeps">\n    <div><label for=startTime>Start time: <input type="datetime-local" name="startTime" value="${x(new Date)}"></label></div>\n    <div><label for=endTime>End time:<input type="datetime-local" name="endTime"></label></div>\n    <input type="submit">\n    </form></div>\n    `))}`}async edit(e){return e.header="Update a Sleep",d`${l(0,c(e,`<div class="form">\n    <form method="POST" id="deleteForm" action="/${e.type}s/${e.id}/delete"></form>\n    <form method="POST" id="editForm" action="/${e.type}s/${e.id}/edit"></form>\n    <div>\n      <div><label for=startTime>Start time: <input type="datetime-local" name="startTime" form="editForm" value="${x(e.startTime)}"></label></div>\n      <div><label for=endTime>End time:<input type="datetime-local" name="endTime" form="editForm" value="${e.hasFinished?x(new Date):""}"></label></div>\n      <div class="controls">\n        <button form="deleteForm"><img src="/images/icons/ui/delete_18dp.png"></button>\n        <input type="submit" form="editForm" value="Save">\n      </div>\n    </div>\n    </div>\n    `))}`}}class I extends t{static get route(){return"/sleeps"}async create(e,t){return(new F).create(new E)}async post(e,t){const n=await P(t),r=n.get("startTime"),i=n.get("endTime");return new E({startTime:r,endTime:i}).put(),this.redirect(I.route)}async edit(e,t){const n=await E.get(parseInt(t,10));if(0==!!n)throw new _(`Sleep ${t} not found`);return(new F).edit(n)}async put(e,t,n){const r=await E.get(parseInt(t,10));if(0==!!r)throw new _(`Sleep ${t} not found`);const i=await P(n),s=i.get("startTime"),a=i.get("endTime");return r.startTime=new Date(s),r.endTime=new Date(a),r.put(),this.redirect(I.route)}async get(e,t){const n=await E.get(parseInt(t,10));if(0==!!n)throw new _(`Sleep ${t} not found`);return(new F).get(n)}async getAll(e){const t=await E.getAll("type,startTime",{filter:["BETWEEN",["sleep",new Date(0)],["sleep",new Date(99999999999999)]],order:E.DESCENDING})||[];return(new F).getAll(t)}async del(e,t){const n=await E.get(parseInt(t,10));if(0==!!n)throw new _(`Sleep ${t} not found`);return await n.delete(),this.redirect(I.route)}}class N extends ${constructor(e={},t){super(e,t),this.type="poop"}}class j{async getAll(e){return e.type="Poop",e.header="Poops",d`${l(0,c(e,d`${p(e)}`))}`}async get(e){e.header="Poop";const t=navigator.language,n={weekday:"long",year:"numeric",month:"long",day:"numeric",hour:"numeric",minute:"numeric"};return d`${l(0,c(e,d`<div>Start time: ${e.startTime.toLocaleString(t,n)}</div>
        <div>End time: ${e.endTime?e.endTime.toLocaleString(t,n):""}</div>`))}`}async create(e){return e.header="Add a Poop",d`${l(0,c(e,`<div>\n    <form method="POST" action="/poops">\n      <label for=startTime>Start time: <input type="datetime-local" name="startTime" value="${x(new Date)}"></label>\n      <input type="submit">\n    </form></div>\n    `))}`}async edit(e){return e.header="Update a Poop",d`${l(0,c(e,`<div class="form">\n    <form method="POST" id="deleteForm" action="/${e.type}s/${e.id}/delete"></form>\n    <form method="POST" id="editForm" action="/${e.type}s/${e.id}/edit"></form>\n    <div>\n      <div><label for=startTime>Start time: <input type="datetime-local" name="startTime" form="editForm" value="${x(e.startTime)}"></label></div>\n      <div class="controls">\n        <button form="deleteForm"><img src="/images/icons/ui/delete_18dp.png"></button>\n        <input type="submit" form="editForm" value="Save">\n      </div>\n    </div>\n    </div>\n    `))}`}}class k extends t{static get route(){return"/poops"}async create(e,t){return(new j).create(new N)}async post(e,t){const n=await P(t),r=n.get("startTime"),i=n.get("endTime");return new N({startTime:r,endTime:i}).put(),this.redirect(k.route)}async edit(e,t){const n=await N.get(parseInt(t,10));if(0==!!n)throw new _(`Poop ${t} not found`);return(new j).edit(n)}async put(e,t,n){const r=await N.get(parseInt(t,10));if(0==!!r)throw new _(`Poop ${t} not found`);const i=await P(n),s=i.get("startTime"),a=i.get("endTime");return r.startTime=s,r.endTime=a,r.put(),this.redirect(k.route)}async get(e,t){const n=await N.get(parseInt(t,10));if(0==!!n)throw new _(`Poop ${t} not found`);return(new j).get(n)}async getAll(e){const t=await N.getAll("type,startTime",{filter:["BETWEEN",["poop",new Date(0)],["poop",new Date(99999999999999)]],order:N.DESCENDING})||[];return(new j).getAll(t)}async del(e,t){const n=await N.get(parseInt(t,10));if(0==!!n)throw new _(`Poop ${t} not found`);return await n.delete(),this.redirect(k.route)}}class O extends ${constructor(e={},t){super(e,t),this.type="wee"}}class R{async getAll(e){return e.type="Wee",e.header="Wees",d`${l(0,c(e,d`${p(e)}`))}`}async get(e){e.header="Wee";const t=navigator.language,n={weekday:"long",year:"numeric",month:"long",day:"numeric",hour:"numeric",minute:"numeric"};return d`${l(0,c(e,d`<div>Start time: ${e.startTime.toLocaleString(t,n)}</div>
        <div>End time: ${e.endTime?e.endTime.toLocaleString(t,n):""}</div>`))}`}async create(e){return e.header="Add a Wee",d`${l(0,c(e,`<div>\n    <form method="POST" action="/wees">\n      <label for=startTime>Start time: <input type="datetime-local" name="startTime" value="${x(new Date)}"></label>\n      <input type="submit">\n    </form></div>\n    `))}`}async edit(e){return e.header="Update a Wee",d`${l(0,c(e,`<div class="form">\n    <form method="POST" id="deleteForm" action="/${e.type}s/${e.id}/delete"></form>\n    <form method="POST" id="editForm" action="/${e.type}s/${e.id}/edit"></form>\n    <div>\n      <div><label for=startTime>Start time: <input type="datetime-local" name="startTime" form="editForm" value="${x(e.startTime)}"></label></div>\n      <div class="controls">\n        <button form="deleteForm"><img src="/images/icons/ui/delete_18dp.png"></button>\n        <input type="submit" form="editForm" value="Save">\n      </div>\n    </div>\n    </div>\n    `))}`}}class B extends t{static get route(){return"/wees"}async create(e,t){return(new R).create(new O)}async post(e,t){const n=await P(t),r=n.get("startTime"),i=n.get("endTime");return new O({startTime:r,endTime:i}).put(),this.redirect(B.route)}async edit(e,t){const n=await O.get(parseInt(t,10));if(0==!!n)throw new _(`Wee ${t} not found`);return(new R).edit(n)}async put(e,t,n){const r=await O.get(parseInt(t,10));if(0==!!r)throw new _(`Wee ${t} not found`);const i=await P(n),s=i.get("startTime"),a=i.get("endTime");return r.startTime=s,r.endTime=a,r.put(),this.redirect(B.route)}async get(e,t){const n=await O.get(parseInt(t,10));if(0==!!n)throw new _(`Wee ${t} not found`);return(new R).get(n)}async getAll(e){const t=await O.getAll("type,startTime",{filter:["BETWEEN",["wee",new Date(0)],["wee",new Date(99999999999999)]],order:O.DESCENDING})||[];return(new R).getAll(t)}async del(e,t){const n=await O.get(parseInt(t,10));if(0==!!n)throw new _(`Wee ${t} not found`);return await n.delete(),this.redirect(B.route)}}class C extends t{static get route(){return""}constructor(e){super()}async get(e,t,n){return caches.match(n).then(t=>t||fetch(e))}async getAll(e,t){return this.get(e,void 0,t)}}var L=["/client.js","/manifest.json","/sw-manifest.json","/images/icons/feed/web_hi_res_512.png","/images/icons/feed/res/mipmap-hdpi/feed.png","/images/icons/feed/res/mipmap-mdpi/feed.png","/images/icons/feed/res/mipmap-xhdpi/feed.png","/images/icons/feed/res/mipmap-xxhdpi/feed.png","/images/icons/feed/res/mipmap-xxxhdpi/feed.png","/images/icons/log/web_hi_res_512.png","/images/icons/log/res/mipmap-hdpi/log.png","/images/icons/log/res/mipmap-mdpi/log.png","/images/icons/log/res/mipmap-xhdpi/log.png","/images/icons/log/res/mipmap-xxhdpi/log.png","/images/icons/log/res/mipmap-xxxhdpi/log.png","/images/icons/poop/web_hi_res_512.png","/images/icons/poop/res/mipmap-hdpi/poop.png","/images/icons/poop/res/mipmap-mdpi/poop.png","/images/icons/poop/res/mipmap-xhdpi/poop.png","/images/icons/poop/res/mipmap-xxhdpi/poop.png","/images/icons/poop/res/mipmap-xxxhdpi/poop.png","/images/icons/sleep/web_hi_res_512.png","/images/icons/sleep/res/mipmap-hdpi/sleep.png","/images/icons/sleep/res/mipmap-mdpi/sleep.png","/images/icons/sleep/res/mipmap-xhdpi/sleep.png","/images/icons/sleep/res/mipmap-xxhdpi/sleep.png","/images/icons/sleep/res/mipmap-xxxhdpi/sleep.png","/images/icons/ui/add_18dp.png","/images/icons/ui/delete_18dp.png","/images/icons/ui/edit_18dp.png","/images/icons/wee/web_hi_res_512.png","/images/icons/wee/res/mipmap-hdpi/wee.png","/images/icons/wee/res/mipmap-mdpi/wee.png","/images/icons/wee/res/mipmap-xhdpi/wee.png","/images/icons/wee/res/mipmap-xxhdpi/wee.png","/images/icons/wee/res/mipmap-xxxhdpi/wee.png","/styles/main.css","/streams-6a7ac95a.js","/streams-abe0310a.js"];const W=new class{get routes(){return r}registerRoute(e,t){r.push({route:e,controller:t})}resolve(e){const{pathname:t}=e;for(let{route:e,controller:n}of r)if(t.match(e))return n;return i}};W.registerRoute(b.route,new b),W.registerRoute(A.route,new A),W.registerRoute(I.route,new I),W.registerRoute(k.route,new k),W.registerRoute(B.route,new B),W.registerRoute(C.route,new C),self.onfetch=e=>{const{request:t}=e,r=new URL(t.url),i=W.resolve(r);if(i instanceof n)return;const s=i.getView(r,t);return s?e.respondWith(s.then(e=>{if(e instanceof Response)return e;return new Response(e||"Not Found",{status:e?200:404,headers:{"Content-Type":"text/html; charset=utf-8"}})}).catch(e=>new Response(e.toString(),{status:404,headers:{"Content-Type":"text/html"}}))):void 0},self.oninstall=async e=>{e.waitUntil(caches.open("v1").then(async e=>e.addAll(L))),self.skipWaiting()},self.onactivate=e=>{e.waitUntil(clients.claim())};
//# sourceMappingURL=sw.js.map
