{"version":3,"file":"sw.js","sources":["../../controllers/lib/controller.js","../../controllers/notfound.js","../../app.js","../../controllers/exception/notfound.js","../../controllers/helpers/formData.js","../../controllers/feed.js","../../controllers/index.js","../../controllers/sleep.js","../../controllers/wee.js","../../controllers/poop.js","../../views/lib/florawg.js","../../views/partials/head.js","../../views/partials/body.js","../../views/helpers/aggregate.js","../../views/helpers/timezone.js","../../views/feed.js","../../models/config/config.js","../../models/lib/configmanager.js","../../models/lib/database.js","../../models/lib/model.js","../../models/log.js","../../controllers/client/static.js","../../client/sw.js","../../views/index.js","../../models/feed.js","../../views/sleep.js","../../models/sleep.js","../../views/poop.js","../../models/poop.js","../../views/wee.js","../../models/wee.js"],"sourcesContent":["class MethodNotFound {\n  constructor(message) {\n    //super(message);\n    this.name = \"MethodNotFound\";\n  }\n}\n\nexport class Controller {\n  constructor(view, model) {\n    this.view = view;\n    this.Model = model;\n  }\n\n  getView(url, request) {\n    const { pathname } = new URL(url);\n    const { method } = request;\n    const route = this.constructor.route;\n    const idMatch = pathname.match(`${route}/(.+)/`);\n\n    // The instance of the controller must implement these functions;\n    if (method === \"GET\") {\n      const idMatch = pathname.match(`${route}/(.+)/`);\n      if (pathname.match(`${route}/new`)) {\n        return this.create(url);\n      } else if (pathname.match(`${route}/(.+)/edit$`)) {\n        return this.edit(url, idMatch[1], request);\n      } else if (pathname.match(`${route}/(.+)/`)) {\n        return this.get(url, idMatch[1], request);\n      }\n      return this.getAll(url, request);\n    } else if (method === \"POST\") {\n      if (pathname.match(`${route}/(.+)/edit$`)) {\n        return this.put(url, idMatch[1], request);\n      } else if (pathname.match(`${route}/(.+)/delete$`)) {\n        const idMatch = pathname.match(`${route}/(.+)/`);\n        return this.del(url, idMatch[1], request);\n      } else if (pathname.match(`${route}/*$`)) {\n        return this.post(url, request);\n      }\n    } else if (method === \"PUT\") {\n      return this.put(url, idMatch[1], request);\n    } else if (method === \"DELETE\") {\n      const idMatch = pathname.match(`${route}/(.+)/`);\n      return this.del(url, idMatch[1], request);\n    }\n  }\n\n  redirect(url) {\n    return Response.redirect(url, \"302\");\n  }\n\n  create(url) {\n    throw new MethodNotFound(\"create\");\n  }\n\n  edit(url) {\n    throw new MethodNotFound(\"\");\n  }\n\n  get(url) {\n    throw new MethodNotFound(\"get\");\n  }\n\n  getAll(url) {\n    throw new MethodNotFound(\"getAll\");\n  }\n\n  post(url) {\n    throw new MethodNotFound(\"post\");\n  }\n\n  del(url) {\n    throw new MethodNotFound(\"delete\");\n  }\n}\n","import { Controller } from \"./lib/controller.js\";\n\nexport class NotFoundController extends Controller {\n  render(url) {}\n}\n","import { NotFoundController } from './controllers/notfound.js'\n\nexport class App {\n  get routes() {\n    return routes;\n  }\n\n  registerRoute(route, controller) {\n    routes.push({route, controller});\n  }\n\n  resolve(url) {\n    const { pathname } = url;\n    for(let {route, controller} of routes) {\n      if (pathname.match(route)) {\n        return controller;\n      }\n    }\n\n    return routeNotFound;\n  }\n}\n\nconst routes = [];\nconst routeNotFound = new NotFoundController;","export class NotFoundException extends Error {\n  constructor(message) {\n    super(message);\n  }\n}\n","// Safari's messed up formData on the request object.\n\nexport const getFormData = async (request) => {\n  const data = await request.arrayBuffer();\n  const decoder = new TextDecoder(\"utf-8\");\n  const params = new URLSearchParams(`?${decoder.decode(data)}`);\n\n  return params;\n};\n","import { Controller } from \"./lib/controller.js\";\nimport { NotFoundException } from \"./exception/notfound.js\";\nimport { getFormData } from \"./helpers/formData.js\";\n\nexport class FeedController extends Controller {\n  static get route() {\n    return \"/feeds\";\n  }\n\n  async create(url, request) {\n    // Show the create an entry UI.\n    return this.view.create(new this.Model());\n  }\n\n  async post(url, request) {\n    const formData = await getFormData(request);\n    const startDate = formData.get(\"startDate\");\n    const startTime = formData.get(\"startTime\");\n    const endDate = formData.get(\"endDate\");\n    const endTime = formData.get(\"endTime\");\n\n    const start = new Date(`${startDate}T${startTime}`);\n    const end =\n      !!endDate && !!endTime ? new Date(`${endDate}T${endTime}`) : undefined;\n\n    const feed = new this.Model({ startTime: start, endTime: end });\n\n    feed.put();\n\n    return this.redirect(FeedController.route);\n  }\n\n  async edit(url, id) {\n    // Get the Data.\n    let model = await this.Model.get(parseInt(id, 10));\n    const extras = {\n      notFound: false,\n    };\n\n    if (!!model == false) {\n      model = new this.Model();\n      extras.notFound = true;\n    }\n\n    return this.view.edit(model, extras);\n  }\n\n  async put(url, id, request) {\n    // Get the Data.\n    const feed = await this.Model.get(parseInt(id, 10));\n\n    if (!!feed == false) {\n      return this.redirect(FeedController.route);\n    }\n\n    const formData = await getFormData(request);\n\n    const startDate = formData.get(\"startDate\");\n    const startTime = formData.get(\"startTime\");\n    const endDate = formData.get(\"endDate\");\n    const endTime = formData.get(\"endTime\");\n\n    feed.startTime = new Date(`${startDate}T${startTime}`);\n    feed.endTime =\n      !!endDate && !!endTime ? new Date(`${endDate}T${endTime}`) : undefined;\n\n    feed.put();\n\n    return this.redirect(FeedController.route);\n  }\n\n  async get(url, id) {\n    // Get the Data.\n    const model = await this.Model.get(parseInt(id, 10));\n    const extras = { notFound: false };\n\n    if (!!model == false) {\n      model = new this.Model();\n      extras.notFound = true;\n    }\n\n    return this.view.get(model, extras);\n  }\n\n  async getAll(url) {\n    // Get the Data.....\n    const feeds =\n      (await this.Model.getAll(\"type,startTime\", {\n        filter: [\n          \"BETWEEN\",\n          [\"feed\", new Date(0)],\n          [\"feed\", new Date(99999999999999)],\n        ],\n        order: this.Model.DESCENDING,\n      })) || [];\n\n    // Get the View.\n    return this.view.getAll(feeds);\n  }\n\n  async del(url, id, request) {\n    // Get the Data.\n    const model = await this.Model.get(parseInt(id, 10));\n    const { referrer } = request;\n\n    if (!!model == false) throw new NotFoundException(`Feed ${id} not found`);\n\n    await model.delete();\n    return this.redirect(referrer || this.constructor.route);\n  }\n}\n","import { Controller } from \"./lib/controller.js\";\n\nexport class IndexController extends Controller {\n  static get route() {\n    return \"^/$\";\n  }\n\n  async getAll(url) {\n    const logs =\n      (await this.Model.getAll(\"startTime,type\", {\n        filter: [\"BETWEEN\", [new Date(0), \"a\"], [new Date(9999999999999), \"z\"]],\n        order: this.Model.DESCENDING,\n      })) || [];\n\n    return this.view.getAll(logs);\n  }\n}\n","import { Controller } from \"./lib/controller.js\";\nimport { NotFoundException } from \"./exception/notfound.js\";\nimport { getFormData } from \"./helpers/formData.js\";\n\nexport class SleepController extends Controller {\n  static get route() {\n    return \"/sleeps\";\n  }\n\n  async create(url, request) {\n    // Show the create an entry UI.\n    return this.view.create(new this.Model());\n  }\n\n  async post(url, request) {\n    const formData = await getFormData(request);\n\n    const startDate = formData.get(\"startDate\");\n    const startTime = formData.get(\"startTime\");\n    const endDate = formData.get(\"endDate\");\n    const endTime = formData.get(\"endTime\");\n\n    const start = new Date(`${startDate}T${startTime}`);\n    const end =\n      !!endDate && !!endTime ? new Date(`${endDate}T${endTime}`) : undefined;\n\n    const sleep = new this.Model({ startTime: start, endTime: end });\n\n    sleep.put();\n\n    return this.redirect(SleepController.route);\n  }\n\n  async edit(url, id) {\n    // Get the Data.\n    let model = await this.Model.get(parseInt(id, 10));\n    const extras = {\n      notFound: false,\n    };\n\n    if (!!model == false) {\n      model = new this.Model();\n      extras.notFound = true;\n    }\n\n    return this.view.edit(model, extras);\n  }\n\n  async put(url, id, request) {\n    // Get the Data.\n    const sleep = await this.Model.get(parseInt(id, 10));\n\n    if (!!sleep == false) throw new NotFoundException(`Sleep ${id} not found`);\n\n    const formData = await getFormData(request);\n\n    const startDate = formData.get(\"startDate\");\n    const startTime = formData.get(\"startTime\");\n    const endDate = formData.get(\"endDate\");\n    const endTime = formData.get(\"endTime\");\n\n    sleep.startTime = new Date(`${startDate}T${startTime}`);\n    sleep.endTime =\n      !!endDate && !!endTime ? new Date(`${endDate}T${endTime}`) : undefined;\n\n    sleep.put();\n\n    return this.redirect(SleepController.route);\n  }\n\n  async get(url, id) {\n    // Get the Data.\n    const model = await this.Model.get(parseInt(id, 10));\n    const extras = { notFound: false };\n\n    if (!!model == false) {\n      model = new this.Model();\n      extras.notFound = true;\n    }\n\n    return this.view.get(model, extras);\n  }\n\n  async getAll(url) {\n    // Get the Data.....\n    const sleeps =\n      (await this.Model.getAll(\"type,startTime\", {\n        filter: [\n          \"BETWEEN\",\n          [\"sleep\", new Date(0)],\n          [\"sleep\", new Date(99999999999999)],\n        ],\n        order: this.Model.DESCENDING,\n      })) || [];\n\n    return this.view.getAll(sleeps);\n  }\n\n  async del(url, id, request) {\n    // Get the Data.\n    const model = await this.Model.get(parseInt(id, 10));\n    const { referrer } = request;\n\n    if (!!model == false) throw new NotFoundException(`Sleep ${id} not found`);\n\n    await model.delete();\n    return this.redirect(referrer || this.constructor.route);\n  }\n}\n","import { Controller } from \"./lib/controller.js\";\nimport { NotFoundException } from \"./exception/notfound.js\";\nimport { getFormData } from \"./helpers/formData.js\";\n\nexport class WeeController extends Controller {\n  static get route() {\n    return \"/wees\";\n  }\n\n  async create(url, request) {\n    return this.view.create(new this.Model());\n  }\n\n  async post(url, request) {\n    const formData = await getFormData(request);\n\n    const startDate = formData.get(\"startDate\");\n    const startTime = formData.get(\"startTime\");\n\n    const start = `${startDate}T${startTime}`;\n\n    const wee = new this.Model({ startTime: start });\n\n    wee.put();\n\n    return this.redirect(WeeController.route);\n  }\n\n  async edit(url, id) {\n    // Get the Data.\n    let model = await this.Model.get(parseInt(id, 10));\n    const extras = {\n      notFound: false,\n    };\n\n    if (!!model == false) {\n      model = new this.Model();\n      extras.notFound = true;\n    }\n\n    return this.view.edit(model, extras);\n  }\n\n  async put(url, id, request) {\n    // Get the Data.\n    const wee = await this.Model.get(parseInt(id, 10));\n\n    if (!!wee == false) throw new NotFoundException(`Wee ${id} not found`);\n\n    const formData = await getFormData(request);\n\n    const startDate = formData.get(\"startDate\");\n    const startTime = formData.get(\"startTime\");\n\n    wee.startTime = new Date(`${startDate}T${startTime}`);\n\n    wee.put();\n\n    return this.redirect(WeeController.route);\n  }\n\n  async get(url, id) {\n    // Get the Data.\n    const model = await this.Model.get(parseInt(id, 10));\n    const extras = { notFound: false };\n\n    if (!!model == false) {\n      model = new this.Model();\n      extras.notFound = true;\n    }\n\n    return this.view.get(model, extras);\n  }\n\n  async getAll(url) {\n    // Get the Data.....\n    const wees =\n      (await this.Model.getAll(\"type,startTime\", {\n        filter: [\n          \"BETWEEN\",\n          [\"wee\", new Date(0)],\n          [\"wee\", new Date(99999999999999)],\n        ],\n        order: this.Model.DESCENDING,\n      })) || [];\n\n    return this.view.getAll(wees);\n  }\n\n  async del(url, id, request) {\n    // Get the Data.\n    const model = await this.Model.get(parseInt(id, 10));\n    const { referrer } = request;\n\n    if (!!model == false) throw new NotFoundException(`Wee ${id} not found`);\n\n    await model.delete();\n    return this.redirect(referrer || this.constructor.route);\n  }\n}\n","import { Controller } from \"./lib/controller.js\";\nimport { NotFoundException } from \"./exception/notfound.js\";\nimport { getFormData } from \"./helpers/formData.js\";\n\nexport class PoopController extends Controller {\n  static get route() {\n    return \"/poops\";\n  }\n\n  async create(url, request) {\n    // Show the create an entry UI.\n    return this.view.create(new this.Model());\n  }\n\n  async post(url, request) {\n    const formData = await getFormData(request);\n\n    const startDate = formData.get(\"startDate\");\n    const startTime = formData.get(\"startTime\");\n\n    const start = `${startDate}T${startTime}`;\n\n    const poop = new this.Model({ startTime: start });\n\n    poop.put();\n\n    return this.redirect(PoopController.route);\n  }\n\n  async edit(url, id) {\n    // Get the Data.\n    let model = await this.Model.get(parseInt(id, 10));\n    const extras = {\n      notFound: false,\n    };\n\n    if (!!model == false) {\n      model = new this.Model();\n      extras.notFound = true;\n    }\n\n    return this.view.edit(model, extras);\n  }\n\n  async put(url, id, request) {\n    // Get the Data.\n    const poop = await this.Model.get(parseInt(id, 10));\n\n    if (!!poop == false) throw new NotFoundException(`Poop ${id} not found`);\n\n    const formData = await getFormData(request);\n\n    const startDate = formData.get(\"startDate\");\n    const startTime = formData.get(\"startTime\");\n\n    poop.startTime = new Date(`${startDate}T${startTime}`);\n\n    poop.put();\n\n    return this.redirect(PoopController.route);\n  }\n\n  async get(url, id) {\n    // Get the Data.\n    const model = await this.Model.get(parseInt(id, 10));\n    const extras = { notFound: false };\n\n    if (!!model == false) {\n      model = new this.Model();\n      extras.notFound = true;\n    }\n\n    return this.view.get(model, extras);\n  }\n\n  async getAll(url) {\n    // Get the Data.....\n    const poops =\n      (await this.Model.getAll(\"type,startTime\", {\n        filter: [\n          \"BETWEEN\",\n          [\"poop\", new Date(0)],\n          [\"poop\", new Date(99999999999999)],\n        ],\n        order: this.Model.DESCENDING,\n      })) || [];\n\n    return this.view.getAll(poops);\n  }\n\n  async del(url, id, request) {\n    // Get the Data.\n    const model = await this.Model.get(parseInt(id, 10));\n    const { referrer } = request;\n\n    if (!!model == false) throw new NotFoundException(`Poop ${id} not found`);\n\n    await model.delete();\n    return this.redirect(referrer || this.constructor.route);\n  }\n}\n","const encoder = new TextEncoder();\n\nconst pipeInto = async (from, controller) => {\n  const reader = from.getReader();\n\n  return reader.read().then(function process(result) {\n    if (result.done) {\n      return;\n    }\n    if (!!result.value) {\n      controller.enqueue(result.value);\n    }\n    return reader.read().then(process);\n  });\n};\n\nconst enqueueItem = async (val, controller) => {\n  if (val instanceof globalThis.ReadableStream) {\n    await pipeInto(val, controller);\n  } else if (val instanceof Promise) {\n    let newVal;\n    newVal = await val;\n\n    if (newVal instanceof globalThis.ReadableStream) {\n      await pipeInto(newVal, controller);\n    } else {\n      await enqueueItem(newVal, controller);\n    }\n  } else {\n    if (Array.isArray(val)) {\n      for (let item of val) {\n        await enqueueItem(item, controller);\n      }\n    } else if (!!val) {\n      controller.enqueue(encoder.encode(val));\n    }\n  }\n};\n\nexport default async (strings, ...values) => {\n  if (\"ReadableStream\" in globalThis === false) {\n    // For node not supporting streams properly..... This should tree-shake away\n    globalThis = {\n      ...globalThis,\n      ...(await import(\"./private/streams/streams.js\")),\n    };\n  }\n  return new globalThis.ReadableStream({\n    start(controller) {\n      async function push() {\n        let i = 0;\n        while (i < values.length) {\n          let html = strings[i];\n          controller.enqueue(encoder.encode(html));\n          await enqueueItem(values[i], controller);\n\n          i++;\n        }\n        controller.enqueue(encoder.encode(strings[i]));\n        controller.close();\n      }\n\n      push();\n    },\n  });\n};\n","import html from \"../lib/florawg.js\";\n\nexport const head = (data, body) => {\n  return html`<!DOCTYPE html>\n    <html>\n      <head>\n        <title>Baby Logger</title>\n        <script src=\"/client.js\" type=\"module\" defer></script>\n        <link rel=\"stylesheet\" href=\"/styles/main.css\" />\n        <link rel=\"manifest\" href=\"/manifest.json\" />\n        <link\n          rel=\"shortcut icon\"\n          href=\"/images/icons/log/res/mipmap-hdpi/log.png\"\n        />\n        <meta name=\"viewport\" content=\"width=device-width\" />\n      </head>\n      ${body}\n    </html>`;\n};\n","import html from \"../lib/florawg.js\";\n\nexport const body = (data, items) => {\n  return html`\n    <header class=\"${data.type.toLowerCase()}\">\n      <img src=\"/images/icons/log/res/mipmap-xhdpi/log.png\" />\n      <nav>\n        <a href=\"/\" class=\"all\">All</a>\n        <a href=\"/feeds\" class=\"feed\">Feeds</a>\n        <a href=\"/sleeps\" class=\"sleep\">Sleeps</a>\n        <a href=\"/poops\" class=\"poop\">Poops</a>\n        <a href=\"/wees\" class=\"wee\">Wees</a>\n      </nav>\n    </header>\n    <main>\n      <header>\n        <h2>${data.header}</h2>\n      </header>\n      <section>\n        ${items}\n      </section>\n    </main>\n    <footer>\n      <nav id=\"add-nav\">\n        <a href=\"/feeds/new\" title=\"Add a feed\">🍼</a>\n        <a href=\"/sleeps/new\" title=\"Add a Sleep\">💤</a>\n        <a href=\"/poops/new\" title=\"Add a Poop\">💩</a>\n        <a href=\"/wees/new\" title=\"Add a Wee\">⛲️</a>\n      </nav>\n      <a href=\"#remove-nav\"><img src=\"/images/icons/ui/remove_white_18dp.svg\"></a>\n      <a href=\"#add-nav\"><img src=\"/images/icons/ui/add_white_18dp.svg\" title=\"Add\"></a>\n    </footer>\n  `;\n};\n","import template from \"../lib/florawg.js\";\n\nif (\"navigator\" in globalThis === false)\n  globalThis.navigator = {\n    language: \"en-GB\",\n  };\n\nconst calculateDuration = (ms) => {\n  const hours = Math.floor(ms / (1000 * 60 * 60));\n  ms -= hours * 1000 * 60 * 60;\n  const minutes = Math.floor(ms / (1000 * 60));\n\n  const hourStr = hours == 1 ? \"Hour\" : \"Hours\";\n  const minuteStr = minutes == 1 ? \"Minute\" : \"Minutes\";\n  return `${hours} ${hourStr} ${minutes} ${minuteStr}`;\n};\n\nexport const aggregate = (items) => {\n  const templates = [];\n  const lang = navigator.language;\n  const options = {\n    weekday: \"long\",\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n  };\n  let dayAggregate = {};\n  let timeAggregate = {};\n  let currentDay;\n  let firstDay = true;\n  for (let item of items) {\n    if (item.startTime.toLocaleDateString(lang, options) != currentDay) {\n      if (firstDay == false) {\n        templates.push(\n          template`<div>${Object.entries(dayAggregate)\n            .map(([key, value]) => `${value} ${key}${value > 1 ? \"s\" : \"\"}`)\n            .join(\", \")}</div>`\n        );\n        templates.push(\n          template`<div>${Object.entries(timeAggregate)\n            .map(([key, value]) => `${calculateDuration(value)} ${key}ing`)\n            .join(\", \")}</div>`\n        );\n\n        dayAggregate = {};\n      }\n      firstDay = false;\n      currentDay = item.startTime.toLocaleDateString(lang, options);\n      templates.push(template`<h3>${currentDay}</h3>`);\n    }\n\n    if (item.type in dayAggregate == false) dayAggregate[item.type] = 0;\n    dayAggregate[item.type]++;\n\n    if (item.isDuration && item.hasFinished) {\n      if (item.type in timeAggregate == false) timeAggregate[item.type] = 0;\n      timeAggregate[item.type] += item.duration;\n    }\n\n    templates.push(template`<div class=\"row\">\n      <img src=\"/images/icons/${item.type}/res/mipmap-xxhdpi/${\n      item.type\n    }.png\" alt=\"${item.type}\"><span>\n        ${item.startTime.toLocaleTimeString(navigator.language, {\n          hour: \"numeric\",\n          minute: \"numeric\",\n        })} \n        ${\n          item.isDuration\n            ? `- ${calculateDuration(item.duration)} ${\n                item.hasFinished === false ? `(Still ${item.type}ing)` : ``\n              } `\n            : ``\n        }\n        </span>\n        <a href=\"/${item.type}s/${\n      item.id\n    }/edit\" title=\"Edit ${item.type} (${item.startTime})\"><img src=\"/images/icons/ui/edit_18dp.png\"></a><button class=\"delete row\" form=\"deleteForm${\n      item.id\n    }\"><img src=\"/images/icons/ui/delete_18dp.png\"></button>\n        <form id=\"deleteForm${\n          item.id\n        }\" class=\"deleteForm\" method=\"POST\" action=\"/${item.type}s/${\n      item.id\n    }/delete\"></form>\n    </div>`);\n  }\n  // Add a final aggregate.\n  templates.push(\n    template`<div>${Object.entries(dayAggregate)\n      .map(([key, value]) => `${value} ${key}${value > 1 ? \"s\" : \"\"}`)\n      .join(\", \")}</div>`\n  );\n  templates.push(\n    template`<div>${Object.entries(timeAggregate)\n      .map(([key, value]) => `${calculateDuration(value)} ${key}ing`)\n      .join(\", \")}</div>`\n  );\n\n  return templates;\n};\n","export const correctISOTime = (date) => {\n  if (!!date == false) {\n    return;\n  }\n  const tzoffset = new Date().getTimezoneOffset() * 60000;\n  return new Date(date - tzoffset).toISOString().replace(/:(\\d+).(\\d+)Z$/, \"\");\n};\n\nexport const getDate = (date) => {\n  if (!!date == false) {\n    return;\n  }\n\n  if (date instanceof Date === false) date = new Date(date);\n  return `${date.getFullYear()}-${(date.getMonth() + 1)\n    .toString()\n    .padStart(2, 0)}-${date.getDate().toString().padStart(2, 0)}`;\n};\n\nexport const getTime = (date) => {\n  if (!!date == false) {\n    return;\n  }\n\n  if (date instanceof Date === false) date = new Date(date);\n  return `${date\n    .getHours()\n    .toString()\n    .padStart(2, 0)}:${date.getMinutes().toString().padStart(2, 0)}`;\n};\n","import { head } from \"./partials/head.js\";\nimport { body } from \"./partials/body.js\";\nimport html from \"./lib/florawg.js\";\nimport { aggregate } from \"./helpers/aggregate.js\";\nimport { correctISOTime, getDate, getTime } from \"./helpers/timezone.js\";\n\nif (\"navigator\" in globalThis === false)\n  globalThis.navigator = {\n    language: \"en-GB\",\n  };\nexport class FeedView {\n  async getAll(data) {\n    data.type = \"Feed\";\n    data.header = \"Feeds\";\n\n    return html`${head(data, body(data, html`${aggregate(data)}`))}`;\n  }\n\n  async get(data, extras) {\n    data.header = \"Feed\";\n\n    const lang = navigator.language;\n    const options = {\n      weekday: \"long\",\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n      hour: \"numeric\",\n      minute: \"numeric\",\n    };\n\n    return html`${head(\n      data,\n      body(\n        data,\n        html`${extras.notFound\n            ? `<input type=\"hidden\" name=\"data-loaded\" value=\"${\n                !!extras.notFound === false\n              }\">`\n            : \"\"}\n          <div>\n            Start time:\n            ${extras.notFound == false\n              ? data.startTime.toLocaleString(lang, options)\n              : \"\"}\n          </div>\n          <div>\n            End time:\n            ${!!data.endTime ? data.endTime.toLocaleString(lang, options) : \"\"}\n          </div>\n          <a href=\"/${data.type}s/${data.id}/edit\"\n            ><img src=\"/images/icons/ui/edit_18dp.png\"\n          /></a>\n          <div class=\"row\">\n            <form\n              method=\"POST\"\n              id=\"deleteForm\"\n              action=\"/${data.type}s/${data.id}/delete\"\n            ></form>\n            <button form=\"deleteForm\" class=\"delete\">\n              <img src=\"/images/icons/ui/delete_18dp.png\" />\n            </button>\n          </div>`\n      )\n    )}`;\n  }\n\n  async create(data) {\n    data.header = \"Add a Feed\";\n\n    return html`${head(\n      data,\n      body(\n        data,\n        html`<div class=\"form\">\n          <form method=\"POST\" action=\"/${data.type}s\">\n            <div>\n              <label for=\"startDate\"\n                >Start time:\n                <input\n                  type=\"date\"\n                  name=\"startDate\"\n                  pattern=\"[0-9]{4}-[0-9]{2}-[0-9]{2}\"\n                  placeholder=\"YYYY-MM-DD\"\n                  value=\"${getDate(correctISOTime(new Date()))}\"\n                />\n                <input\n                  type=\"time\"\n                  name=\"startTime\"\n                  pattern=\"[0-9]{2}:[0-9]{2}\"\n                  placeholder=\"HH:MM\"\n                  value=\"${getTime(correctISOTime(new Date()))}\"\n                />\n              </label>\n            </div>\n            <div>\n              <label for=\"endDate\"\n                >End time:\n                <input\n                  type=\"date\"\n                  name=\"endDate\"\n                  pattern=\"[0-9]{4}-[0-9]{2}-[0-9]{2}\"\n                  placeholder=\"YYYY-MM-DD\"\n                />\n                <input\n                  type=\"time\"\n                  name=\"endTime\"\n                  pattern=\"[0-9]{2}:[0-9]{2}\"\n                  placeholder=\"HH:MM\"\n                />\n              </label>\n            </div>\n            <div class=\"controls\">\n              <input type=\"submit\" value=\"Save\" />\n            </div>\n          </form>\n        </div>`\n      )\n    )}`;\n  }\n\n  async edit(data, extras) {\n    data.header = \"Update a Feed\";\n\n    return html`${head(\n      data,\n      body(\n        data,\n        html`<div class=\"form\">\n          ${extras.notFound\n            ? `<input type=\"hidden\" name=\"data-loaded\" value=\"${\n                !!extras.notFound === false\n              }\">`\n            : \"\"}\n          <form\n            method=\"POST\"\n            id=\"deleteForm\"\n            action=\"/${data.type}s/${data.id}/delete\"\n          ></form>\n          <form\n            method=\"POST\"\n            id=\"editForm\"\n            action=\"/${data.type}s/${data.id}/edit\"\n          ></form>\n          <div>\n            <div>\n              <label for=\"startDate\"\n                >Start time:\n                <input\n                  type=\"date\"\n                  name=\"startDate\"\n                  form=\"editForm\"\n                  value=\"${getDate(\n                    correctISOTime(\n                      extras.notFound == false ? data.startTime : undefined\n                    )\n                  )}\"\n                />\n                <input\n                  type=\"time\"\n                  name=\"startTime\"\n                  form=\"editForm\"\n                  value=\"${getTime(\n                    correctISOTime(\n                      extras.notFound == false ? data.startTime : undefined\n                    )\n                  )}\"\n                />\n              </label>\n            </div>\n            <div>\n              <label for=\"endDate\"\n                >End time:\n                <input\n                  type=\"date\"\n                  name=\"endDate\"\n                  form=\"editForm\"\n                  value=\"${getDate(\n                    correctISOTime(\n                      extras.notFound == false\n                        ? data.endTime || new Date()\n                        : undefined\n                    )\n                  )}\"\n                />\n                <input\n                  type=\"time\"\n                  name=\"endTime\"\n                  form=\"editForm\"\n                  value=\"${getTime(\n                    correctISOTime(\n                      extras.notFound == false\n                        ? data.endTime || new Date()\n                        : undefined\n                    )\n                  )}\"\n                />\n              </label>\n              <div>\n                <div class=\"controls\">\n                  <button form=\"deleteForm\" class=\"delete\">\n                    <img src=\"/images/icons/ui/delete_18dp.png\" />\n                  </button>\n                  <input type=\"submit\" form=\"editForm\" value=\"Save\" />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div> `\n      )\n    )}`;\n  }\n}\n","/**\n *\n * Copyright 2020 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst Config = {\n  name: \"babylog\",\n  version: 6,\n  stores: {\n    Log: {\n      properties: {\n        autoIncrement: true,\n        keyPath: \"id\",\n      },\n      indexes: {\n        \"type,startTime\": { unique: true },\n        \"startTime,type\": { unique: true },\n      },\n    },\n  },\n};\n\nexport default Config;\n","/**\n *\n * Copyright 2015 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Config from \"../config/config.js\";\n\nexport default function ConfigManagerInstance() {\n  if (typeof globalThis.ConfigManagerInstance_ !== \"undefined\")\n    return Promise.resolve(globalThis.ConfigManagerInstance_);\n\n  globalThis.ConfigManagerInstance_ = new ConfigManager();\n\n  return Promise.resolve(globalThis.ConfigManagerInstance_);\n}\n\nclass ConfigManager {\n  constructor() {\n    this.config = Config;\n  }\n\n  set config(c) {\n    this.config_ = c;\n  }\n\n  get config() {\n    return this.config_;\n  }\n\n  getStore(storeName) {\n    return this.config_.stores[storeName];\n  }\n}\n","/**\n * Copyright 2015 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport ConfigManagerInstance from \"./configmanager.js\";\n\nexport function DatabaseInstance() {\n  if (typeof globalThis.DatabaseInstance_ !== \"undefined\")\n    return Promise.resolve(globalThis.DatabaseInstance_);\n\n  globalThis.DatabaseInstance_ = new Database();\n\n  return Promise.resolve(globalThis.DatabaseInstance_);\n}\n\nexport function hasSupport() {\n  return \"indexedDB\" in globalThis;\n}\n\nconst parseFilter = ([operator, ...values]) => {\n  // >= 10\n  // BETWEEN 10,20\n  const [lower, upper] = values;\n\n  switch (operator) {\n    case \"BETWEEN\":\n      return IDBKeyRange.bound(lower, upper, false, false);\n    case \"=\":\n      return IDBKeyRange.only(lower);\n    case \"<\":\n      return IDBKeyRange.upperBound(lower);\n    case \"<=\":\n      return IDBKeyRange.upperBound(lower, true);\n    case \">\":\n      return IDBKeyRange.lowerBound(lower);\n    case \">=\":\n      return IDBKeyRange.lowerBound(lower, true);\n    default:\n      return; // Just return if we don't recognise the combination\n  }\n};\n\nclass Database {\n  constructor() {\n    ConfigManagerInstance().then((configManager) => {\n      var config = configManager.config;\n\n      this.db_ = null;\n      this.name_ = config.name;\n      this.version_ = config.version;\n      this.stores_ = config.stores;\n    });\n  }\n\n  getStore(storeName) {\n    if (!this.stores_[storeName])\n      throw 'There is no store with name \"' + storeName + '\"';\n\n    return this.stores_[storeName];\n  }\n\n  async open() {\n    if (this.db_) return Promise.resolve(this.db_);\n\n    return new Promise((resolve, reject) => {\n      var dbOpen = indexedDB.open(this.name_, this.version_);\n\n      dbOpen.onupgradeneeded = (e) => {\n        this.db_ = e.target.result;\n\n        var transaction = e.target.transaction;\n        var storeNames = Object.keys(this.stores_);\n        var storeName;\n\n        for (var s = 0; s < storeNames.length; s++) {\n          var dbStore;\n\n          storeName = storeNames[s];\n\n          // If the store already exists\n          if (this.db_.objectStoreNames.contains(storeName)) {\n            // Check to see if the store should be deleted.\n            // If so delete, and if not skip to the next store.\n            if (this.stores_[storeName].deleteOnUpgrade) {\n              this.db_.deleteObjectStore(storeName);\n              continue;\n            }\n\n            dbStore = transaction.objectStore(storeName);\n          } else {\n            dbStore = this.db_.createObjectStore(\n              storeName,\n              this.stores_[storeName].properties\n            );\n          }\n\n          if (typeof this.stores_[storeName].indexes !== \"undefined\") {\n            var indexes = this.stores_[storeName].indexes;\n            var indexNames = Object.keys(indexes);\n            var existingIndexNames = dbStore.indexNames;\n\n            var index;\n\n            for (var i = 0; i < indexNames.length; i++) {\n              index = indexNames[i];\n              if (existingIndexNames.contains(index) === false) {\n                // Only add Index if it doesn't exist\n                dbStore.createIndex(index, index.split(\",\"), indexes[index]);\n              }\n            }\n\n            // Delete indexes that are removed.\n            for (var i = 0; i < dbStore.indexNames.length; i++) {\n              index = dbStore.indexNames[i];\n              if (indexNames.indexOf(index) < 0) {\n                dbStore.deleteIndex(index);\n              }\n            }\n          }\n        }\n      };\n\n      dbOpen.onsuccess = (e) => {\n        this.db_ = e.target.result;\n        resolve(this.db_);\n      };\n\n      dbOpen.onerror = (e) => {\n        reject(e);\n      };\n    });\n  }\n\n  close() {\n    return new Promise((resolve, reject) => {\n      if (!this.db_) reject(\"No database connection\");\n\n      this.db_.close();\n      resolve(this.db_);\n    });\n  }\n\n  nuke() {\n    return new Promise((resolve, reject) => {\n      console.log(\"Nuking... \" + this.name_);\n\n      this.close();\n\n      var dbTransaction = indexedDB.deleteDatabase(this.name_);\n      dbTransaction.onsuccess = (e) => {\n        console.log(\"Nuked...\");\n        resolve(e);\n      };\n\n      dbTransaction.onerror = (e) => {\n        reject(e);\n      };\n    });\n  }\n\n  put(storeName, value, key) {\n    return this.open().then((db) => {\n      return new Promise((resolve, reject) => {\n        var dbTransaction = db.transaction(storeName, \"readwrite\");\n        var dbStore = dbTransaction.objectStore(storeName);\n        var dbRequest = dbStore.put(value, key);\n\n        dbTransaction.oncomplete = (e) => {\n          resolve(dbRequest.result);\n        };\n\n        dbTransaction.onabort = dbTransaction.onerror = (e) => {\n          reject(e);\n        };\n      });\n    });\n  }\n\n  get(storeName, value) {\n    return this.open().then((db) => {\n      return new Promise((resolve, reject) => {\n        var dbTransaction = db.transaction(storeName, \"readonly\");\n        var dbStore = dbTransaction.objectStore(storeName);\n        var dbStoreRequest;\n\n        dbTransaction.oncomplete = (e) => {\n          resolve(dbStoreRequest.result);\n        };\n\n        dbTransaction.onabort = dbTransaction.onerror = (e) => {\n          reject(e);\n        };\n\n        dbStoreRequest = dbStore.get(value);\n      });\n    });\n  }\n\n  getAll(storeName, index, { filter, order, cmpFunc }) {\n    return this.open().then((db) => {\n      return new Promise((resolve, reject) => {\n        var dbTransaction = db.transaction(storeName, \"readonly\");\n        var dbStore = dbTransaction.objectStore(storeName);\n        var dbCursor;\n        var dbFilter = parseFilter(filter);\n\n        if (typeof order !== \"string\") order = \"next\";\n\n        if (typeof index === \"string\")\n          dbCursor = dbStore.index(index).openCursor(dbFilter, order);\n        else dbCursor = dbStore.openCursor();\n\n        var dbResults = [];\n\n        dbCursor.onsuccess = (e) => {\n          var cursor = e.target.result;\n\n          if (cursor) {\n            if (cmpFunc === undefined || cmpFunc(cursor.value)) {\n              dbResults.push({\n                key: cursor.key,\n                value: cursor.value,\n              });\n            }\n            cursor.continue();\n          } else {\n            resolve(dbResults);\n          }\n        };\n\n        dbCursor.onerror = (e) => {\n          reject(e);\n        };\n      });\n    });\n  }\n\n  delete(storeName, key) {\n    return this.open().then((db) => {\n      return new Promise((resolve, reject) => {\n        var dbTransaction = db.transaction(storeName, \"readwrite\");\n        var dbStore = dbTransaction.objectStore(storeName);\n\n        dbTransaction.oncomplete = (e) => {\n          resolve(e);\n        };\n\n        dbTransaction.onabort = dbTransaction.onerror = (e) => {\n          reject(e);\n        };\n\n        dbStore.delete(key);\n      });\n    });\n  }\n\n  deleteAll(storeName) {\n    return this.open().then((db) => {\n      return new Promise((resolve, reject) => {\n        var dbTransaction = db.transaction(storeName, \"readwrite\");\n        var dbStore = dbTransaction.objectStore(storeName);\n        var dbRequest = dbStore.clear();\n\n        dbRequest.onsuccess = (e) => {\n          resolve(e);\n        };\n\n        dbRequest.onerror = (e) => {\n          reject(e);\n        };\n      });\n    });\n  }\n}\n","/**\n *\n * Copyright 2015 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DatabaseInstance, hasSupport } from \"./database.js\";\nimport ConfigManagerInstance from \"./configmanager.js\";\n\nexport class Model {\n  constructor(key) {\n    this.key = key;\n  }\n\n  static get ASCENDING() {\n    return \"next\";\n  }\n\n  static get DESCENDING() {\n    return \"prev\";\n  }\n\n  static get UPDATED() {\n    return \"Model-updated\";\n  }\n\n  static get storeName() {\n    return \"Model\";\n  }\n\n  static nuke() {\n    return DatabaseInstance()\n      .then((db) => db.close())\n      .then((db) => db.nuke());\n  }\n\n  static get(key) {\n    if (hasSupport() === false) {\n      return Promise.resolve();\n    }\n\n    if (this instanceof Model)\n      Promise.reject(\"Can't call get on Model directly. Inherit first.\");\n\n    return (\n      DatabaseInstance()\n        // Do the query.\n        .then((db) => db.get(this.storeName, key))\n\n        // Wrap the result in the correct class.\n        .then((result) => {\n          return ConfigManagerInstance().then((configManager) => {\n            var store = configManager.getStore(this.storeName);\n\n            if (!result) return;\n\n            var resultKey = key;\n\n            // If the store uses a keypath then reset\n            // the key back to undefined.\n            if (store.properties.keyPath) resultKey = undefined;\n\n            return new this(result, resultKey);\n          });\n        })\n    );\n  }\n\n  /**\n   * Gets all the objects from the database.\n   */\n  static getAll(index, { filter, order, cmpFunc }) {\n    if (hasSupport() === false) {\n      return Promise.resolve();\n    }\n\n    if (this instanceof Model)\n      Promise.reject(\"Can't call getAll on Model directly. Inherit first.\");\n\n    return (\n      DatabaseInstance()\n        // Do the query.\n        .then((db) =>\n          db.getAll(this.storeName, index, { filter, order, cmpFunc })\n        )\n\n        // Wrap all the results in the correct class.\n        .then((results) => {\n          return ConfigManagerInstance().then((configManager) => {\n            var store = configManager.getStore(this.storeName);\n            var results_ = [];\n\n            for (let result of results) {\n              var key = result.key;\n\n              // If the store uses a keypath then reset\n              // the key back to undefined.\n              if (store.properties.keyPath) key = undefined;\n\n              results_.push(new this(result.value, key));\n            }\n\n            return results_;\n          });\n        })\n    );\n  }\n\n  put() {\n    return this.constructor.put(this);\n  }\n\n  /**\n   * Either inserts or update depending on whether the key / keyPath is set.\n   * If the keyPath is set, and a property of the value matches (in-line key)\n   * then the object is updated. If the keyPath is not set and the value's key\n   * is null, then the object is inserted. If the keypath is not set and the\n   * value's key is set then the object is updated.\n   */\n  static put(value) {\n    if (this instanceof Model)\n      Promise.reject(\"Can't call put on Model directly. Inherit first.\");\n\n    return (\n      DatabaseInstance()\n        // Do the query.\n        .then((db) => db.put(this.storeName, value, value.key))\n\n        .then((key) => {\n          return ConfigManagerInstance().then((configManager) => {\n            // Inserting may provide a key. If there is no keyPath set\n            // the object needs to be updated with a key value so it can\n            // be altered and saved again without creating a new record.\n            var store = configManager.getStore(this.storeName);\n\n            var keyPath = store.properties.keyPath;\n\n            if (!keyPath) value.key = key;\n\n            return value;\n          });\n        })\n    );\n  }\n\n  static deleteAll() {\n    if (this instanceof Model)\n      Promise.reject(\"Can't call deleteAll on Model directly. Inherit first.\");\n\n    return DatabaseInstance()\n      .then((db) => db.deleteAll(this.storeName))\n\n      .catch((e) => {\n        // It may be that the store doesn't exist yet, so relax for that one.\n        if (e.name !== \"NotFoundError\") throw e;\n      });\n  }\n\n  delete() {\n    return this.constructor.delete(this);\n  }\n\n  static delete(value) {\n    if (this instanceof Model)\n      Promise.reject(\"Can't call delete on Model directly. Inherit first.\");\n\n    return ConfigManagerInstance().then((configManager) => {\n      // If passed the full object to delete then\n      // grab its key for the delete\n      if (value instanceof this) {\n        var store = configManager.getStore(this.storeName);\n        var keyPath = store.properties.keyPath;\n\n        if (keyPath) value = value[keyPath];\n        else value = value.key;\n      }\n\n      return DatabaseInstance().then((db) => db.delete(this.storeName, value));\n    });\n  }\n}\n","import { Model } from \"./lib/model.js\";\n\nexport class Log extends Model {\n  get hasFinished() {\n    return !!this.endTime;\n  }\n\n  get duration() {\n    let end = this.endTime;\n    if (!!end === false) {\n      end = new Date();\n    }\n    return end - this.startTime;\n  }\n\n  constructor({ id, endTime, startTime, type, isDuration = false }, key) {\n    super(key);\n\n    if (!!id) {\n      this.id = id;\n    }\n\n    if (endTime) {\n      this.endTime = new Date(endTime);\n    }\n\n    if (startTime) {\n      this.startTime = new Date(startTime);\n    }\n\n    this.isDuration = isDuration;\n    this.type = type;\n  }\n\n  static get storeName() {\n    return \"Log\";\n  }\n}\n","import { Controller } from \"../lib/controller.js\";\nimport { version } from \"../../package.json\";\n\n// This will be a server only route;\nexport class StaticController extends Controller {\n  static get route() {\n    return \"\"; // Match everything.\n  }\n\n  constructor(paths) {\n    super();\n  }\n\n  async get(url, id, request) {\n    return caches.open(version).then(cache => {\n      return cache.match(request).then((response) => {\n        if (!!response) return response;\n        return fetch(url);\n      });\n    });\n  }\n\n  /*\n    url: URL\n  */\n  async getAll(url, request) {\n    return this.get(url, undefined, request);\n  }\n}\n","import { App } from \"../app.js\";\n\nimport {\n  IndexController,\n  FeedController,\n  SleepController,\n  WeeController,\n  PoopController,\n} from \"../controllers/_.js\";\nimport {\n  IndexView,\n  FeedView,\n  SleepView,\n  WeeView,\n  PoopView,\n} from \"../views/_.js\";\nimport { Log, Feed, Sleep, Wee, Poop } from \"../models/_.js\";\n\nimport { NotFoundController } from \"../controllers/notfound.js\";\nimport { StaticController } from \"../controllers/client/static.js\";\n\nimport paths from \"./sw-manifest.json\";\nimport { version } from \"../package.json\";\n\nconst app = new App();\n\napp.registerRoute(\n  IndexController.route,\n  new IndexController(new IndexView(), Log)\n);\napp.registerRoute(\n  FeedController.route,\n  new FeedController(new FeedView(), Feed)\n);\napp.registerRoute(\n  SleepController.route,\n  new SleepController(new SleepView(), Sleep)\n);\napp.registerRoute(\n  PoopController.route,\n  new PoopController(new PoopView(), Poop)\n);\napp.registerRoute(WeeController.route, new WeeController(new WeeView(), Wee));\napp.registerRoute(StaticController.route, new StaticController());\n\nself.onfetch = (event) => {\n  const { request } = event;\n  const url = new URL(request.url);\n\n  const controller = app.resolve(url);\n  if (controller instanceof NotFoundController) {\n    // Fall through to the network\n    return;\n  }\n  const view = controller.getView(url, request);\n\n  if (!!view) {\n    return event.respondWith(\n      view\n        .then((output) => {\n          if (output instanceof Response) return output;\n\n          const options = {\n            status: !!output ? 200 : 404,\n            headers: {\n              \"Content-Type\": \"text/html; charset=utf-8\",\n            },\n          };\n          let body = output || \"Not Found\";\n\n          return new Response(body, options);\n        })\n        .catch((ex) => {\n          const options = {\n            status: 404,\n            headers: {\n              \"Content-Type\": \"text/html\",\n            },\n          };\n          return new Response(ex.toString(), options);\n        })\n    );\n  }\n\n  // If not caught by a controller, go to the network.\n};\n\nlet urls = [];\nself.oninstall = async (event) => {\n  // We will do something a lot more clever here soon.\n  event.waitUntil(\n    caches.open(version).then(async (cache) => {\n      return cache.addAll(paths);\n    })\n  );\n  self.skipWaiting();\n};\n\nself.onactivate = (event) => {\n  event.waitUntil(clients.claim());\n};\n","import { head } from \"./partials/head.js\";\nimport { body } from \"./partials/body.js\";\nimport template from \"./lib/florawg.js\";\nimport { aggregate } from \"./helpers/aggregate.js\";\n\nexport class IndexView {\n  async getAll(data) {\n    data.type = \"All\";\n    data.header = \"All\";\n\n    return template`${head(data, body(data, template`${aggregate(data)}`))}`;\n  }\n}\n","import { Log } from \"./log.js\";\n\nexport class Feed extends Log {\n  constructor(data = {}, key) {\n    super({ ...data, ...{ isDuration: true } }, key);\n    this.type = \"feed\";\n  }\n}\n","import { head } from \"./partials/head.js\";\nimport { body } from \"./partials/body.js\";\nimport html from \"./lib/florawg.js\";\nimport { aggregate } from \"./helpers/aggregate.js\";\nimport { correctISOTime, getDate, getTime } from \"./helpers/timezone.js\";\n\nexport class SleepView {\n  async getAll(data, extras) {\n    data.type = \"Sleep\";\n    data.header = \"Sleeps\";\n\n    return html`${head(data, body(data, html`${aggregate(data)}`))}`;\n  }\n\n  async get(data, extras) {\n    data.header = \"Sleep\";\n\n    const lang = navigator.language;\n    const options = {\n      weekday: \"long\",\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n      hour: \"numeric\",\n      minute: \"numeric\",\n    };\n\n    return html`${head(\n      data,\n      body(\n        data,\n        html`${extras.notFound\n            ? `<input type=\"hidden\" name=\"data-loaded\" value=\"${\n                !!extras.notFound === false\n              }\">`\n            : \"\"}\n          <div>\n            Start time: ${data.startTime.toLocaleString(lang, options)}\n          </div>\n          <div>\n            End time:\n            ${!!data.endTime ? data.endTime.toLocaleString(lang, options) : \"\"}\n          </div>`\n      )\n    )}`;\n  }\n\n  async create(data) {\n    data.header = \"Add a Sleep\";\n\n    return html`${head(\n      data,\n      body(\n        data,\n        html`<div class=\"form\">\n          <form method=\"POST\" action=\"/${data.type}s\">\n            <div>\n              <label for=\"startDate\"\n                >Start time:\n                <input\n                  type=\"date\"\n                  name=\"startDate\"\n                  pattern=\"[0-9]{4}-[0-9]{2}-[0-9]{2}\"\n                  placeholder=\"YYYY-MM-DD\"\n                  value=\"${getDate(correctISOTime(new Date()))}\"\n                />\n                <input\n                  type=\"time\"\n                  name=\"startTime\"\n                  pattern=\"[0-9]{2}:[0-9]{2}\"\n                  placeholder=\"HH:MM\"\n                  value=\"${getTime(correctISOTime(new Date()))}\"\n                />\n              </label>\n            </div>\n            <div>\n              <label for=\"endDate\"\n                >End time:\n                <input\n                  type=\"date\"\n                  name=\"endDate\"\n                  pattern=\"[0-9]{4}-[0-9]{2}-[0-9]{2}\"\n                  placeholder=\"YYYY-MM-DD\"\n                />\n                <input\n                  type=\"time\"\n                  name=\"endTime\"\n                  pattern=\"[0-9]{2}:[0-9]{2}\"\n                  placeholder=\"HH:MM\"\n                />\n              </label>\n            </div>\n            <div class=\"controls\">\n              <input type=\"submit\" value=\"Save\" />\n            </div>\n          </form>\n        </div>`\n      )\n    )}`;\n  }\n\n  async edit(data, extras) {\n    data.header = \"Update a Sleep\";\n\n    return html`${head(\n      data,\n      body(\n        data,\n        html`${extras.notFound\n            ? `<input type=\"hidden\" name=\"data-loaded\" value=\"${\n                !!extras.notFound === false\n              }\">`\n            : \"\"}\n          <div class=\"form\">\n            <form\n              method=\"POST\"\n              id=\"deleteForm\"\n              action=\"/${data.type}s/${data.id}/delete\"\n            ></form>\n            <form\n              method=\"POST\"\n              id=\"editForm\"\n              action=\"/${data.type}s/${data.id}/edit\"\n            ></form>\n            <div>\n              <div>\n                <label for=\"startDate\"\n                  >Start time:\n                  <input\n                    type=\"date\"\n                    name=\"startDate\"\n                    form=\"editForm\"\n                    value=\"${getDate(\n                      correctISOTime(\n                        extras.notFound == false ? data.startTime : undefined\n                      )\n                    )}\"\n                  />\n                  <input\n                    type=\"time\"\n                    name=\"startTime\"\n                    form=\"editForm\"\n                    value=\"${getTime(\n                      correctISOTime(\n                        extras.notFound == false ? data.startTime : undefined\n                      )\n                    )}\"\n                  />\n                </label>\n              </div>\n              <div>\n                <label for=\"endDate\"\n                  >End time:\n                  <input\n                    type=\"date\"\n                    name=\"endDate\"\n                    form=\"editForm\"\n                    value=\"${getDate(\n                      correctISOTime(\n                        extras.notFound == false\n                          ? data.endTime || new Date()\n                          : undefined\n                      )\n                    )}\"\n                  />\n                  <input\n                    type=\"time\"\n                    name=\"endTime\"\n                    form=\"editForm\"\n                    value=\"${getTime(\n                      correctISOTime(\n                        extras.notFound == false\n                          ? data.endTime || new Date()\n                          : undefined\n                      )\n                    )}\"\n                  />\n                </label>\n                <div>\n                  <div class=\"controls\">\n                    <button form=\"deleteForm\" class=\"delete\">\n                      <img src=\"/images/icons/ui/delete_18dp.png\" />\n                    </button>\n                    <input type=\"submit\" form=\"editForm\" value=\"Save\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div> `\n      )\n    )}`;\n  }\n}\n","import { Log } from \"./log.js\";\n\nexport class Sleep extends Log {\n  constructor(data = {}, key) {\n    super({ ...data, ...{ isDuration: true } }, key);\n    this.type = \"sleep\";\n  }\n}\n","import { head } from \"./partials/head.js\";\nimport { body } from \"./partials/body.js\";\nimport html from \"./lib/florawg.js\";\nimport { aggregate } from \"./helpers/aggregate.js\";\nimport { correctISOTime, getDate, getTime } from \"./helpers/timezone.js\";\n\nexport class PoopView {\n  async getAll(data) {\n    data.type = \"Poop\";\n    data.header = \"Poops\";\n\n    return html`${head(data, body(data, html`${aggregate(data)}`))}`;\n  }\n\n  async get(data, extras) {\n    data.header = \"Poop\";\n\n    const lang = navigator.language;\n    const options = {\n      weekday: \"long\",\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n      hour: \"numeric\",\n      minute: \"numeric\",\n    };\n\n    return html`${head(\n      data,\n      body(\n        data,\n        html`${extras.notFound\n            ? `<input type=\"hidden\" name=\"data-loaded\" value=\"${\n                !!extras.notFound === false\n              }\">`\n            : \"\"}\n          <div>\n            Start time:\n            ${extras.notFound == false\n              ? data.startTime.toLocaleString(lang, options)\n              : \"\"}\n          </div>\n          <div>\n            End time:\n            ${!!data.endTime ? data.endTime.toLocaleString(lang, options) : \"\"}\n          </div>`\n      )\n    )}`;\n  }\n\n  async create(data) {\n    data.header = \"Add a Poop\";\n\n    return html`${head(\n      data,\n      body(\n        data,\n        html`<div class=\"form\">\n          <form method=\"POST\" action=\"/${data.type}s\">\n            <div>\n              <label for=\"startDate\"\n                >Start time:\n                <input\n                  type=\"date\"\n                  name=\"startDate\"\n                  pattern=\"[0-9]{4}-[0-9]{2}-[0-9]{2}\"\n                  placeholder=\"YYYY-MM-DD\"\n                  value=\"${getDate(correctISOTime(new Date()))}\"\n                />\n                <input\n                  type=\"time\"\n                  name=\"startTime\"\n                  pattern=\"[0-9]{2}:[0-9]{2}\"\n                  placeholder=\"HH:MM\"\n                  value=\"${getTime(correctISOTime(new Date()))}\"\n                />\n              </label>\n            </div>\n            <div class=\"controls\">\n              <input type=\"submit\" value=\"Save\" />\n            </div>\n          </form>\n        </div>`\n      )\n    )}`;\n  }\n\n  async edit(data, extras) {\n    data.header = \"Update a Poop\";\n\n    return html`${head(\n      data,\n      body(\n        data,\n        html`${extras.notFound\n            ? `<input type=\"hidden\" name=\"data-loaded\" value=\"${\n                !!extras.notFound === false\n              }\">`\n            : \"\"}\n          <div class=\"form\">\n            <form\n              method=\"POST\"\n              id=\"deleteForm\"\n              action=\"/${data.type}s/${data.id}/delete\"\n            ></form>\n            <form\n              method=\"POST\"\n              id=\"editForm\"\n              action=\"/${data.type}s/${data.id}/edit\"\n            ></form>\n            <div>\n              <div>\n                <label for=\"startDate\"\n                  >Start time:\n                  <input\n                    type=\"date\"\n                    name=\"startDate\"\n                    form=\"editForm\"\n                    pattern=\"[0-9]{4}-[0-9]{2}-[0-9]{2}\"\n                    placeholder=\"YYYY-MM-DD\"\n                    value=\"${getDate(\n                      correctISOTime(\n                        extras.notFound == false ? data.startTime : undefined\n                      )\n                    )}\"\n                  />\n                  <input\n                    type=\"time\"\n                    name=\"startTime\"\n                    form=\"editForm\"\n                    value=\"${getTime(\n                      correctISOTime(\n                        extras.notFound == false ? data.startTime : undefined\n                      )\n                    )}\"\n                  />\n                </label>\n              </div>\n              <div class=\"controls\">\n                <button form=\"deleteForm\" class=\"delete\">\n                  <img src=\"/images/icons/ui/delete_18dp.png\" />\n                </button>\n                <input type=\"submit\" form=\"editForm\" value=\"Save\" />\n              </div>\n            </div>\n          </div> `\n      )\n    )}`;\n  }\n}\n","import { Log } from \"./log.js\";\n\nexport class Poop extends Log {\n  constructor(data = {}, key) {\n    super(data, key);\n    this.type = \"poop\";\n  }\n}\n","import { head } from \"./partials/head.js\";\nimport { body } from \"./partials/body.js\";\nimport html from \"./lib/florawg.js\";\nimport { aggregate } from \"./helpers/aggregate.js\";\nimport { correctISOTime, getDate, getTime } from \"./helpers/timezone.js\";\n\nexport class WeeView {\n  async getAll(data) {\n    data.type = \"Wee\";\n    data.header = \"Wees\";\n\n    return html`${head(data, body(data, html`${aggregate(data)}`))}`;\n  }\n\n  async get(data, extras) {\n    data.header = \"Wee\";\n\n    const lang = navigator.language;\n    const options = {\n      weekday: \"long\",\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n      hour: \"numeric\",\n      minute: \"numeric\",\n    };\n\n    return html`${head(\n      data,\n      body(\n        data,\n        html`${extras.notFound\n            ? `<input type=\"hidden\" name=\"data-loaded\" value=\"${\n                !!extras.notFound === false\n              }\">`\n            : \"\"}\n          <div>\n            Start time:\n            ${extras.notFound == false\n              ? data.startTime.toLocaleString(lang, options)\n              : \"\"}\n          </div>\n          <div>\n            End time:\n            ${!!data.endTime ? data.endTime.toLocaleString(lang, options) : \"\"}\n          </div>`\n      )\n    )}`;\n  }\n\n  async create(data) {\n    data.header = \"Add a Wee\";\n\n    return html`${head(\n      data,\n      body(\n        data,\n        html`<div class=\"form\">\n          <form method=\"POST\" action=\"/${data.type}s\">\n            <div>\n              <label for=\"startDate\"\n                >Start time:\n                <input\n                  type=\"date\"\n                  name=\"startDate\"\n                  pattern=\"[0-9]{4}-[0-9]{2}-[0-9]{2}\"\n                  placeholder=\"YYYY-MM-DD\"\n                  value=\"${getDate(correctISOTime(new Date()))}\"\n                />\n                <input\n                  type=\"time\"\n                  name=\"startTime\"\n                  pattern=\"[0-9]{2}:[0-9]{2}\"\n                  placeholder=\"HH:MM\"\n                  value=\"${getTime(correctISOTime(new Date()))}\"\n                />\n              </label>\n            </div>\n            <div class=\"controls\">\n              <input type=\"submit\" value=\"Save\" />\n            </div>\n          </form>\n        </div>`\n      )\n    )}`;\n  }\n\n  async edit(data, extras) {\n    data.header = \"Update a Wee\";\n\n    return html`${head(\n      data,\n      body(\n        data,\n        html`${extras.notFound\n            ? `<input type=\"hidden\" name=\"data-loaded\" value=\"${\n                !!extras.notFound === false\n              }\">`\n            : \"\"}\n          <div class=\"form\">\n            <form\n              method=\"POST\"\n              id=\"deleteForm\"\n              action=\"/${data.type}s/${data.id}/delete\"\n            ></form>\n            <form\n              method=\"POST\"\n              id=\"editForm\"\n              action=\"/${data.type}s/${data.id}/edit\"\n            ></form>\n            <div>\n              <div>\n                <label for=\"startDate\"\n                  >Start time:\n                  <input\n                    type=\"date\"\n                    name=\"startDate\"\n                    form=\"editForm\"\n                    value=\"${getDate(\n                      correctISOTime(\n                        extras.notFound == false ? data.startTime : undefined\n                      )\n                    )}\"\n                  />\n                  <input\n                    type=\"time\"\n                    name=\"startTime\"\n                    form=\"editForm\"\n                    value=\"${getTime(\n                      correctISOTime(\n                        extras.notFound == false ? data.startTime : undefined\n                      )\n                    )}\"\n                  />\n                </label>\n              </div>\n              <div class=\"controls\">\n                <button form=\"deleteForm\" class=\"delete\">\n                  <img src=\"/images/icons/ui/delete_18dp.png\" />\n                </button>\n                <input type=\"submit\" form=\"editForm\" value=\"Save\" />\n              </div>\n            </div>\n          </div> `\n      )\n    )}`;\n  }\n}\n","import { Log } from \"./log.js\";\n\nexport class Wee extends Log {\n  constructor(data = {}, key) {\n    super(data, key);\n    this.type = \"wee\";\n  }\n}\n"],"names":["MethodNotFound","[object Object]","message","this","name","Controller","view","model","Model","url","request","pathname","URL","method","route","constructor","idMatch","match","create","edit","get","getAll","put","del","post","Response","redirect","NotFoundController","routes","routeNotFound","NotFoundException","Error","super","getFormData","async","data","arrayBuffer","decoder","TextDecoder","URLSearchParams","decode","FeedController","formData","startDate","startTime","endDate","endTime","start","Date","end","undefined","id","parseInt","extras","notFound","feed","feeds","filter","order","DESCENDING","referrer","delete","IndexController","logs","SleepController","sleep","sleeps","WeeController","wee","wees","PoopController","poop","poops","encoder","TextEncoder","pipeInto","from","controller","reader","getReader","read","then","process","result","done","value","enqueue","enqueueItem","val","globalThis","ReadableStream","Promise","newVal","Array","isArray","item","encode","strings","values","i","length","html","close","push","head","body","items","type","toLowerCase","header","navigator","language","calculateDuration","ms","hours","Math","floor","minutes","aggregate","templates","lang","options","weekday","year","month","day","currentDay","dayAggregate","timeAggregate","firstDay","toLocaleDateString","template","Object","entries","map","key","join","isDuration","hasFinished","duration","toLocaleTimeString","hour","minute","correctISOTime","date","tzoffset","getTimezoneOffset","toISOString","replace","getDate","getFullYear","getMonth","toString","padStart","getTime","getHours","getMinutes","Config","version","stores","Log","properties","autoIncrement","keyPath","indexes","type,startTime","unique","startTime,type","ConfigManagerInstance","ConfigManagerInstance_","ConfigManager","resolve","config","c","config_","storeName","DatabaseInstance","DatabaseInstance_","Database","hasSupport","configManager","db_","name_","version_","stores_","reject","dbOpen","indexedDB","open","onupgradeneeded","e","target","transaction","storeNames","keys","s","dbStore","objectStoreNames","contains","deleteOnUpgrade","deleteObjectStore","objectStore","createObjectStore","index","indexNames","existingIndexNames","createIndex","split","indexOf","deleteIndex","onsuccess","onerror","console","log","dbTransaction","deleteDatabase","db","dbRequest","oncomplete","onabort","dbStoreRequest","cmpFunc","dbCursor","dbFilter","operator","lower","upper","IDBKeyRange","bound","only","upperBound","lowerBound","parseFilter","openCursor","dbResults","cursor","continue","clear","ASCENDING","UPDATED","nuke","store","getStore","resultKey","results","results_","deleteAll","catch","StaticController","paths","caches","cache","response","fetch","app","registerRoute","toLocaleString","self","onfetch","event","getView","respondWith","output","status","headers","Content-Type","ex","oninstall","waitUntil","addAll","skipWaiting","onactivate","clients","claim"],"mappings":"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"}