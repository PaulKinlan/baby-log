{"version":3,"file":"sw.js","sources":["../../controllers/lib/controller.js","../../controllers/notfound.js","../../app.js","../../views/lib/florawg.js","../../views/partials/head.js","../../views/partials/body.js","../../views/helpers/aggregate.js","../../views/index.js","../../models/config/config.js","../../models/lib/configmanager.js","../../models/lib/database.js","../../models/lib/model.js","../../models/log.js","../../controllers/index.js","../../models/feed.js","../../views/helpers/timezone.js","../../views/feed.js","../../controllers/exception/notfound.js","../../controllers/helpers/formData.js","../../controllers/feed.js","../../models/sleep.js","../../views/sleep.js","../../controllers/sleep.js","../../models/poop.js","../../views/poop.js","../../controllers/poop.js","../../models/wee.js","../../views/wee.js","../../controllers/wee.js","../../controllers/client/static.js","../../client/sw.js"],"sourcesContent":["class MethodNotFound {\n  constructor(message) {\n    //super(message);\n    this.name = \"MethodNotFound\";\n  }\n}\n\nexport class Controller {\n\n  getView(url, request) {\n    const { pathname } = new URL(url);\n    const { method } = request;\n    const route = this.constructor.route;\n    const idMatch = pathname.match(`${route}/(.+)/`);\n\n    // The instance of the controller must implement these functions;\n    if (method === 'GET') {\n      const idMatch = pathname.match(`${route}/(.+)/`);\n      if (pathname.match(`${route}/new`)) {\n        return this.create(url);\n      } else if (pathname.match(`${route}/(.+)/edit$`)) {\n        return this.edit(url, idMatch[1], request);\n      } else if (pathname.match(`${route}/(.+)/`)) {\n        return this.get(url, idMatch[1], request);\n      }\n      return this.getAll(url, request);\n    }\n    else if (method === 'POST') {\n      if (pathname.match(`${route}/*$`)) {\n        return this.post(url, request);\n      } else if (pathname.match(`${route}/(.+)/edit$`)) {\n        return this.put(url, idMatch[1], request);\n      } else if (pathname.match(`${route}/(.+)/delete$`)) {\n        const idMatch = pathname.match(`${route}/(.+)/`);\n        return this.del(url, idMatch[1], request);\n      }\n    }\n    else if (method === 'PUT') {\n      return this.put(url, idMatch[1], request);\n    }\n    else if (method === 'DELETE') {\n      const idMatch = pathname.match(`${route}/(.+)/`);\n      return this.del(url, idMatch[1], request);\n    }\n  }\n\n  redirect(url) {\n    return Response.redirect(url, \"302\");\n  }\n\n  create(url) {\n    throw new MethodNotFound('create');\n  }\n\n  edit(url) {\n    throw new MethodNotFound('');\n  }\n\n  get(url) {\n    throw new MethodNotFound('get');\n  }\n\n  getAll(url) {\n    throw new MethodNotFound('getAll');\n  }\n\n  post(url) {\n    throw new MethodNotFound('post');\n  }\n\n  del(url) {\n    throw new MethodNotFound('delete');\n  }\n}\n","import { Controller } from './lib/controller.js';\n\nexport class NotFoundController extends Controller {\n  render(url) {\n\n  }\n}","import { NotFoundController } from './controllers/notfound.js'\n\nexport class App {\n  get routes() {\n    return routes;\n  }\n\n  registerRoute(route, controller) {\n    routes.push({route, controller});\n  }\n\n  resolve(url) {\n    const { pathname } = url;\n    for(let {route, controller} of routes) {\n      if (pathname.match(route)) {\n        return controller;\n      }\n    }\n\n    return routeNotFound;\n  }\n}\n\nconst routes = [];\nconst routeNotFound = new NotFoundController;","const encoder = new TextEncoder();\n\nconst pipeInto = async (from, controller) => {\n  const reader = from.getReader();\n  \n  return reader.read().then(function process(result) {\n    if (result.done) {\n      return;\n    }\n    if (!!result.value) {\n      controller.enqueue(result.value);\n    }\n    return reader.read().then(process);\n  });\n};\n\nconst enqueueItem = async (val, controller) => {\n  if (val instanceof globalThis.ReadableStream) {\n    await pipeInto(val, controller);\n  } \n  else if (val instanceof Promise) {\n    let newVal;\n    newVal = await val;\n\n    if (newVal instanceof globalThis.ReadableStream) {\n      await pipeInto(newVal, controller);\n    } else {\n      await enqueueItem(newVal, controller);\n    }\n  }\n  else {\n    if (Array.isArray(val)) {\n      for (let item of val) {\n        await enqueueItem(item, controller)\n      }\n    }\n    else if (!!val) {\n      controller.enqueue(encoder.encode(val));\n    }\n  }\n}\n\nexport default async (strings, ...values) => {\n  if (\"ReadableStream\" in globalThis === false) {\n    // For node not supporting streams properly..... This should tree-shake away\n    globalThis = {...globalThis, ...await import(\"./private/streams/streams.js\")};\n  }\n  return new globalThis.ReadableStream({\n    start(controller) {\n      async function push() {\n        let i = 0;\n        while (i < values.length) {\n          let html = strings[i];\n          controller.enqueue(encoder.encode(html));\n          await enqueueItem(values[i], controller);\n\n          i++;\n        }\n        controller.enqueue(encoder.encode(strings[i]));\n        controller.close();\n      }\n\n      push();\n    }\n  });\n};","import template from '../lib/florawg.js'\n\nexport const head = (data, body) => {\n  return template`<!DOCTYPE html>\n<html>\n  <head>\n    <title>Baby Logger</title>\n    <script src=\"/client.js\" type=\"module\" defer></script>\n    <link rel=\"stylesheet\" href=\"/styles/main.css\">\n    <link rel=\"manifest\" href=\"/manifest.json\">\n    <meta name=\"viewport\" content=\"width=device-width\">\n  </head>\n  ${body}\n</html>`;\n};","import template from '../lib/florawg.js'\n\nexport const body = (data, items) => {\n  return template`\n  <header>\n    <h1>Baby Log</h1>\n    <div><a href=\"/\">All</a>, <a href=\"/feeds\">Feeds</a>, <a href=\"/sleeps\">Sleeps</a>, <a href=\"/poops\">Poops</a>,  <a href=\"/wees\">Wees</a></div>\n    </header>\n  <main>\n    <header>\n      <h2>${data.header}</h2>\n    </header>\n    <section>\n    ${items}\n    </section>\n  </main>\n  <footer>\n    <span>Add</span><a href=\"/feeds/new\" title=\"Add a feed\">üçº</a><a href=\"/sleeps/new\" title=\"Add a Sleep\">üí§</a><a href=\"/poops/new\" title=\"Add a Poop\">üí©</a><a href=\"/wees/new\" title=\"Add a Wee\">‚õ≤Ô∏è</a>\n  </footer>\n  `;\n};","import template from '../lib/florawg.js'\n\nif ('navigator' in globalThis === false) globalThis.navigator = {\n  language: 'en-GB'\n}\n\nconst calculateDuration = (ms) => {\n  const hours = Math.floor(ms / (1000 * 60 * 60));\n  ms -= hours * 1000 * 60 * 60;\n  const minutes = Math.floor(ms / (1000 * 60));\n\n  const hourStr = (hours == 1) ? 'Hour' : 'Hours'\n  const minuteStr = (minutes == 1) ? 'Minute' : 'Minutes'\n  return `${hours} ${hourStr} ${minutes} ${minuteStr}`;\n}\n\nexport const aggregate = (items) => {\n  const templates = [];\n  const lang = navigator.language;\n  const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n  let dayAggregate = {};\n  let currentDay;\n  let firstDay= true;\n  for (let item of items) {\n    if (item.startTime.toLocaleDateString(lang, options) != currentDay) {\n      if (firstDay == false) {\n        templates.push(template`<div>${Object.entries(dayAggregate).map(([key, value]) => `${value} ${key}${value > 1 ? 's' : ''}`).join(', ')}</div>`);\n        dayAggregate = {};\n      }\n      firstDay = false;\n      currentDay = item.startTime.toLocaleDateString(lang, options);\n      templates.push(template`<h3>${currentDay}</h3>`);\n    }\n\n    if (item.type in dayAggregate == false) dayAggregate[item.type] = 0;\n    dayAggregate[item.type]++\n\n    templates.push(template`<div class=\"row\">\n      <img src=\"/images/icons/${item.type}/res/mipmap-xxhdpi/${item.type}.png\" alt=\"${item.type}\"><span>\n        ${item.startTime.toLocaleTimeString(navigator.language, {hour: 'numeric', minute: 'numeric'})} \n        ${(item.isDuration) ?\n        (`- ${calculateDuration(item.duration)} ${(item.hasFinished === false) ? `(Still ${item.type}ing)` : ``} `)\n        : ``}\n        </span>\n        <a href=\"/${item.type}s/${item.id}/edit\"><img src=\"/images/icons/ui/edit_18dp.png\"></a><button class=\"delete row\" form=\"deleteForm${item.id}\"><img src=\"/images/icons/ui/delete_18dp.png\"></button>\n        <form id=\"deleteForm${item.id}\" class=\"deleteForm\" method=\"POST\" action=\"/${item.type}s/${item.id}/delete\"></form>\n    </div>`)\n  }\n  // Add a final aggregate. \n  templates.push(template`<div>${Object.entries(dayAggregate).map(([key, value]) => `${value} ${key}${value > 1 ? 's' : ''}`).join(', ')}</div>`);\n  return templates;\n}","import { head } from './partials/head.js';\nimport { body } from './partials/body.js';\nimport template from './lib/florawg.js';\nimport { aggregate } from './helpers/aggregate.js';\n\nexport class IndexView {\n  async getAll(data) {\n\n    data.type = \"All\";\n    data.header = \"All\";\n\n    return template`${head(data, \n      body(data, \n        template`${aggregate(data)}`)\n    )}`;\n  }\n}\n\n\n","/**\n *\n * Copyright 2020 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst Config = {\n  name: 'babylog',\n  version: 6,\n  stores: {\n    'Log': {\n      properties: {\n        autoIncrement: true,\n        keyPath: 'id'\n      },\n      indexes: {\n        \"type,startTime\": { unique: true },\n        \"startTime,type\": { unique: true }\n      }\n    }\n  }\n};\n\nexport default Config;","/**\n *\n * Copyright 2015 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Config from '../config/config.js';\n\nexport default function ConfigManagerInstance () {\n\n  if (typeof globalThis.ConfigManagerInstance_ !== 'undefined')\n    return Promise.resolve(globalThis.ConfigManagerInstance_);\n\n  globalThis.ConfigManagerInstance_ = new ConfigManager();\n\n  return Promise.resolve(globalThis.ConfigManagerInstance_);\n}\n\nclass ConfigManager {\n\n  constructor () {\n    this.config = Config;\n  }\n\n  set config (c) {\n    this.config_ = c;\n  }\n\n  get config () {\n    return this.config_;\n  }\n\n  getStore (storeName) {\n    return this.config_.stores[storeName];\n  }\n\n}","/**\n * Copyright 2015 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport ConfigManagerInstance from './configmanager.js';\n\nexport function DatabaseInstance() {\n\n  if (typeof globalThis.DatabaseInstance_ !== 'undefined')\n    return Promise.resolve(globalThis.DatabaseInstance_);\n\n  globalThis.DatabaseInstance_ = new Database();\n\n  return Promise.resolve(globalThis.DatabaseInstance_);\n}\n\nexport function hasSupport() {\n  return ('indexedDB' in globalThis);\n}\n\nconst parseFilter = ([operator, ...values]) => {\n  // >= 10\n  // BETWEEN 10,20\n  const [lower, upper] = values;\n\n  switch(operator) {\n    case 'BETWEEN': return IDBKeyRange.bound(lower, upper, false, false);\n    case '=':  return IDBKeyRange.only(lower);\n    case '<':  return IDBKeyRange.upperBound(lower);\n    case '<=': return IDBKeyRange.upperBound(lower, true);\n    case '>':  return IDBKeyRange.lowerBound(lower);\n    case '>=': return IDBKeyRange.lowerBound(lower, true);\n    default: return; // Just return if we don't recognise the combination\n  };\n}\n\nclass Database {\n\n  constructor() {\n\n    ConfigManagerInstance().then((configManager) => {\n\n      var config = configManager.config;\n\n      this.db_ = null;\n      this.name_ = config.name;\n      this.version_ = config.version;\n      this.stores_ = config.stores;\n\n    });\n  }\n\n  getStore(storeName) {\n\n    if (!this.stores_[storeName])\n      throw 'There is no store with name \"' + storeName + '\"';\n\n    return this.stores_[storeName];\n  }\n\n  async open() {\n    if (this.db_)\n      return Promise.resolve(this.db_);\n\n    return new Promise((resolve, reject) => {\n    \n      var dbOpen = indexedDB.open(this.name_, this.version_);\n\n      dbOpen.onupgradeneeded = (e) => {\n      \n        this.db_ = e.target.result;\n\n        var transaction = e.target.transaction;\n        var storeNames = Object.keys(this.stores_);\n        var storeName;\n\n        for (var s = 0; s < storeNames.length; s++) {\n          var dbStore;\n\n          storeName = storeNames[s];\n\n          // If the store already exists\n          if (this.db_.objectStoreNames.contains(storeName)) {\n\n            // Check to see if the store should be deleted.\n            // If so delete, and if not skip to the next store.\n            if (this.stores_[storeName].deleteOnUpgrade) {\n              this.db_.deleteObjectStore(storeName);\n              continue;\n            }\n\n            dbStore = transaction.objectStore(storeName);\n          }\n          else {\n            dbStore = this.db_.createObjectStore(\n              storeName,\n              this.stores_[storeName].properties\n            );\n          }\n\n          if (typeof this.stores_[storeName].indexes !== 'undefined') {\n            var indexes = this.stores_[storeName].indexes;\n            var indexNames = Object.keys(indexes);\n            var existingIndexNames = dbStore.indexNames;\n\n            var index;\n\n            for (var i = 0; i < indexNames.length; i++) {\n              index = indexNames[i];\n              if (existingIndexNames.contains(index) === false) {\n                // Only add Index if it doesn't exist\n                dbStore.createIndex(index, index.split(','), indexes[index]);\n              }\n            }\n\n            // Delete indexes that are removed.\n            for (var i = 0; i < dbStore.indexNames.length; i++) {\n              index = dbStore.indexNames[i];\n              if (indexNames.indexOf(index) < 0) {\n                dbStore.deleteIndex(index);\n              }\n            }\n          }\n        }\n      }\n\n      dbOpen.onsuccess = (e) => {\n        this.db_ = e.target.result;\n        resolve(this.db_);\n      }\n\n      dbOpen.onerror = (e) => {\n        reject(e);\n      };\n\n    });\n  }\n\n  close() {\n\n    return new Promise((resolve, reject) => {\n\n      if (!this.db_)\n        reject('No database connection');\n\n      this.db_.close();\n      resolve(this.db_);\n\n    });\n  }\n\n  nuke() {\n    return new Promise((resolve, reject) => {\n\n      console.log(\"Nuking... \" + this.name_);\n\n      this.close();\n\n      var dbTransaction = indexedDB.deleteDatabase(this.name_);\n      dbTransaction.onsuccess = (e) => {\n        console.log(\"Nuked...\");\n        resolve(e);\n      }\n\n      dbTransaction.onerror = (e) => {\n        reject(e);\n      }\n    });\n  }\n\n  put(storeName, value, key) {\n\n    return this.open().then((db) => {\n\n      return new Promise((resolve, reject) => {\n\n        var dbTransaction = db.transaction(storeName, 'readwrite');\n        var dbStore = dbTransaction.objectStore(storeName);\n        var dbRequest = dbStore.put(value, key);\n\n        dbTransaction.oncomplete = (e) => {\n          resolve(dbRequest.result);\n        }\n\n        dbTransaction.onabort =\n          dbTransaction.onerror = (e) => {\n            reject(e);\n          }\n\n      });\n\n    });\n\n  }\n\n  get(storeName, value) {\n\n    return this.open().then((db) => {\n\n      return new Promise((resolve, reject) => {\n\n        var dbTransaction = db.transaction(storeName, 'readonly');\n        var dbStore = dbTransaction.objectStore(storeName);\n        var dbStoreRequest;\n\n        dbTransaction.oncomplete = (e) => {\n          resolve(dbStoreRequest.result);\n        }\n\n        dbTransaction.onabort =\n          dbTransaction.onerror = (e) => {\n            reject(e);\n          }\n\n        dbStoreRequest = dbStore.get(value);\n\n      });\n\n    });\n  }\n\n  getAll(storeName, index, { filter, order, cmpFunc }) {\n\n    return this.open().then((db) => {\n\n      return new Promise((resolve, reject) => {\n\n        var dbTransaction = db.transaction(storeName, 'readonly');\n        var dbStore = dbTransaction.objectStore(storeName);\n        var dbCursor;\n        var dbFilter = parseFilter(filter);\n\n        if (typeof order !== 'string')\n          order = 'next';\n\n        if (typeof index === 'string')\n          dbCursor = dbStore.index(index).openCursor(dbFilter, order);\n        else\n          dbCursor = dbStore.openCursor();\n\n        var dbResults = [];\n\n        dbCursor.onsuccess = (e) => {\n          var cursor = e.target.result;\n\n          if (cursor) {\n            if (cmpFunc === undefined || cmpFunc(cursor.value)) {\n              dbResults.push({\n                key: cursor.key,\n                value: cursor.value\n              });\n            }\n            cursor.continue();\n          } else {\n            resolve(dbResults);\n          }\n        }\n\n        dbCursor.onerror = (e) => {\n          reject(e);\n        }\n\n      });\n\n    });\n  }\n\n  delete(storeName, key) {\n    return this.open().then((db) => {\n\n      return new Promise((resolve, reject) => {\n\n        var dbTransaction = db.transaction(storeName, 'readwrite');\n        var dbStore = dbTransaction.objectStore(storeName);\n\n        dbTransaction.oncomplete = (e) => {\n          resolve(e);\n        }\n\n        dbTransaction.onabort =\n          dbTransaction.onerror = (e) => {\n            reject(e);\n          }\n\n        dbStore.delete(key);\n\n      });\n    });\n  }\n\n  deleteAll(storeName) {\n\n    return this.open().then((db) => {\n\n      return new Promise((resolve, reject) => {\n\n        var dbTransaction = db.transaction(storeName, 'readwrite');\n        var dbStore = dbTransaction.objectStore(storeName);\n        var dbRequest = dbStore.clear();\n\n        dbRequest.onsuccess = (e) => {\n          resolve(e);\n        }\n\n        dbRequest.onerror = (e) => {\n          reject(e);\n        }\n\n      });\n\n    });\n  }\n\n}","/**\n *\n * Copyright 2015 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DatabaseInstance, hasSupport} from './database.js';\nimport ConfigManagerInstance from './configmanager.js';\n\nexport class Model {\n\n  constructor(key) {\n    this.key = key;\n  }\n\n  static get ASCENDING() {\n    return 'next';\n  }\n\n  static get DESCENDING() {\n    return 'prev';\n  }\n\n  static get UPDATED() {\n    return 'Model-updated';\n  }\n\n  static get storeName() {\n    return 'Model';\n  }\n\n  static nuke() {\n    return DatabaseInstance()\n      .then(db => db.close())\n      .then(db => db.nuke());\n  }\n\n  static get(key) {\n\n    if (hasSupport() === false) {\n      return Promise.resolve();\n    }\n\n    if (this instanceof Model)\n      Promise.reject(\"Can't call get on Model directly. Inherit first.\");\n\n    return DatabaseInstance()\n\n      // Do the query.\n      .then(db => db.get(this.storeName, key))\n\n      // Wrap the result in the correct class.\n      .then(result => {\n\n        return ConfigManagerInstance().then(configManager => {\n\n          var store = configManager.getStore(this.storeName);\n\n          if (!result)\n            return;\n\n          var resultKey = key;\n\n          // If the store uses a keypath then reset\n          // the key back to undefined.\n          if (store.properties.keyPath)\n            resultKey = undefined;\n\n          return new this(result, resultKey);\n\n        });\n\n      });\n\n  }\n\n  /**\n   * Gets all the objects from the database.\n   */\n  static getAll(index, { filter, order, cmpFunc }) {\n\n    if (hasSupport() === false) {\n      return Promise.resolve();\n    }\n\n    if (this instanceof Model)\n      Promise.reject(\"Can't call getAll on Model directly. Inherit first.\");\n\n    return DatabaseInstance()\n\n      // Do the query.\n      .then(db => db.getAll(this.storeName, index, {filter, order, cmpFunc}))\n\n      // Wrap all the results in the correct class.\n      .then(results => {\n\n        return ConfigManagerInstance().then(configManager => {\n\n          var store = configManager.getStore(this.storeName);\n          var results_ = [];\n\n          for (let result of results) {\n\n            var key = result.key;\n\n            // If the store uses a keypath then reset\n            // the key back to undefined.\n            if (store.properties.keyPath)\n              key = undefined;\n\n            results_.push(new this(result.value, key));\n          }\n\n          return results_;\n\n        });\n\n      });\n\n  }\n\n  put() {\n    return this.constructor.put(this);\n  }\n\n  /**\n   * Either inserts or update depending on whether the key / keyPath is set.\n   * If the keyPath is set, and a property of the value matches (in-line key)\n   * then the object is updated. If the keyPath is not set and the value's key\n   * is null, then the object is inserted. If the keypath is not set and the\n   * value's key is set then the object is updated.\n   */\n  static put(value) {\n\n    if (this instanceof Model)\n      Promise.reject(\"Can't call put on Model directly. Inherit first.\");\n\n    return DatabaseInstance()\n\n      // Do the query.\n      .then(db => db.put(this.storeName, value, value.key))\n\n      .then(key => {\n\n        return ConfigManagerInstance().then(configManager => {\n\n          // Inserting may provide a key. If there is no keyPath set\n          // the object needs to be updated with a key value so it can\n          // be altered and saved again without creating a new record.\n          var store = configManager.getStore(this.storeName);\n\n          var keyPath =\n            store.properties.keyPath;\n\n          if (!keyPath)\n            value.key = key;\n\n          return value;\n\n        })\n\n      });\n\n  }\n\n  static deleteAll() {\n\n    if (this instanceof Model)\n      Promise.reject(\"Can't call deleteAll on Model directly. Inherit first.\");\n\n    return DatabaseInstance()\n\n      .then(db => db.deleteAll(this.storeName))\n\n      .catch(e => {\n        // It may be that the store doesn't exist yet, so relax for that one.\n        if (e.name !== 'NotFoundError')\n          throw e;\n      });\n\n  }\n\n  delete() {\n    return this.constructor.delete(this);\n  }\n\n  static delete(value) {\n\n    if (this instanceof Model)\n      Promise.reject(\"Can't call delete on Model directly. Inherit first.\");\n\n    return ConfigManagerInstance().then(configManager => {\n\n      // If passed the full object to delete then\n      // grab its key for the delete\n      if (value instanceof this) {\n\n        var store = configManager.getStore(this.storeName);\n        var keyPath = store.properties.keyPath;\n\n        if (keyPath)\n          value = value[keyPath];\n        else\n          value = value.key;\n      }\n\n      return DatabaseInstance()\n\n        .then(db => db.delete(this.storeName, value));\n\n    });\n  }\n}","import { Model }  from './lib/model.js'\n\nexport class Log extends Model {\n\n  get hasFinished() {\n    return !!this.endTime;\n  }\n  \n  get duration() {\n    let end = this.endTime;\n    if (!!end === false) {\n      end = new Date;\n    }\n    return end - this.startTime;\n  }\n\n  constructor({id, endTime, startTime, type, isDuration = false}, key) {\n    super(key);\n\n    if(!!id) { \n      this.id = id;\n    }\n\n    if (endTime) {\n      this.endTime = new Date(endTime);\n    }\n    \n    this.startTime = new Date(startTime);\n    this.isDuration = isDuration;\n    this.type = type;\n  }\n\n  static get storeName() {\n    return 'Log';\n  }\n}","import { Controller } from \"./lib/controller.js\";\nimport { IndexView } from '../views/index.js';\nimport { Log as Model } from '../models/log.js';\n\nexport class IndexController extends Controller {\n  static get route() {\n    return '^/$'\n  }\n\n  async getAll(url) {\n    const view = new IndexView();\n    const logs = await Model.getAll('startTime,type', { filter: ['BETWEEN', [new Date(0), 'a'], [new Date(9999999999999), 'z']], order: Model.DESCENDING }) || [];\n\n    return view.getAll(logs);\n  }\n\n  get(url) {\n    const view = new IndexView();\n    const output = view.render({ title: \"Ay....\", newTitle: \"Testing\" });\n    return output;\n  }\n}","import { Log } from './log.js'\n\nexport class Feed extends Log {\n  constructor(data = {}, key) {\n    super({...data, ...{isDuration: true}}, key);\n    this.type = 'feed';\n  }\n}","export const correctISOTime = (date) => {\n  const tzoffset = (new Date()).getTimezoneOffset() * 60000;\n  return (new Date(date - tzoffset)).toISOString().replace(/:(\\d+).(\\d+)Z$/, '');\n}","import { head } from './partials/head.js';\nimport { body } from './partials/body.js';\nimport template from './lib/florawg.js';\nimport { aggregate } from './helpers/aggregate.js';\nimport { correctISOTime } from './helpers/timezone.js';\n\nif ('navigator' in globalThis === false) globalThis.navigator = {\n  language: 'en-GB'\n};\nexport class FeedView {\n  async getAll(data) {\n\n    data.type = \"Feed\";\n    data.header = \"Feeds\";\n\n    return template`${head(data,\n      body(data,\n        template`${aggregate(data)}`\n    ))}`;\n  }\n\n  async get(data) {\n\n    data.header = \"Feed\";\n\n    const lang = navigator.language;\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric' };\n  \n    return template`${head(data,\n      body(data,\n        template`<div>Start time: ${data.startTime.toLocaleString(lang, options)}</div>\n        <div>End time: ${(!!data.endTime) ? data.endTime.toLocaleString(lang, options) : ''}</div>\n        <a href=\"/${data.type}s/${data.id}/edit\"><img src=\"/images/icons/ui/edit_18dp.png\"></a>\n        <div class=\"row\">\n        <form method=\"POST\" id=\"deleteForm\" action=\"/${data.type}s/${data.id}/delete\"></form>\n        <button form=\"deleteForm\" class=\"delete\"><img src=\"/images/icons/ui/delete_18dp.png\"></button>\n        </div>`\n        )\n    )}`;\n  }\n\n  async create(data) {\n\n    data.header = \"Add a Feed\";\n\n    return template`${head(data,\n      body(data, `<div>\n    <form method=\"POST\" action=\"/feeds\">\n      <div><label for=startTime>Start time: <input type=\"datetime-local\" name=\"startTime\" value=\"${correctISOTime(new Date())}\"></label></div>\n      <div><label for=endTime>End time:<input type=\"datetime-local\" name=\"endTime\"></label></div>\n      <input type=\"submit\">\n    </form></div>\n    `))}`;\n  }\n\n  async edit(data) {\n    data.header = \"Update a Feed\";\n\n    return template`${head(data,\n      body(data, `<div class=\"form\">\n    <form method=\"POST\" id=\"deleteForm\" action=\"/${data.type}s/${data.id}/delete\"></form>\n    <form method=\"POST\" id=\"editForm\" action=\"/${data.type}s/${data.id}/edit\"></form>\n    <div>\n      <div><label for=startTime>Start time: <input type=\"datetime-local\" name=\"startTime\" form=\"editForm\" value=\"${correctISOTime(data.startTime)}\"></label></div>\n      <div><label for=endTime>End time:<input type=\"datetime-local\" name=\"endTime\" form=\"editForm\" value=\"${data.hasFinished ? correctISOTime(new Date()) : ''}\"></label></div>\n      <div class=\"controls\">\n        <button form=\"deleteForm\" class=\"delete\"><img src=\"/images/icons/ui/delete_18dp.png\"></button>\n        <input type=\"submit\" form=\"editForm\" value=\"Save\">\n      </div>\n    </div>\n    </div>\n    `))}`;\n  }\n}","export class NotFoundException extends Error {\n  constructor(message) {\n    super(message);\n  }\n}","// Safari's messed up formData on the request object.\n\nexport const getFormData = async (request) => {\n  const data = await request.arrayBuffer();\n  const decoder = new TextDecoder(\"utf-8\")\n  const params = new URLSearchParams(`?${decoder.decode(data)}`);\n\n  return params;\n};","import { Controller } from './lib/controller.js';\nimport { Feed as Model } from '../models/feed.js';\nimport { FeedView as View } from '../views/feed.js';\nimport { NotFoundException } from './exception/notfound.js';\nimport { getFormData } from './helpers/formData.js';\n\n\nexport class FeedController extends Controller {\n  static get route() {\n    return '/feeds';\n  }\n\n  async create(url, request) {\n    // Show the create an entry UI.\n    const feedView = new View();\n    return feedView.create(new Model);\n  }\n\n  async post(url, request) {\n\n    const formData = await getFormData(request);\n    const startTime = formData.get('startTime');\n    const endTime = formData.get('endTime');\n    const feed = new Model({ startTime, endTime });\n\n    feed.put();\n\n    return this.redirect(FeedController.route);\n  }\n\n  async edit(url, id) {\n    // Get the Data.\n    const feed = await Model.get(parseInt(id, 10));\n\n    if (!!feed == false) throw new NotFoundException(`Feed ${id} not found`);;\n    // Get the View.\n    const feedView = new View();\n\n    return feedView.edit(feed);\n  }\n\n  async put(url, id, request) {\n    // Get the Data.\n    const feed = await Model.get(parseInt(id, 10));\n\n    if (!!feed == false) throw new NotFoundException(`Feed ${id} not found`);\n\n    const formData = await getFormData(request);\n\n    const startTime = formData.get('startTime');\n    const endTime = formData.get('endTime');\n\n    feed.startTime = new Date(startTime);\n    feed.endTime = new Date(endTime);\n\n    feed.put();\n\n    return this.redirect(FeedController.route);\n  }\n\n  async get(url, id) {\n    // Get the Data.\n    const feed = await Model.get(parseInt(id, 10));\n\n    if (!!feed == false) throw new NotFoundException(`Feed ${id} not found`);\n\n    // Get the View.\n    const feedView = new View();\n\n    return feedView.get(feed);\n  }\n\n  async getAll(url) {\n    // Get the Data.....\n    const feeds = await Model.getAll('type,startTime', { filter: ['BETWEEN', ['feed', new Date(0)], ['feed', new Date(99999999999999)]], order: Model.DESCENDING }) || [];\n\n    // Get the View.\n    const feedView = new View();\n\n    return feedView.getAll(feeds);\n  }\n\n  async del(url, id) {\n    // Get the Data.\n    const model = await Model.get(parseInt(id, 10));\n\n    if (!!model == false) throw new NotFoundException(`Feed ${id} not found`);\n\n    await model.delete();\n    return this.redirect(FeedController.route);\n  }\n}","import { Log } from './log.js';\n\nexport class Sleep extends Log {\n  constructor(data = {}, key) {\n    super({...data, ...{isDuration: true}}, key);\n    this.type = 'sleep';\n  }\n}\n\n","import { head } from './partials/head.js';\nimport { body } from './partials/body.js';\nimport template from './lib/florawg.js'\nimport { aggregate } from './helpers/aggregate.js';\nimport { correctISOTime } from './helpers/timezone.js';\n\nexport class SleepView {\n  async getAll(data) {\n\n    data.type = \"Sleeps\";\n    data.header = \"Sleeps\";\n\n    return template`${head(data,\n      body(data,\n        template`${aggregate(data)}`)\n    )}`;\n  }\n\n  async get(data) {\n\n    data.header = \"Sleep\";\n\n    const lang = navigator.language;\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric' };\n  \n    return template`${head(data,\n      body(data,\n        template`<div>Start time: ${data.startTime.toLocaleString(lang, options)}</div>\n        <div>End time: ${(!!data.endTime) ? data.endTime.toLocaleString(lang, options) : ''}</div>`)\n    )}`;\n  }\n\n  async create(data) {\n\n    data.header = \"Add a Sleep\";\n\n    return template`${head(data,\n      body(data, `<div>\n    <form method=\"POST\" action=\"/sleeps\">\n    <div><label for=startTime>Start time: <input type=\"datetime-local\" name=\"startTime\" value=\"${correctISOTime(new Date())}\"></label></div>\n    <div><label for=endTime>End time:<input type=\"datetime-local\" name=\"endTime\"></label></div>\n    <input type=\"submit\">\n    </form></div>\n    `))}`;\n  }\n\n  async edit(data) {\n\n    data.header = \"Update a Sleep\";\n\n    return template`${head(data,\n      body(data, `<div class=\"form\">\n    <form method=\"POST\" id=\"deleteForm\" action=\"/${data.type}s/${data.id}/delete\"></form>\n    <form method=\"POST\" id=\"editForm\" action=\"/${data.type}s/${data.id}/edit\"></form>\n    <div>\n      <div><label for=startTime>Start time: <input type=\"datetime-local\" name=\"startTime\" form=\"editForm\" value=\"${correctISOTime(data.startTime)}\"></label></div>\n      <div><label for=endTime>End time:<input type=\"datetime-local\" name=\"endTime\" form=\"editForm\" value=\"${data.hasFinished ? correctISOTime(new Date()) : ''}\"></label></div>\n      <div class=\"controls\">\n        <button form=\"deleteForm\"><img src=\"/images/icons/ui/delete_18dp.png\"></button>\n        <input type=\"submit\" form=\"editForm\" value=\"Save\">\n      </div>\n    </div>\n    </div>\n    `))}`;\n  }\n}","import { Controller } from './lib/controller.js';\nimport { Sleep as Model } from '../models/sleep.js';\nimport { SleepView as View } from '../views/sleep.js';\nimport { NotFoundException } from './exception/notfound.js';\nimport { getFormData } from './helpers/formData.js';\n\n\nexport class SleepController extends Controller {\n  static get route() {\n    return '/sleeps';\n  }\n\n  async create(url, request) {\n    // Show the create an entry UI.\n    const sleepView = new View();\n    return sleepView.create(new Model);\n  }\n\n  async post(url, request) {\n\n    const formData = await getFormData(request);\n\n    const startTime = formData.get('startTime');\n    const endTime = formData.get('endTime');\n    const sleep = new Model({ startTime, endTime });\n\n    sleep.put();\n\n    return this.redirect(SleepController.route);\n  }\n\n  async edit(url, id) {\n    // Get the Data.\n    const sleep = await Model.get(parseInt(id, 10));\n\n    if (!!sleep == false) throw new NotFoundException(`Sleep ${id} not found`);;\n    // Get the View.\n    const sleepView = new View();\n\n    return sleepView.edit(sleep);\n  }\n\n  async put(url, id, request) {\n    // Get the Data.\n    const sleep = await Model.get(parseInt(id, 10));\n\n    if (!!sleep == false) throw new NotFoundException(`Sleep ${id} not found`);\n\n    const formData = await getFormData(request);\n\n    const startTime = formData.get('startTime');\n    const endTime = formData.get('endTime');\n\n    sleep.startTime = new Date(startTime);\n    sleep.endTime = new Date(endTime);\n    sleep.put();\n\n    return this.redirect(SleepController.route);\n  }\n\n  async get(url, id) {\n    // Get the Data.\n    const sleep = await Model.get(parseInt(id, 10));\n\n    if (!!sleep == false) throw new NotFoundException(`Sleep ${id} not found`);\n\n    // Get the View.\n    const sleepView = new View();\n\n    return sleepView.get(sleep);\n  }\n\n  async getAll(url) {\n    // Get the Data.....\n    const sleeps = await Model.getAll('type,startTime', { filter: ['BETWEEN', ['sleep', new Date(0)], ['sleep', new Date(99999999999999)]], order: Model.DESCENDING }) || [];\n\n    // Get the View.\n    const sleepView = new View();\n\n    return sleepView.getAll(sleeps);\n  }\n\n  async del(url, id) {\n    // Get the Data.\n    const model = await Model.get(parseInt(id, 10));\n\n    if (!!model == false) throw new NotFoundException(`Sleep ${id} not found`);\n\n    await model.delete();\n    return this.redirect(SleepController.route);\n  }\n}","import { Log }  from './log.js'\n\nexport class Poop extends Log {\n  constructor(data = {}, key) {\n    super(data, key);\n    this.type = 'poop';\n  }\n}\n","import { head } from './partials/head.js';\nimport { body } from './partials/body.js';\nimport template from './lib/florawg.js'\nimport { aggregate } from './helpers/aggregate.js';\nimport { correctISOTime } from './helpers/timezone.js';\n\nexport class PoopView {\n  async getAll(data) {\n\n    data.type = \"Poop\";\n    data.header = \"Poops\";\n\n    return template`${head(data,\n      body(data,\n        template`${aggregate(data)}`)\n    )}`;\n  }\n\n  async get(data) {\n\n    data.header = \"Poop\";\n\n    const lang = navigator.language;\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric' };\n  \n    return template`${head(data,\n      body(data,\n        template`<div>Start time: ${data.startTime.toLocaleString(lang, options)}</div>\n        <div>End time: ${(!!data.endTime) ? data.endTime.toLocaleString(lang, options) : ''}</div>`)\n    )}`;\n  }\n\n  async create(data) {\n\n    data.header = \"Add a Poop\";\n\n    return template`${head(data,\n      body(data, `<div>\n    <form method=\"POST\" action=\"/poops\">\n      <label for=startTime>Start time: <input type=\"datetime-local\" name=\"startTime\" value=\"${correctISOTime(new Date())}\"></label>\n      <input type=\"submit\">\n    </form></div>\n    `))}`;\n  }\n\n  async edit(data) {\n\n    data.header = \"Update a Poop\";\n\n    return template`${head(data,\n      body(data, `<div class=\"form\">\n    <form method=\"POST\" id=\"deleteForm\" action=\"/${data.type}s/${data.id}/delete\"></form>\n    <form method=\"POST\" id=\"editForm\" action=\"/${data.type}s/${data.id}/edit\"></form>\n    <div>\n      <div><label for=startTime>Start time: <input type=\"datetime-local\" name=\"startTime\" form=\"editForm\" value=\"${correctISOTime(data.startTime)}\"></label></div>\n      <div class=\"controls\">\n        <button form=\"deleteForm\"><img src=\"/images/icons/ui/delete_18dp.png\"></button>\n        <input type=\"submit\" form=\"editForm\" value=\"Save\">\n      </div>\n    </div>\n    </div>\n    `))}`;\n  }\n}","import { Controller } from './lib/controller.js';\nimport { Poop as Model } from '../models/poop.js';\nimport { PoopView as View } from '../views/poop.js';\nimport { NotFoundException } from './exception/notfound.js';\nimport { getFormData } from './helpers/formData.js';\n\n\nexport class PoopController extends Controller {\n  static get route() {\n    return '/poops';\n  }\n\n  async create(url, request) {\n    // Show the create an entry UI.\n    const view = new View();\n    return view.create(new Model);\n  }\n\n  async post(url, request) {\n\n    const formData = await getFormData(request);\n\n    const startTime = formData.get('startTime');\n    const endTime = formData.get('endTime');\n    const poop = new Model({ startTime, endTime });\n\n    poop.put();\n\n    // Get the View.\n    const view = new View(poop);\n\n    return this.redirect(PoopController.route);\n  }\n\n  async edit(url, id) {\n    // Get the Data.\n    const poop = await Model.get(parseInt(id, 10));\n\n    if (!!poop == false) throw new NotFoundException(`Poop ${id} not found`);;\n    // Get the View.\n    const view = new View();\n\n    return view.edit(poop);\n  }\n\n  async put(url, id, request) {\n    // Get the Data.\n    const poop = await Model.get(parseInt(id, 10));\n\n    if (!!poop == false) throw new NotFoundException(`Poop ${id} not found`);\n\n    const formData = await getFormData(request);\n\n    const startTime = formData.get('startTime');\n    const endTime = formData.get('endTime');\n\n    poop.startTime = startTime;\n    poop.endTime = endTime;\n\n    poop.put();\n\n    return this.redirect(PoopController.route);\n  }\n\n  async get(url, id) {\n    // Get the Data.\n    const poop = await Model.get(parseInt(id, 10));\n\n    if (!!poop == false) throw new NotFoundException(`Poop ${id} not found`);\n\n    // Get the View.\n    const view = new View();\n\n    return view.get(poop);\n  }\n\n  async getAll(url) {\n    // Get the Data.....\n    const poops = await Model.getAll('type,startTime', { filter: ['BETWEEN', ['poop', new Date(0)], ['poop', new Date(99999999999999)]], order: Model.DESCENDING }) || [];\n\n    // Get the View.\n    const view = new View();\n\n    return view.getAll(poops);\n  }\n\n  async del(url, id) {\n    // Get the Data.\n    const model = await Model.get(parseInt(id, 10));\n\n    if (!!model == false) throw new NotFoundException(`Poop ${id} not found`);\n\n    await model.delete();\n    return this.redirect(PoopController.route);\n  }\n}","import { Log } from './log.js';\n\nexport class Wee extends Log {\n  constructor(data = {}, key) {\n    super(data, key);\n    this.type = 'wee';\n  }\n}\n","import { head } from './partials/head.js';\nimport { body } from './partials/body.js';\nimport template from './lib/florawg.js'\nimport { aggregate } from './helpers/aggregate.js';\nimport { correctISOTime } from './helpers/timezone.js';\n\nexport class WeeView {\n  async getAll(data) {\n\n    data.type = \"Wee\";\n    data.header = \"Wees\";\n\n    return template`${head(data,\n      body(data,\n        template`${aggregate(data)}`)\n    )}`;\n  }\n\n  async get(data) {\n\n    data.header = \"Wee\";\n\n    const lang = navigator.language;\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric' };\n\n    return template`${head(data,\n      body(data,\n        template`<div>Start time: ${data.startTime.toLocaleString(lang, options)}</div>\n        <div>End time: ${(!!data.endTime) ? data.endTime.toLocaleString(lang, options) : ''}</div>`)\n    )}`;\n  }\n\n  async create(data) {\n\n    data.header = \"Add a Wee\";\n\n    return template`${head(data,\n      body(data, `<div>\n    <form method=\"POST\" action=\"/wees\">\n      <label for=startTime>Start time: <input type=\"datetime-local\" name=\"startTime\" value=\"${correctISOTime(new Date())}\"></label>\n      <input type=\"submit\">\n    </form></div>\n    `))}`;\n  }\n\n  async edit(data) {\n\n    data.header = \"Update a Wee\";\n\n    return template`${head(data,\n      body(data, `<div class=\"form\">\n    <form method=\"POST\" id=\"deleteForm\" action=\"/${data.type}s/${data.id}/delete\"></form>\n    <form method=\"POST\" id=\"editForm\" action=\"/${data.type}s/${data.id}/edit\"></form>\n    <div>\n      <div><label for=startTime>Start time: <input type=\"datetime-local\" name=\"startTime\" form=\"editForm\" value=\"${correctISOTime(data.startTime)}\"></label></div>\n      <div class=\"controls\">\n        <button form=\"deleteForm\"><img src=\"/images/icons/ui/delete_18dp.png\"></button>\n        <input type=\"submit\" form=\"editForm\" value=\"Save\">\n      </div>\n    </div>\n    </div>\n    `))}`;\n  }\n}","import { Controller } from './lib/controller.js';\nimport { Wee as Model } from '../models/wee.js';\nimport { WeeView as View } from '../views/wee.js';\nimport { NotFoundException } from './exception/notfound.js';\nimport { getFormData } from './helpers/formData.js';\n\nexport class WeeController extends Controller {\n  static get route() {\n    return '/wees';\n  }\n\n  async create(url, request) {\n    // Show the create an entry UI.\n    const view = new View();\n    return view.create(new Model);\n  }\n\n  async post(url, request) {\n\n    const formData = await getFormData(request);\n\n    const startTime = formData.get('startTime');\n    const endTime = formData.get('endTime');\n    const wee = new Model({ startTime, endTime });\n\n    wee.put();\n\n    return this.redirect(WeeController.route);\n  }\n\n  async edit(url, id) {\n    // Get the Data.\n    const wee = await Model.get(parseInt(id, 10));\n\n    if (!!wee == false) throw new NotFoundException(`Wee ${id} not found`);;\n    // Get the View.\n    const view = new View();\n\n    return view.edit(wee);\n  }\n\n  async put(url, id, request) {\n    // Get the Data.\n    const wee = await Model.get(parseInt(id, 10));\n\n    if (!!wee == false) throw new NotFoundException(`Wee ${id} not found`);\n\n    const formData = await getFormData(request);\n\n    const startTime = formData.get('startTime');\n    const endTime = formData.get('endTime');\n\n    wee.startTime = startTime;\n    wee.endTime = endTime;\n\n    wee.put();\n\n    return this.redirect(WeeController.route);\n  }\n\n  async get(url, id) {\n    // Get the Data.\n    const wee = await Model.get(parseInt(id, 10));\n\n    if (!!wee == false) throw new NotFoundException(`Wee ${id} not found`);\n\n    // Get the View.\n    const view = new View();\n\n    return view.get(wee);\n  }\n\n  async getAll(url) {\n    // Get the Data.....\n    const wees = await Model.getAll('type,startTime', { filter: ['BETWEEN', ['wee', new Date(0)], ['wee', new Date(99999999999999)]], order: Model.DESCENDING }) || [];\n\n    // Get the View.\n    const view = new View();\n\n    return view.getAll(wees);\n  }\n\n  async del(url, id) {\n    // Get the Data.\n    const model = await Model.get(parseInt(id, 10));\n\n    if (!!model == false) throw new NotFoundException(`Wee ${id} not found`);\n\n    await model.delete();\n    return this.redirect(WeeController.route);\n  }\n}","import { Controller } from \"../lib/controller.js\";\n\n// This will be a server only route;\nexport class StaticController extends Controller {\n\n  static get route() {\n    return ''; // Match everything.\n  }\n\n  constructor(paths) {\n    super();\n  }\n\n  async get(url, id, request) {\n    return caches.match(request).then(response => {\n      if (!!response) return response;\n      return fetch(url);\n    });\n  }\n\n  /*\n    url: URL\n  */\n  async getAll(url, request) {\n    return this.get(url, undefined, request);\n  }\n}","import { App } from '../app.js';\nimport { IndexController } from '../controllers/index.js'\nimport { FeedController } from '../controllers/feed.js'\nimport { SleepController } from '../controllers/sleep.js'\nimport { PoopController } from '../controllers/poop.js'\nimport { WeeController } from '../controllers/wee.js'\nimport { NotFoundController } from '../controllers/notfound.js';\nimport { StaticController } from '../controllers/client/static.js';\n\nimport paths from './sw-manifest.json';\n\nconst app = new App();\n\napp.registerRoute(IndexController.route, new IndexController);\napp.registerRoute(FeedController.route, new FeedController);\napp.registerRoute(SleepController.route, new SleepController);\napp.registerRoute(PoopController.route, new PoopController);\napp.registerRoute(WeeController.route, new WeeController);\napp.registerRoute(StaticController.route, new StaticController);\n\nself.onfetch = (event) => {\n  const { request } = event\n  const url = new URL(request.url);\n\n  const controller = app.resolve(url);\n  if (controller instanceof NotFoundController) {\n    // Fall through to the network\n    return;\n  }\n  const view = controller.getView(url, request);\n\n  if (!!view) {\n    return event.respondWith(view.then(output => {\n      if (output instanceof Response) return output;\n\n      const options = {\n        status: (!!output) ? 200 : 404,\n        headers: {\n          'Content-Type': 'text/html; charset=utf-8'\n        }\n      };\n      let body = output || \"Not Found\";\n\n      return new Response(body, options);\n    }).catch(ex => {\n      const options = {\n        status: 404,\n        headers: {\n          'Content-Type': 'text/html'\n        }\n      };\n      return new Response(ex.toString(), options);\n    }));\n  }\n\n  // If not caught by a controller, go to the network.\n};\n\nlet urls = [];\n\nself.oninstall = async (event) => {\n  // We will do something a lot more clever here soon.\n  event.waitUntil(caches.open(\"v1\").then(async (cache) => {\n   \n    return cache.addAll(paths);\n  }));\n  self.skipWaiting();\n}\n\nself.onactivate = (event) => {\n  event.waitUntil(clients.claim());\n}"],"names":["MethodNotFound","[object Object]","message","this","name","Controller","url","request","pathname","URL","method","route","constructor","idMatch","match","create","edit","get","getAll","post","put","del","Response","redirect","NotFoundController","routes","routeNotFound","encoder","TextEncoder","pipeInto","async","from","controller","reader","getReader","read","then","process","result","done","value","enqueue","enqueueItem","val","globalThis","ReadableStream","Promise","newVal","Array","isArray","item","encode","strings","values","i","length","html","close","push","head","data","body","template","items","header","navigator","language","calculateDuration","ms","hours","Math","floor","minutes","aggregate","templates","lang","options","weekday","year","month","day","currentDay","dayAggregate","firstDay","startTime","toLocaleDateString","Object","entries","map","key","join","type","toLocaleTimeString","hour","minute","duration","hasFinished","id","IndexView","Config","version","stores","Log","properties","autoIncrement","keyPath","indexes","type,startTime","unique","startTime,type","ConfigManagerInstance","ConfigManagerInstance_","ConfigManager","resolve","config","c","config_","storeName","DatabaseInstance","DatabaseInstance_","Database","hasSupport","configManager","db_","name_","version_","stores_","reject","dbOpen","indexedDB","open","onupgradeneeded","e","target","transaction","storeNames","keys","s","dbStore","objectStoreNames","contains","deleteOnUpgrade","deleteObjectStore","objectStore","createObjectStore","index","indexNames","existingIndexNames","createIndex","split","indexOf","deleteIndex","onsuccess","onerror","console","log","dbTransaction","deleteDatabase","db","dbRequest","oncomplete","onabort","dbStoreRequest","filter","order","cmpFunc","dbCursor","dbFilter","operator","lower","upper","IDBKeyRange","bound","only","upperBound","lowerBound","parseFilter","openCursor","dbResults","cursor","undefined","continue","delete","clear","Model","ASCENDING","DESCENDING","UPDATED","nuke","store","getStore","resultKey","results","results_","deleteAll","catch","endTime","end","Date","isDuration","super","IndexController","view","logs","render","title","newTitle","Feed","correctISOTime","date","tzoffset","getTimezoneOffset","toISOString","replace","FeedView","toLocaleString","NotFoundException","Error","getFormData","arrayBuffer","decoder","TextDecoder","URLSearchParams","decode","FeedController","View","formData","feed","parseInt","feeds","model","Sleep","SleepView","SleepController","sleep","sleeps","Poop","PoopView","PoopController","poop","poops","Wee","WeeView","WeeController","wee","wees","StaticController","paths","caches","response","fetch","app","registerRoute","self","onfetch","event","getView","respondWith","output","status","headers","Content-Type","ex","toString","oninstall","waitUntil","cache","addAll","skipWaiting","onactivate","clients","claim"],"mappings":"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"}