{"version":3,"file":"sw.js","sources":["../../controllers/lib/controller.js","../../controllers/notfound.js","../../app.js","../../models/config/config.js","../../models/lib/configmanager.js","../../models/lib/database.js","../../models/lib/model.js","../../models/log.js","../../models/feed.js","../../controllers/exception/notfound.js","../../controllers/helpers/formData.js","../../controllers/feed.js","../../controllers/index.js","../../models/sleep.js","../../controllers/sleep.js","../../models/wee.js","../../controllers/wee.js","../../models/poop.js","../../controllers/poop.js","../../views/lib/florawg.js","../../views/partials/head.js","../../views/partials/body.js","../../views/helpers/aggregate.js","../../views/helpers/timezone.js","../../views/feed.js","../../controllers/client/static.js","../../client/sw.js","../../views/index.js","../../views/sleep.js","../../views/poop.js","../../views/wee.js"],"sourcesContent":["class MethodNotFound {\n  constructor(message) {\n    //super(message);\n    this.name = \"MethodNotFound\";\n  }\n}\n\nexport class Controller {\n\n  constructor(view) {\n    this.view = view;\n  }\n\n  getView(url, request) {\n    const { pathname } = new URL(url);\n    const { method } = request;\n    const route = this.constructor.route;\n    const idMatch = pathname.match(`${route}/(.+)/`);\n\n    // The instance of the controller must implement these functions;\n    if (method === 'GET') {\n      const idMatch = pathname.match(`${route}/(.+)/`);\n      if (pathname.match(`${route}/new`)) {\n        return this.create(url);\n      } else if (pathname.match(`${route}/(.+)/edit$`)) {\n        return this.edit(url, idMatch[1], request);\n      } else if (pathname.match(`${route}/(.+)/`)) {\n        return this.get(url, idMatch[1], request);\n      }\n      return this.getAll(url, request);\n    }\n    else if (method === 'POST') {\n      if (pathname.match(`${route}/*$`)) {\n        return this.post(url, request);\n      } else if (pathname.match(`${route}/(.+)/edit$`)) {\n        return this.put(url, idMatch[1], request);\n      } else if (pathname.match(`${route}/(.+)/delete$`)) {\n        const idMatch = pathname.match(`${route}/(.+)/`);\n        return this.del(url, idMatch[1], request);\n      }\n    }\n    else if (method === 'PUT') {\n      return this.put(url, idMatch[1], request);\n    }\n    else if (method === 'DELETE') {\n      const idMatch = pathname.match(`${route}/(.+)/`);\n      return this.del(url, idMatch[1], request);\n    }\n  }\n\n  redirect(url) {\n    return Response.redirect(url, \"302\");\n  }\n\n  create(url) {\n    throw new MethodNotFound('create');\n  }\n\n  edit(url) {\n    throw new MethodNotFound('');\n  }\n\n  get(url) {\n    throw new MethodNotFound('get');\n  }\n\n  getAll(url) {\n    throw new MethodNotFound('getAll');\n  }\n\n  post(url) {\n    throw new MethodNotFound('post');\n  }\n\n  del(url) {\n    throw new MethodNotFound('delete');\n  }\n}\n","import { Controller } from './lib/controller.js';\n\nexport class NotFoundController extends Controller {\n  render(url) {\n\n  }\n}","import { NotFoundController } from './controllers/notfound.js'\n\nexport class App {\n  get routes() {\n    return routes;\n  }\n\n  registerRoute(route, controller) {\n    routes.push({route, controller});\n  }\n\n  resolve(url) {\n    const { pathname } = url;\n    for(let {route, controller} of routes) {\n      if (pathname.match(route)) {\n        return controller;\n      }\n    }\n\n    return routeNotFound;\n  }\n}\n\nconst routes = [];\nconst routeNotFound = new NotFoundController;","/**\n *\n * Copyright 2020 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst Config = {\n  name: 'babylog',\n  version: 6,\n  stores: {\n    'Log': {\n      properties: {\n        autoIncrement: true,\n        keyPath: 'id'\n      },\n      indexes: {\n        \"type,startTime\": { unique: true },\n        \"startTime,type\": { unique: true }\n      }\n    }\n  }\n};\n\nexport default Config;","/**\n *\n * Copyright 2015 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Config from '../config/config.js';\n\nexport default function ConfigManagerInstance () {\n\n  if (typeof globalThis.ConfigManagerInstance_ !== 'undefined')\n    return Promise.resolve(globalThis.ConfigManagerInstance_);\n\n  globalThis.ConfigManagerInstance_ = new ConfigManager();\n\n  return Promise.resolve(globalThis.ConfigManagerInstance_);\n}\n\nclass ConfigManager {\n\n  constructor () {\n    this.config = Config;\n  }\n\n  set config (c) {\n    this.config_ = c;\n  }\n\n  get config () {\n    return this.config_;\n  }\n\n  getStore (storeName) {\n    return this.config_.stores[storeName];\n  }\n\n}","/**\n * Copyright 2015 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport ConfigManagerInstance from './configmanager.js';\n\nexport function DatabaseInstance() {\n\n  if (typeof globalThis.DatabaseInstance_ !== 'undefined')\n    return Promise.resolve(globalThis.DatabaseInstance_);\n\n  globalThis.DatabaseInstance_ = new Database();\n\n  return Promise.resolve(globalThis.DatabaseInstance_);\n}\n\nexport function hasSupport() {\n  return ('indexedDB' in globalThis);\n}\n\nconst parseFilter = ([operator, ...values]) => {\n  // >= 10\n  // BETWEEN 10,20\n  const [lower, upper] = values;\n\n  switch(operator) {\n    case 'BETWEEN': return IDBKeyRange.bound(lower, upper, false, false);\n    case '=':  return IDBKeyRange.only(lower);\n    case '<':  return IDBKeyRange.upperBound(lower);\n    case '<=': return IDBKeyRange.upperBound(lower, true);\n    case '>':  return IDBKeyRange.lowerBound(lower);\n    case '>=': return IDBKeyRange.lowerBound(lower, true);\n    default: return; // Just return if we don't recognise the combination\n  };\n}\n\nclass Database {\n\n  constructor() {\n\n    ConfigManagerInstance().then((configManager) => {\n\n      var config = configManager.config;\n\n      this.db_ = null;\n      this.name_ = config.name;\n      this.version_ = config.version;\n      this.stores_ = config.stores;\n\n    });\n  }\n\n  getStore(storeName) {\n\n    if (!this.stores_[storeName])\n      throw 'There is no store with name \"' + storeName + '\"';\n\n    return this.stores_[storeName];\n  }\n\n  async open() {\n    if (this.db_)\n      return Promise.resolve(this.db_);\n\n    return new Promise((resolve, reject) => {\n    \n      var dbOpen = indexedDB.open(this.name_, this.version_);\n\n      dbOpen.onupgradeneeded = (e) => {\n      \n        this.db_ = e.target.result;\n\n        var transaction = e.target.transaction;\n        var storeNames = Object.keys(this.stores_);\n        var storeName;\n\n        for (var s = 0; s < storeNames.length; s++) {\n          var dbStore;\n\n          storeName = storeNames[s];\n\n          // If the store already exists\n          if (this.db_.objectStoreNames.contains(storeName)) {\n\n            // Check to see if the store should be deleted.\n            // If so delete, and if not skip to the next store.\n            if (this.stores_[storeName].deleteOnUpgrade) {\n              this.db_.deleteObjectStore(storeName);\n              continue;\n            }\n\n            dbStore = transaction.objectStore(storeName);\n          }\n          else {\n            dbStore = this.db_.createObjectStore(\n              storeName,\n              this.stores_[storeName].properties\n            );\n          }\n\n          if (typeof this.stores_[storeName].indexes !== 'undefined') {\n            var indexes = this.stores_[storeName].indexes;\n            var indexNames = Object.keys(indexes);\n            var existingIndexNames = dbStore.indexNames;\n\n            var index;\n\n            for (var i = 0; i < indexNames.length; i++) {\n              index = indexNames[i];\n              if (existingIndexNames.contains(index) === false) {\n                // Only add Index if it doesn't exist\n                dbStore.createIndex(index, index.split(','), indexes[index]);\n              }\n            }\n\n            // Delete indexes that are removed.\n            for (var i = 0; i < dbStore.indexNames.length; i++) {\n              index = dbStore.indexNames[i];\n              if (indexNames.indexOf(index) < 0) {\n                dbStore.deleteIndex(index);\n              }\n            }\n          }\n        }\n      }\n\n      dbOpen.onsuccess = (e) => {\n        this.db_ = e.target.result;\n        resolve(this.db_);\n      }\n\n      dbOpen.onerror = (e) => {\n        reject(e);\n      };\n\n    });\n  }\n\n  close() {\n\n    return new Promise((resolve, reject) => {\n\n      if (!this.db_)\n        reject('No database connection');\n\n      this.db_.close();\n      resolve(this.db_);\n\n    });\n  }\n\n  nuke() {\n    return new Promise((resolve, reject) => {\n\n      console.log(\"Nuking... \" + this.name_);\n\n      this.close();\n\n      var dbTransaction = indexedDB.deleteDatabase(this.name_);\n      dbTransaction.onsuccess = (e) => {\n        console.log(\"Nuked...\");\n        resolve(e);\n      }\n\n      dbTransaction.onerror = (e) => {\n        reject(e);\n      }\n    });\n  }\n\n  put(storeName, value, key) {\n\n    return this.open().then((db) => {\n\n      return new Promise((resolve, reject) => {\n\n        var dbTransaction = db.transaction(storeName, 'readwrite');\n        var dbStore = dbTransaction.objectStore(storeName);\n        var dbRequest = dbStore.put(value, key);\n\n        dbTransaction.oncomplete = (e) => {\n          resolve(dbRequest.result);\n        }\n\n        dbTransaction.onabort =\n          dbTransaction.onerror = (e) => {\n            reject(e);\n          }\n\n      });\n\n    });\n\n  }\n\n  get(storeName, value) {\n\n    return this.open().then((db) => {\n\n      return new Promise((resolve, reject) => {\n\n        var dbTransaction = db.transaction(storeName, 'readonly');\n        var dbStore = dbTransaction.objectStore(storeName);\n        var dbStoreRequest;\n\n        dbTransaction.oncomplete = (e) => {\n          resolve(dbStoreRequest.result);\n        }\n\n        dbTransaction.onabort =\n          dbTransaction.onerror = (e) => {\n            reject(e);\n          }\n\n        dbStoreRequest = dbStore.get(value);\n\n      });\n\n    });\n  }\n\n  getAll(storeName, index, { filter, order, cmpFunc }) {\n\n    return this.open().then((db) => {\n\n      return new Promise((resolve, reject) => {\n\n        var dbTransaction = db.transaction(storeName, 'readonly');\n        var dbStore = dbTransaction.objectStore(storeName);\n        var dbCursor;\n        var dbFilter = parseFilter(filter);\n\n        if (typeof order !== 'string')\n          order = 'next';\n\n        if (typeof index === 'string')\n          dbCursor = dbStore.index(index).openCursor(dbFilter, order);\n        else\n          dbCursor = dbStore.openCursor();\n\n        var dbResults = [];\n\n        dbCursor.onsuccess = (e) => {\n          var cursor = e.target.result;\n\n          if (cursor) {\n            if (cmpFunc === undefined || cmpFunc(cursor.value)) {\n              dbResults.push({\n                key: cursor.key,\n                value: cursor.value\n              });\n            }\n            cursor.continue();\n          } else {\n            resolve(dbResults);\n          }\n        }\n\n        dbCursor.onerror = (e) => {\n          reject(e);\n        }\n\n      });\n\n    });\n  }\n\n  delete(storeName, key) {\n    return this.open().then((db) => {\n\n      return new Promise((resolve, reject) => {\n\n        var dbTransaction = db.transaction(storeName, 'readwrite');\n        var dbStore = dbTransaction.objectStore(storeName);\n\n        dbTransaction.oncomplete = (e) => {\n          resolve(e);\n        }\n\n        dbTransaction.onabort =\n          dbTransaction.onerror = (e) => {\n            reject(e);\n          }\n\n        dbStore.delete(key);\n\n      });\n    });\n  }\n\n  deleteAll(storeName) {\n\n    return this.open().then((db) => {\n\n      return new Promise((resolve, reject) => {\n\n        var dbTransaction = db.transaction(storeName, 'readwrite');\n        var dbStore = dbTransaction.objectStore(storeName);\n        var dbRequest = dbStore.clear();\n\n        dbRequest.onsuccess = (e) => {\n          resolve(e);\n        }\n\n        dbRequest.onerror = (e) => {\n          reject(e);\n        }\n\n      });\n\n    });\n  }\n\n}","/**\n *\n * Copyright 2015 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DatabaseInstance, hasSupport} from './database.js';\nimport ConfigManagerInstance from './configmanager.js';\n\nexport class Model {\n\n  constructor(key) {\n    this.key = key;\n  }\n\n  static get ASCENDING() {\n    return 'next';\n  }\n\n  static get DESCENDING() {\n    return 'prev';\n  }\n\n  static get UPDATED() {\n    return 'Model-updated';\n  }\n\n  static get storeName() {\n    return 'Model';\n  }\n\n  static nuke() {\n    return DatabaseInstance()\n      .then(db => db.close())\n      .then(db => db.nuke());\n  }\n\n  static get(key) {\n\n    if (hasSupport() === false) {\n      return Promise.resolve();\n    }\n\n    if (this instanceof Model)\n      Promise.reject(\"Can't call get on Model directly. Inherit first.\");\n\n    return DatabaseInstance()\n\n      // Do the query.\n      .then(db => db.get(this.storeName, key))\n\n      // Wrap the result in the correct class.\n      .then(result => {\n\n        return ConfigManagerInstance().then(configManager => {\n\n          var store = configManager.getStore(this.storeName);\n\n          if (!result)\n            return;\n\n          var resultKey = key;\n\n          // If the store uses a keypath then reset\n          // the key back to undefined.\n          if (store.properties.keyPath)\n            resultKey = undefined;\n\n          return new this(result, resultKey);\n\n        });\n\n      });\n\n  }\n\n  /**\n   * Gets all the objects from the database.\n   */\n  static getAll(index, { filter, order, cmpFunc }) {\n\n    if (hasSupport() === false) {\n      return Promise.resolve();\n    }\n\n    if (this instanceof Model)\n      Promise.reject(\"Can't call getAll on Model directly. Inherit first.\");\n\n    return DatabaseInstance()\n\n      // Do the query.\n      .then(db => db.getAll(this.storeName, index, {filter, order, cmpFunc}))\n\n      // Wrap all the results in the correct class.\n      .then(results => {\n\n        return ConfigManagerInstance().then(configManager => {\n\n          var store = configManager.getStore(this.storeName);\n          var results_ = [];\n\n          for (let result of results) {\n\n            var key = result.key;\n\n            // If the store uses a keypath then reset\n            // the key back to undefined.\n            if (store.properties.keyPath)\n              key = undefined;\n\n            results_.push(new this(result.value, key));\n          }\n\n          return results_;\n\n        });\n\n      });\n\n  }\n\n  put() {\n    return this.constructor.put(this);\n  }\n\n  /**\n   * Either inserts or update depending on whether the key / keyPath is set.\n   * If the keyPath is set, and a property of the value matches (in-line key)\n   * then the object is updated. If the keyPath is not set and the value's key\n   * is null, then the object is inserted. If the keypath is not set and the\n   * value's key is set then the object is updated.\n   */\n  static put(value) {\n\n    if (this instanceof Model)\n      Promise.reject(\"Can't call put on Model directly. Inherit first.\");\n\n    return DatabaseInstance()\n\n      // Do the query.\n      .then(db => db.put(this.storeName, value, value.key))\n\n      .then(key => {\n\n        return ConfigManagerInstance().then(configManager => {\n\n          // Inserting may provide a key. If there is no keyPath set\n          // the object needs to be updated with a key value so it can\n          // be altered and saved again without creating a new record.\n          var store = configManager.getStore(this.storeName);\n\n          var keyPath =\n            store.properties.keyPath;\n\n          if (!keyPath)\n            value.key = key;\n\n          return value;\n\n        })\n\n      });\n\n  }\n\n  static deleteAll() {\n\n    if (this instanceof Model)\n      Promise.reject(\"Can't call deleteAll on Model directly. Inherit first.\");\n\n    return DatabaseInstance()\n\n      .then(db => db.deleteAll(this.storeName))\n\n      .catch(e => {\n        // It may be that the store doesn't exist yet, so relax for that one.\n        if (e.name !== 'NotFoundError')\n          throw e;\n      });\n\n  }\n\n  delete() {\n    return this.constructor.delete(this);\n  }\n\n  static delete(value) {\n\n    if (this instanceof Model)\n      Promise.reject(\"Can't call delete on Model directly. Inherit first.\");\n\n    return ConfigManagerInstance().then(configManager => {\n\n      // If passed the full object to delete then\n      // grab its key for the delete\n      if (value instanceof this) {\n\n        var store = configManager.getStore(this.storeName);\n        var keyPath = store.properties.keyPath;\n\n        if (keyPath)\n          value = value[keyPath];\n        else\n          value = value.key;\n      }\n\n      return DatabaseInstance()\n\n        .then(db => db.delete(this.storeName, value));\n\n    });\n  }\n}","import { Model }  from './lib/model.js'\n\nexport class Log extends Model {\n\n  get hasFinished() {\n    return !!this.endTime;\n  }\n  \n  get duration() {\n    let end = this.endTime;\n    if (!!end === false) {\n      end = new Date;\n    }\n    return end - this.startTime;\n  }\n\n  constructor({id, endTime, startTime, type, isDuration = false}, key) {\n    super(key);\n\n    if(!!id) { \n      this.id = id;\n    }\n\n    if (endTime) {\n      this.endTime = new Date(endTime);\n    }\n    \n    this.startTime = new Date(startTime);\n    this.isDuration = isDuration;\n    this.type = type;\n  }\n\n  static get storeName() {\n    return 'Log';\n  }\n}","import { Log } from './log.js'\n\nexport class Feed extends Log {\n  constructor(data = {}, key) {\n    super({...data, ...{isDuration: true}}, key);\n    this.type = 'feed';\n  }\n}","export class NotFoundException extends Error {\n  constructor(message) {\n    super(message);\n  }\n}","// Safari's messed up formData on the request object.\n\nexport const getFormData = async (request) => {\n  const data = await request.arrayBuffer();\n  const decoder = new TextDecoder(\"utf-8\")\n  const params = new URLSearchParams(`?${decoder.decode(data)}`);\n\n  return params;\n};","import { Controller } from './lib/controller.js';\nimport { Feed as Model } from '../models/feed.js';\nimport { NotFoundException } from './exception/notfound.js';\nimport { getFormData } from './helpers/formData.js';\n\n\nexport class FeedController extends Controller {\n  static get route() {\n    return '/feeds';\n  }\n\n  async create(url, request) {\n    // Show the create an entry UI.\n    return this.view.create(new Model);\n  }\n\n  async post(url, request) {\n\n    const formData = await getFormData(request);\n    const startTime = formData.get('startTime');\n    const endTime = formData.get('endTime');\n    const feed = new Model({ startTime, endTime });\n\n    feed.put();\n\n    return this.redirect(FeedController.route);\n  }\n\n  async edit(url, id) {\n    // Get the Data.\n    const feed = await Model.get(parseInt(id, 10));\n\n    if (!!feed == false) throw new NotFoundException(`Feed ${id} not found`);;\n    \n    return this.view.edit(feed);\n  }\n\n  async put(url, id, request) {\n    // Get the Data.\n    const feed = await Model.get(parseInt(id, 10));\n\n    if (!!feed == false) throw new NotFoundException(`Feed ${id} not found`);\n\n    const formData = await getFormData(request);\n\n    const startTime = formData.get('startTime');\n    const endTime = formData.get('endTime');\n\n    feed.startTime = new Date(startTime);\n    feed.endTime = new Date(endTime);\n\n    feed.put();\n\n    return this.redirect(FeedController.route);\n  }\n\n  async get(url, id) {\n    // Get the Data.\n    const feed = await Model.get(parseInt(id, 10));\n\n    if (!!feed == false) throw new NotFoundException(`Feed ${id} not found`);\n\n    return this.view.get(feed);\n  }\n\n  async getAll(url) {\n    // Get the Data.....\n    const feeds = await Model.getAll('type,startTime', { filter: ['BETWEEN', ['feed', new Date(0)], ['feed', new Date(99999999999999)]], order: Model.DESCENDING }) || [];\n\n    // Get the View.\n    return this.view.getAll(feeds);\n  }\n\n  async del(url, id) {\n    // Get the Data.\n    const model = await Model.get(parseInt(id, 10));\n\n    if (!!model == false) throw new NotFoundException(`Feed ${id} not found`);\n\n    await model.delete();\n    return this.redirect(FeedController.route);\n  }\n}","import { Controller } from \"./lib/controller.js\";\nimport { Log as Model } from '../models/log.js';\n\nexport class IndexController extends Controller {\n  static get route() {\n    return '^/$'\n  }\n\n  async getAll(url) {\n    const logs = await Model.getAll('startTime,type', { filter: ['BETWEEN', [new Date(0), 'a'], [new Date(9999999999999), 'z']], order: Model.DESCENDING }) || [];\n\n    return this.view.getAll(logs);\n  }\n\n  get(url) {\n    return this.view.render({ title: \"Ay....\", newTitle: \"Testing\" });;\n  }\n}","import { Log } from './log.js';\n\nexport class Sleep extends Log {\n  constructor(data = {}, key) {\n    super({...data, ...{isDuration: true}}, key);\n    this.type = 'sleep';\n  }\n}\n\n","import { Controller } from './lib/controller.js';\nimport { Sleep as Model } from '../models/sleep.js';\nimport { NotFoundException } from './exception/notfound.js';\nimport { getFormData } from './helpers/formData.js';\n\n\nexport class SleepController extends Controller {\n  static get route() {\n    return '/sleeps';\n  }\n\n  async create(url, request) {\n    // Show the create an entry UI.\n    return this.view.create(new Model);\n  }\n\n  async post(url, request) {\n\n    const formData = await getFormData(request);\n\n    const startTime = formData.get('startTime');\n    const endTime = formData.get('endTime');\n    const sleep = new Model({ startTime, endTime });\n\n    sleep.put();\n\n    return this.redirect(SleepController.route);\n  }\n\n  async edit(url, id) {\n    // Get the Data.\n    const sleep = await Model.get(parseInt(id, 10));\n\n    if (!!sleep == false) throw new NotFoundException(`Sleep ${id} not found`);;\n    \n    return this.view.edit(sleep);\n  }\n\n  async put(url, id, request) {\n    // Get the Data.\n    const sleep = await Model.get(parseInt(id, 10));\n\n    if (!!sleep == false) throw new NotFoundException(`Sleep ${id} not found`);\n\n    const formData = await getFormData(request);\n\n    const startTime = formData.get('startTime');\n    const endTime = formData.get('endTime');\n\n    sleep.startTime = new Date(startTime);\n    sleep.endTime = new Date(endTime);\n    sleep.put();\n\n    return this.redirect(SleepController.route);\n  }\n\n  async get(url, id) {\n    // Get the Data.\n    const sleep = await Model.get(parseInt(id, 10));\n\n    if (!!sleep == false) throw new NotFoundException(`Sleep ${id} not found`);\n\n    return this.view.get(sleep);\n  }\n\n  async getAll(url) {\n    // Get the Data.....\n    const sleeps = await Model.getAll('type,startTime', { filter: ['BETWEEN', ['sleep', new Date(0)], ['sleep', new Date(99999999999999)]], order: Model.DESCENDING }) || [];\n\n    return this.view.getAll(sleeps);\n  }\n\n  async del(url, id) {\n    // Get the Data.\n    const model = await Model.get(parseInt(id, 10));\n\n    if (!!model == false) throw new NotFoundException(`Sleep ${id} not found`);\n\n    await model.delete();\n    return this.redirect(SleepController.route);\n  }\n}","import { Log } from './log.js';\n\nexport class Wee extends Log {\n  constructor(data = {}, key) {\n    super(data, key);\n    this.type = 'wee';\n  }\n}\n","import { Controller } from './lib/controller.js';\nimport { Wee as Model } from '../models/wee.js';\nimport { NotFoundException } from './exception/notfound.js';\nimport { getFormData } from './helpers/formData.js';\n\nexport class WeeController extends Controller {\n  static get route() {\n    return '/wees';\n  }\n\n  async create(url, request) {\n    return this.view.create(new Model);\n  }\n\n  async post(url, request) {\n\n    const formData = await getFormData(request);\n\n    const startTime = formData.get('startTime');\n    const endTime = formData.get('endTime');\n    const wee = new Model({ startTime, endTime });\n\n    wee.put();\n\n    return this.redirect(WeeController.route);\n  }\n\n  async edit(url, id) {\n    // Get the Data.\n    const wee = await Model.get(parseInt(id, 10));\n\n    if (!!wee == false) throw new NotFoundException(`Wee ${id} not found`);;\n    \n    return this.view.edit(wee);\n  }\n\n  async put(url, id, request) {\n    // Get the Data.\n    const wee = await Model.get(parseInt(id, 10));\n\n    if (!!wee == false) throw new NotFoundException(`Wee ${id} not found`);\n\n    const formData = await getFormData(request);\n\n    const startTime = formData.get('startTime');\n    const endTime = formData.get('endTime');\n\n    wee.startTime = startTime;\n    wee.endTime = endTime;\n\n    wee.put();\n\n    return this.redirect(WeeController.route);\n  }\n\n  async get(url, id) {\n    // Get the Data.\n    const wee = await Model.get(parseInt(id, 10));\n\n    if (!!wee == false) throw new NotFoundException(`Wee ${id} not found`);\n\n    return this.view.get(wee);\n  }\n\n  async getAll(url) {\n    // Get the Data.....\n    const wees = await Model.getAll('type,startTime', { filter: ['BETWEEN', ['wee', new Date(0)], ['wee', new Date(99999999999999)]], order: Model.DESCENDING }) || [];\n\n    return this.view.getAll(wees);\n  }\n\n  async del(url, id) {\n    // Get the Data.\n    const model = await Model.get(parseInt(id, 10));\n\n    if (!!model == false) throw new NotFoundException(`Wee ${id} not found`);\n\n    await model.delete();\n    return this.redirect(WeeController.route);\n  }\n}","import { Log }  from './log.js'\n\nexport class Poop extends Log {\n  constructor(data = {}, key) {\n    super(data, key);\n    this.type = 'poop';\n  }\n}\n","import { Controller } from './lib/controller.js';\nimport { Poop as Model } from '../models/poop.js';\nimport { NotFoundException } from './exception/notfound.js';\nimport { getFormData } from './helpers/formData.js';\n\n\nexport class PoopController extends Controller {\n  static get route() {\n    return '/poops';\n  }\n\n  async create(url, request) {\n    // Show the create an entry UI.\n    return this.view.create(new Model);\n  }\n\n  async post(url, request) {\n\n    const formData = await getFormData(request);\n\n    const startTime = formData.get('startTime');\n    const endTime = formData.get('endTime');\n    const poop = new Model({ startTime, endTime });\n\n    poop.put();\n\n    return this.view.redirect(PoopController.route);\n  }\n\n  async edit(url, id) {\n    // Get the Data.\n    const poop = await Model.get(parseInt(id, 10));\n\n    if (!!poop == false) throw new NotFoundException(`Poop ${id} not found`);;\n    \n    return this.view.edit(poop);\n  }\n\n  async put(url, id, request) {\n    // Get the Data.\n    const poop = await Model.get(parseInt(id, 10));\n\n    if (!!poop == false) throw new NotFoundException(`Poop ${id} not found`);\n\n    const formData = await getFormData(request);\n\n    const startTime = formData.get('startTime');\n    const endTime = formData.get('endTime');\n\n    poop.startTime = startTime;\n    poop.endTime = endTime;\n\n    poop.put();\n\n    return this.redirect(PoopController.route);\n  }\n\n  async get(url, id) {\n    // Get the Data.\n    const poop = await Model.get(parseInt(id, 10));\n\n    if (!!poop == false) throw new NotFoundException(`Poop ${id} not found`);\n\n    return this.view.get(poop);\n  }\n\n  async getAll(url) {\n    // Get the Data.....\n    const poops = await Model.getAll('type,startTime', { filter: ['BETWEEN', ['poop', new Date(0)], ['poop', new Date(99999999999999)]], order: Model.DESCENDING }) || [];\n\n    return this.view.getAll(poops);\n  }\n\n  async del(url, id) {\n    // Get the Data.\n    const model = await Model.get(parseInt(id, 10));\n\n    if (!!model == false) throw new NotFoundException(`Poop ${id} not found`);\n\n    await model.delete();\n    return this.redirect(PoopController.route);\n  }\n}","const encoder = new TextEncoder();\n\nconst pipeInto = async (from, controller) => {\n  const reader = from.getReader();\n  \n  return reader.read().then(function process(result) {\n    if (result.done) {\n      return;\n    }\n    if (!!result.value) {\n      controller.enqueue(result.value);\n    }\n    return reader.read().then(process);\n  });\n};\n\nconst enqueueItem = async (val, controller) => {\n  if (val instanceof globalThis.ReadableStream) {\n    await pipeInto(val, controller);\n  } \n  else if (val instanceof Promise) {\n    let newVal;\n    newVal = await val;\n\n    if (newVal instanceof globalThis.ReadableStream) {\n      await pipeInto(newVal, controller);\n    } else {\n      await enqueueItem(newVal, controller);\n    }\n  }\n  else {\n    if (Array.isArray(val)) {\n      for (let item of val) {\n        await enqueueItem(item, controller)\n      }\n    }\n    else if (!!val) {\n      controller.enqueue(encoder.encode(val));\n    }\n  }\n}\n\nexport default async (strings, ...values) => {\n  if (\"ReadableStream\" in globalThis === false) {\n    // For node not supporting streams properly..... This should tree-shake away\n    globalThis = {...globalThis, ...await import(\"./private/streams/streams.js\")};\n  }\n  return new globalThis.ReadableStream({\n    start(controller) {\n      async function push() {\n        let i = 0;\n        while (i < values.length) {\n          let html = strings[i];\n          controller.enqueue(encoder.encode(html));\n          await enqueueItem(values[i], controller);\n\n          i++;\n        }\n        controller.enqueue(encoder.encode(strings[i]));\n        controller.close();\n      }\n\n      push();\n    }\n  });\n};","import template from '../lib/florawg.js'\n\nexport const head = (data, body) => {\n  return template`<!DOCTYPE html>\n<html>\n  <head>\n    <title>Baby Logger</title>\n    <script src=\"/client.js\" type=\"module\" defer></script>\n    <link rel=\"stylesheet\" href=\"/styles/main.css\">\n    <link rel=\"manifest\" href=\"/manifest.json\">\n    <meta name=\"viewport\" content=\"width=device-width\">\n  </head>\n  ${body}\n</html>`;\n};","import template from '../lib/florawg.js'\n\nexport const body = (data, items) => {\n  return template`\n  <header>\n    <h1>Baby Log</h1>\n    <div><a href=\"/\">All</a>, <a href=\"/feeds\">Feeds</a>, <a href=\"/sleeps\">Sleeps</a>, <a href=\"/poops\">Poops</a>,  <a href=\"/wees\">Wees</a></div>\n    </header>\n  <main>\n    <header>\n      <h2>${data.header}</h2>\n    </header>\n    <section>\n    ${items}\n    </section>\n  </main>\n  <footer>\n    <span>Add</span><a href=\"/feeds/new\" title=\"Add a feed\">🍼</a><a href=\"/sleeps/new\" title=\"Add a Sleep\">💤</a><a href=\"/poops/new\" title=\"Add a Poop\">💩</a><a href=\"/wees/new\" title=\"Add a Wee\">⛲️</a>\n  </footer>\n  `;\n};","import template from '../lib/florawg.js'\n\nif ('navigator' in globalThis === false) globalThis.navigator = {\n  language: 'en-GB'\n}\n\nconst calculateDuration = (ms) => {\n  const hours = Math.floor(ms / (1000 * 60 * 60));\n  ms -= hours * 1000 * 60 * 60;\n  const minutes = Math.floor(ms / (1000 * 60));\n\n  const hourStr = (hours == 1) ? 'Hour' : 'Hours'\n  const minuteStr = (minutes == 1) ? 'Minute' : 'Minutes'\n  return `${hours} ${hourStr} ${minutes} ${minuteStr}`;\n}\n\nexport const aggregate = (items) => {\n  const templates = [];\n  const lang = navigator.language;\n  const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n  let dayAggregate = {};\n  let currentDay;\n  let firstDay= true;\n  for (let item of items) {\n    if (item.startTime.toLocaleDateString(lang, options) != currentDay) {\n      if (firstDay == false) {\n        templates.push(template`<div>${Object.entries(dayAggregate).map(([key, value]) => `${value} ${key}${value > 1 ? 's' : ''}`).join(', ')}</div>`);\n        dayAggregate = {};\n      }\n      firstDay = false;\n      currentDay = item.startTime.toLocaleDateString(lang, options);\n      templates.push(template`<h3>${currentDay}</h3>`);\n    }\n\n    if (item.type in dayAggregate == false) dayAggregate[item.type] = 0;\n    dayAggregate[item.type]++\n\n    templates.push(template`<div class=\"row\">\n      <img src=\"/images/icons/${item.type}/res/mipmap-xxhdpi/${item.type}.png\" alt=\"${item.type}\"><span>\n        ${item.startTime.toLocaleTimeString(navigator.language, {hour: 'numeric', minute: 'numeric'})} \n        ${(item.isDuration) ?\n        (`- ${calculateDuration(item.duration)} ${(item.hasFinished === false) ? `(Still ${item.type}ing)` : ``} `)\n        : ``}\n        </span>\n        <a href=\"/${item.type}s/${item.id}/edit\"><img src=\"/images/icons/ui/edit_18dp.png\"></a><button class=\"delete row\" form=\"deleteForm${item.id}\"><img src=\"/images/icons/ui/delete_18dp.png\"></button>\n        <form id=\"deleteForm${item.id}\" class=\"deleteForm\" method=\"POST\" action=\"/${item.type}s/${item.id}/delete\"></form>\n    </div>`)\n  }\n  // Add a final aggregate. \n  templates.push(template`<div>${Object.entries(dayAggregate).map(([key, value]) => `${value} ${key}${value > 1 ? 's' : ''}`).join(', ')}</div>`);\n  return templates;\n}","export const correctISOTime = (date) => {\n  const tzoffset = (new Date()).getTimezoneOffset() * 60000;\n  return (new Date(date - tzoffset)).toISOString().replace(/:(\\d+).(\\d+)Z$/, '');\n}","import { head } from './partials/head.js';\nimport { body } from './partials/body.js';\nimport template from './lib/florawg.js';\nimport { aggregate } from './helpers/aggregate.js';\nimport { correctISOTime } from './helpers/timezone.js';\n\nif ('navigator' in globalThis === false) globalThis.navigator = {\n  language: 'en-GB'\n};\nexport class FeedView {\n  async getAll(data) {\n\n    data.type = \"Feed\";\n    data.header = \"Feeds\";\n\n    return template`${head(data,\n      body(data,\n        template`${aggregate(data)}`\n    ))}`;\n  }\n\n  async get(data) {\n\n    data.header = \"Feed\";\n\n    const lang = navigator.language;\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric' };\n  \n    return template`${head(data,\n      body(data,\n        template`<div>Start time: ${data.startTime.toLocaleString(lang, options)}</div>\n        <div>End time: ${(!!data.endTime) ? data.endTime.toLocaleString(lang, options) : ''}</div>\n        <a href=\"/${data.type}s/${data.id}/edit\"><img src=\"/images/icons/ui/edit_18dp.png\"></a>\n        <div class=\"row\">\n        <form method=\"POST\" id=\"deleteForm\" action=\"/${data.type}s/${data.id}/delete\"></form>\n        <button form=\"deleteForm\" class=\"delete\"><img src=\"/images/icons/ui/delete_18dp.png\"></button>\n        </div>`\n        )\n    )}`;\n  }\n\n  async create(data) {\n\n    data.header = \"Add a Feed\";\n\n    return template`${head(data,\n      body(data, `<div>\n    <form method=\"POST\" action=\"/feeds\">\n      <div><label for=startTime>Start time: <input type=\"datetime-local\" name=\"startTime\" value=\"${correctISOTime(new Date())}\"></label></div>\n      <div><label for=endTime>End time:<input type=\"datetime-local\" name=\"endTime\"></label></div>\n      <input type=\"submit\">\n    </form></div>\n    `))}`;\n  }\n\n  async edit(data) {\n    data.header = \"Update a Feed\";\n\n    return template`${head(data,\n      body(data, `<div class=\"form\">\n    <form method=\"POST\" id=\"deleteForm\" action=\"/${data.type}s/${data.id}/delete\"></form>\n    <form method=\"POST\" id=\"editForm\" action=\"/${data.type}s/${data.id}/edit\"></form>\n    <div>\n      <div><label for=startTime>Start time: <input type=\"datetime-local\" name=\"startTime\" form=\"editForm\" value=\"${correctISOTime(data.startTime)}\"></label></div>\n      <div><label for=endTime>End time:<input type=\"datetime-local\" name=\"endTime\" form=\"editForm\" value=\"${data.hasFinished ? correctISOTime(new Date()) : ''}\"></label></div>\n      <div class=\"controls\">\n        <button form=\"deleteForm\" class=\"delete\"><img src=\"/images/icons/ui/delete_18dp.png\"></button>\n        <input type=\"submit\" form=\"editForm\" value=\"Save\">\n      </div>\n    </div>\n    </div>\n    `))}`;\n  }\n}","import { Controller } from \"../lib/controller.js\";\n\n// This will be a server only route;\nexport class StaticController extends Controller {\n\n  static get route() {\n    return ''; // Match everything.\n  }\n\n  constructor(paths) {\n    super();\n  }\n\n  async get(url, id, request) {\n    return caches.match(request).then(response => {\n      if (!!response) return response;\n      return fetch(url);\n    });\n  }\n\n  /*\n    url: URL\n  */\n  async getAll(url, request) {\n    return this.get(url, undefined, request);\n  }\n}","import { App } from '../app.js';\n\nimport { IndexController, FeedController, SleepController, WeeController, PoopController } from '../controllers/_.js';\nimport { IndexView, FeedView, SleepView, WeeView, PoopView } from '../views/_.js';\n\n\nimport { NotFoundController } from '../controllers/notfound.js';\nimport { StaticController } from '../controllers/client/static.js';\n\nimport paths from './sw-manifest.json';\n\nconst app = new App();\n\napp.registerRoute(IndexController.route, new IndexController(new IndexView));\napp.registerRoute(FeedController.route, new FeedController(new FeedView));\napp.registerRoute(SleepController.route, new SleepController(new SleepView));\napp.registerRoute(PoopController.route, new PoopController(new PoopView));\napp.registerRoute(WeeController.route, new WeeController(new WeeView));\napp.registerRoute(StaticController.route, new StaticController);\n\nself.onfetch = (event) => {\n  const { request } = event\n  const url = new URL(request.url);\n\n  const controller = app.resolve(url);\n  if (controller instanceof NotFoundController) {\n    // Fall through to the network\n    return;\n  }\n  const view = controller.getView(url, request);\n\n  if (!!view) {\n    return event.respondWith(view.then(output => {\n      if (output instanceof Response) return output;\n\n      const options = {\n        status: (!!output) ? 200 : 404,\n        headers: {\n          'Content-Type': 'text/html; charset=utf-8'\n        }\n      };\n      let body = output || \"Not Found\";\n\n      return new Response(body, options);\n    }).catch(ex => {\n      const options = {\n        status: 404,\n        headers: {\n          'Content-Type': 'text/html'\n        }\n      };\n      return new Response(ex.toString(), options);\n    }));\n  }\n\n  // If not caught by a controller, go to the network.\n};\n\nlet urls = [];\n\nself.oninstall = async (event) => {\n  // We will do something a lot more clever here soon.\n  event.waitUntil(caches.open(\"v1\").then(async (cache) => {\n   \n    return cache.addAll(paths);\n  }));\n  self.skipWaiting();\n}\n\nself.onactivate = (event) => {\n  event.waitUntil(clients.claim());\n}","import { head } from './partials/head.js';\nimport { body } from './partials/body.js';\nimport template from './lib/florawg.js';\nimport { aggregate } from './helpers/aggregate.js';\n\nexport class IndexView {\n  async getAll(data) {\n\n    data.type = \"All\";\n    data.header = \"All\";\n\n    return template`${head(data, \n      body(data, \n        template`${aggregate(data)}`)\n    )}`;\n  }\n}\n\n\n","import { head } from './partials/head.js';\nimport { body } from './partials/body.js';\nimport template from './lib/florawg.js'\nimport { aggregate } from './helpers/aggregate.js';\nimport { correctISOTime } from './helpers/timezone.js';\n\nexport class SleepView {\n  async getAll(data) {\n\n    data.type = \"Sleeps\";\n    data.header = \"Sleeps\";\n\n    return template`${head(data,\n      body(data,\n        template`${aggregate(data)}`)\n    )}`;\n  }\n\n  async get(data) {\n\n    data.header = \"Sleep\";\n\n    const lang = navigator.language;\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric' };\n  \n    return template`${head(data,\n      body(data,\n        template`<div>Start time: ${data.startTime.toLocaleString(lang, options)}</div>\n        <div>End time: ${(!!data.endTime) ? data.endTime.toLocaleString(lang, options) : ''}</div>`)\n    )}`;\n  }\n\n  async create(data) {\n\n    data.header = \"Add a Sleep\";\n\n    return template`${head(data,\n      body(data, `<div>\n    <form method=\"POST\" action=\"/sleeps\">\n    <div><label for=startTime>Start time: <input type=\"datetime-local\" name=\"startTime\" value=\"${correctISOTime(new Date())}\"></label></div>\n    <div><label for=endTime>End time:<input type=\"datetime-local\" name=\"endTime\"></label></div>\n    <input type=\"submit\">\n    </form></div>\n    `))}`;\n  }\n\n  async edit(data) {\n\n    data.header = \"Update a Sleep\";\n\n    return template`${head(data,\n      body(data, `<div class=\"form\">\n    <form method=\"POST\" id=\"deleteForm\" action=\"/${data.type}s/${data.id}/delete\"></form>\n    <form method=\"POST\" id=\"editForm\" action=\"/${data.type}s/${data.id}/edit\"></form>\n    <div>\n      <div><label for=startTime>Start time: <input type=\"datetime-local\" name=\"startTime\" form=\"editForm\" value=\"${correctISOTime(data.startTime)}\"></label></div>\n      <div><label for=endTime>End time:<input type=\"datetime-local\" name=\"endTime\" form=\"editForm\" value=\"${data.hasFinished ? correctISOTime(new Date()) : ''}\"></label></div>\n      <div class=\"controls\">\n        <button form=\"deleteForm\"><img src=\"/images/icons/ui/delete_18dp.png\"></button>\n        <input type=\"submit\" form=\"editForm\" value=\"Save\">\n      </div>\n    </div>\n    </div>\n    `))}`;\n  }\n}","import { head } from './partials/head.js';\nimport { body } from './partials/body.js';\nimport template from './lib/florawg.js'\nimport { aggregate } from './helpers/aggregate.js';\nimport { correctISOTime } from './helpers/timezone.js';\n\nexport class PoopView {\n  async getAll(data) {\n\n    data.type = \"Poop\";\n    data.header = \"Poops\";\n\n    return template`${head(data,\n      body(data,\n        template`${aggregate(data)}`)\n    )}`;\n  }\n\n  async get(data) {\n\n    data.header = \"Poop\";\n\n    const lang = navigator.language;\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric' };\n  \n    return template`${head(data,\n      body(data,\n        template`<div>Start time: ${data.startTime.toLocaleString(lang, options)}</div>\n        <div>End time: ${(!!data.endTime) ? data.endTime.toLocaleString(lang, options) : ''}</div>`)\n    )}`;\n  }\n\n  async create(data) {\n\n    data.header = \"Add a Poop\";\n\n    return template`${head(data,\n      body(data, `<div>\n    <form method=\"POST\" action=\"/poops\">\n      <label for=startTime>Start time: <input type=\"datetime-local\" name=\"startTime\" value=\"${correctISOTime(new Date())}\"></label>\n      <input type=\"submit\">\n    </form></div>\n    `))}`;\n  }\n\n  async edit(data) {\n\n    data.header = \"Update a Poop\";\n\n    return template`${head(data,\n      body(data, `<div class=\"form\">\n    <form method=\"POST\" id=\"deleteForm\" action=\"/${data.type}s/${data.id}/delete\"></form>\n    <form method=\"POST\" id=\"editForm\" action=\"/${data.type}s/${data.id}/edit\"></form>\n    <div>\n      <div><label for=startTime>Start time: <input type=\"datetime-local\" name=\"startTime\" form=\"editForm\" value=\"${correctISOTime(data.startTime)}\"></label></div>\n      <div class=\"controls\">\n        <button form=\"deleteForm\"><img src=\"/images/icons/ui/delete_18dp.png\"></button>\n        <input type=\"submit\" form=\"editForm\" value=\"Save\">\n      </div>\n    </div>\n    </div>\n    `))}`;\n  }\n}","import { head } from './partials/head.js';\nimport { body } from './partials/body.js';\nimport template from './lib/florawg.js'\nimport { aggregate } from './helpers/aggregate.js';\nimport { correctISOTime } from './helpers/timezone.js';\n\nexport class WeeView {\n  async getAll(data) {\n\n    data.type = \"Wee\";\n    data.header = \"Wees\";\n\n    return template`${head(data,\n      body(data,\n        template`${aggregate(data)}`)\n    )}`;\n  }\n\n  async get(data) {\n\n    data.header = \"Wee\";\n\n    const lang = navigator.language;\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric' };\n\n    return template`${head(data,\n      body(data,\n        template`<div>Start time: ${data.startTime.toLocaleString(lang, options)}</div>\n        <div>End time: ${(!!data.endTime) ? data.endTime.toLocaleString(lang, options) : ''}</div>`)\n    )}`;\n  }\n\n  async create(data) {\n\n    data.header = \"Add a Wee\";\n\n    return template`${head(data,\n      body(data, `<div>\n    <form method=\"POST\" action=\"/wees\">\n      <label for=startTime>Start time: <input type=\"datetime-local\" name=\"startTime\" value=\"${correctISOTime(new Date())}\"></label>\n      <input type=\"submit\">\n    </form></div>\n    `))}`;\n  }\n\n  async edit(data) {\n\n    data.header = \"Update a Wee\";\n\n    return template`${head(data,\n      body(data, `<div class=\"form\">\n    <form method=\"POST\" id=\"deleteForm\" action=\"/${data.type}s/${data.id}/delete\"></form>\n    <form method=\"POST\" id=\"editForm\" action=\"/${data.type}s/${data.id}/edit\"></form>\n    <div>\n      <div><label for=startTime>Start time: <input type=\"datetime-local\" name=\"startTime\" form=\"editForm\" value=\"${correctISOTime(data.startTime)}\"></label></div>\n      <div class=\"controls\">\n        <button form=\"deleteForm\"><img src=\"/images/icons/ui/delete_18dp.png\"></button>\n        <input type=\"submit\" form=\"editForm\" value=\"Save\">\n      </div>\n    </div>\n    </div>\n    `))}`;\n  }\n}"],"names":["MethodNotFound","[object Object]","message","this","name","Controller","view","url","request","pathname","URL","method","route","constructor","idMatch","match","create","edit","get","getAll","post","put","del","Response","redirect","NotFoundController","routes","routeNotFound","Config","version","stores","Log","properties","autoIncrement","keyPath","indexes","type,startTime","unique","startTime,type","ConfigManagerInstance","globalThis","ConfigManagerInstance_","ConfigManager","Promise","resolve","config","c","config_","storeName","DatabaseInstance","DatabaseInstance_","Database","hasSupport","then","configManager","db_","name_","version_","stores_","reject","dbOpen","indexedDB","open","onupgradeneeded","e","target","result","transaction","storeNames","Object","keys","s","length","dbStore","objectStoreNames","contains","deleteOnUpgrade","deleteObjectStore","objectStore","createObjectStore","index","indexNames","existingIndexNames","i","createIndex","split","indexOf","deleteIndex","onsuccess","onerror","close","console","log","dbTransaction","deleteDatabase","value","key","db","dbRequest","oncomplete","onabort","dbStoreRequest","filter","order","cmpFunc","dbCursor","dbFilter","operator","values","lower","upper","IDBKeyRange","bound","only","upperBound","lowerBound","parseFilter","openCursor","dbResults","cursor","undefined","push","continue","delete","clear","Model","ASCENDING","DESCENDING","UPDATED","nuke","store","getStore","resultKey","results","results_","deleteAll","catch","hasFinished","endTime","duration","end","Date","startTime","id","type","isDuration","super","Feed","data","NotFoundException","Error","getFormData","async","arrayBuffer","decoder","TextDecoder","URLSearchParams","decode","FeedController","formData","feed","parseInt","feeds","model","IndexController","logs","render","title","newTitle","Sleep","SleepController","sleep","sleeps","Wee","WeeController","wee","wees","Poop","PoopController","poop","poops","encoder","TextEncoder","pipeInto","from","controller","reader","getReader","read","process","done","enqueue","enqueueItem","val","ReadableStream","newVal","Array","isArray","item","encode","strings","html","head","body","template","items","header","navigator","language","calculateDuration","ms","hours","Math","floor","minutes","aggregate","templates","lang","options","weekday","year","month","day","currentDay","dayAggregate","firstDay","toLocaleDateString","entries","map","join","toLocaleTimeString","hour","minute","correctISOTime","date","tzoffset","getTimezoneOffset","toISOString","replace","StaticController","paths","caches","response","fetch","app","registerRoute","toLocaleString","self","onfetch","event","getView","respondWith","output","status","headers","Content-Type","ex","toString","oninstall","waitUntil","cache","addAll","skipWaiting","onactivate","clients","claim"],"mappings":"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"}