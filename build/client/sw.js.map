{"version":3,"file":"sw.js","sources":["../../controllers/lib/controller.js","../../controllers/notfound.js","../../app.js","../../controllers/exception/notfound.js","../../controllers/helpers/formData.js","../../controllers/feed.js","../../controllers/index.js","../../controllers/sleep.js","../../controllers/wee.js","../../controllers/poop.js","../../views/lib/florawg.js","../../views/partials/head.js","../../views/partials/body.js","../../views/helpers/aggregate.js","../../views/helpers/timezone.js","../../views/feed.js","../../models/config/config.js","../../models/lib/configmanager.js","../../models/lib/database.js","../../models/lib/model.js","../../models/log.js","../../controllers/client/static.js","../../client/sw.js","../../views/index.js","../../models/feed.js","../../views/sleep.js","../../models/sleep.js","../../views/poop.js","../../models/poop.js","../../views/wee.js","../../models/wee.js"],"sourcesContent":["class MethodNotFound {\n  constructor(message) {\n    //super(message);\n    this.name = \"MethodNotFound\";\n  }\n}\n\nexport class Controller {\n\n  constructor(view, model) {\n    this.view = view;\n    this.Model = model;\n  }\n\n  getView(url, request) {\n    const { pathname } = new URL(url);\n    const { method } = request;\n    const route = this.constructor.route;\n    const idMatch = pathname.match(`${route}/(.+)/`);\n\n    // The instance of the controller must implement these functions;\n    if (method === 'GET') {\n      const idMatch = pathname.match(`${route}/(.+)/`);\n      if (pathname.match(`${route}/new`)) {\n        return this.create(url);\n      } else if (pathname.match(`${route}/(.+)/edit$`)) {\n        return this.edit(url, idMatch[1], request);\n      } else if (pathname.match(`${route}/(.+)/`)) {\n        return this.get(url, idMatch[1], request);\n      }\n      return this.getAll(url, request);\n    }\n    else if (method === 'POST') {\n      if (pathname.match(`${route}/*$`)) {\n        return this.post(url, request);\n      } else if (pathname.match(`${route}/(.+)/edit$`)) {\n        return this.put(url, idMatch[1], request);\n      } else if (pathname.match(`${route}/(.+)/delete$`)) {\n        const idMatch = pathname.match(`${route}/(.+)/`);\n        return this.del(url, idMatch[1], request);\n      }\n    }\n    else if (method === 'PUT') {\n      return this.put(url, idMatch[1], request);\n    }\n    else if (method === 'DELETE') {\n      const idMatch = pathname.match(`${route}/(.+)/`);\n      return this.del(url, idMatch[1], request);\n    }\n  }\n\n  redirect(url) {\n    return Response.redirect(url, \"302\");\n  }\n\n  create(url) {\n    throw new MethodNotFound('create');\n  }\n\n  edit(url) {\n    throw new MethodNotFound('');\n  }\n\n  get(url) {\n    throw new MethodNotFound('get');\n  }\n\n  getAll(url) {\n    throw new MethodNotFound('getAll');\n  }\n\n  post(url) {\n    throw new MethodNotFound('post');\n  }\n\n  del(url) {\n    throw new MethodNotFound('delete');\n  }\n}\n","import { Controller } from './lib/controller.js';\n\nexport class NotFoundController extends Controller {\n  render(url) {\n\n  }\n}","import { NotFoundController } from './controllers/notfound.js'\n\nexport class App {\n  get routes() {\n    return routes;\n  }\n\n  registerRoute(route, controller) {\n    routes.push({route, controller});\n  }\n\n  resolve(url) {\n    const { pathname } = url;\n    for(let {route, controller} of routes) {\n      if (pathname.match(route)) {\n        return controller;\n      }\n    }\n\n    return routeNotFound;\n  }\n}\n\nconst routes = [];\nconst routeNotFound = new NotFoundController;","export class NotFoundException extends Error {\n  constructor(message) {\n    super(message);\n  }\n}","// Safari's messed up formData on the request object.\n\nexport const getFormData = async (request) => {\n  const data = await request.arrayBuffer();\n  const decoder = new TextDecoder(\"utf-8\")\n  const params = new URLSearchParams(`?${decoder.decode(data)}`);\n\n  return params;\n};","import { Controller } from './lib/controller.js';\nimport { NotFoundException } from './exception/notfound.js';\nimport { getFormData } from './helpers/formData.js';\n\n\nexport class FeedController extends Controller {\n  static get route() {\n    return '/feeds';\n  }\n\n  async create(url, request) {\n    // Show the create an entry UI.\n    return this.view.create(new this.Model);\n  }\n\n  async post(url, request) {\n\n    const formData = await getFormData(request);\n    const startDate = formData.get('startDate');\n    const startTime = formData.get('startTime');\n    const endDate = formData.get('endDate');\n    const endTime = formData.get('endTime');\n\n    const start = new Date(`${startDate}T${startTime}`);\n    const end = (!!endDate && !!endTime) ? new Date(`${endDate}T${endDate}`) : undefined;\n    \n    const feed = new this.Model({ startTime: start, endTime: end });\n\n    feed.put();\n\n    return this.redirect(FeedController.route);\n  }\n\n  async edit(url, id) {\n    // Get the Data.\n    const feed = await this.Model.get(parseInt(id, 10));\n\n    if (!!feed == false) throw new NotFoundException(`Feed ${id} not found`);;\n    \n    return this.view.edit(feed);\n  }\n\n  async put(url, id, request) {\n    // Get the Data.\n    const feed = await this.Model.get(parseInt(id, 10));\n\n    if (!!feed == false) throw new NotFoundException(`Feed ${id} not found`);\n\n    const formData = await getFormData(request);\n\n    const startDate = formData.get('startDate');\n    const startTime = formData.get('startTime');\n    const endDate = formData.get('endDate');\n    const endTime = formData.get('endTime');\n\n    feed.startTime = new Date(`${startDate}T${startTime}`);\n    feed.endTime  = (!!endDate && !!endTime) ? new Date(`${endDate}T${endTime}`) : undefined;\n    \n    feed.put();\n\n    return this.redirect(FeedController.route);\n  }\n\n  async get(url, id) {\n    // Get the Data.\n    const feed = await this.Model.get(parseInt(id, 10));\n\n    if (!!feed == false) throw new NotFoundException(`Feed ${id} not found`);\n\n    return this.view.get(feed);\n  }\n\n  async getAll(url) {\n    // Get the Data.....\n    const feeds = await this.Model.getAll('type,startTime', { filter: ['BETWEEN', ['feed', new Date(0)], ['feed', new Date(99999999999999)]], order: this.Model.DESCENDING }) || [];\n\n    // Get the View.\n    return this.view.getAll(feeds);\n  }\n\n  async del(url, id) {\n    // Get the Data.\n    const model = await this.Model.get(parseInt(id, 10));\n\n    if (!!model == false) throw new NotFoundException(`Feed ${id} not found`);\n\n    await model.delete();\n    return this.redirect(FeedController.route);\n  }\n}","import { Controller } from \"./lib/controller.js\";\n\nexport class IndexController extends Controller {\n  static get route() {\n    return '^/$'\n  }\n\n  async getAll(url) {\n    const logs = await this.Model.getAll('startTime,type', { filter: ['BETWEEN', [new Date(0), 'a'], [new Date(9999999999999), 'z']], order: this.Model.DESCENDING }) || [];\n\n    return this.view.getAll(logs);\n  }\n\n  get(url) {\n    return this.view.render({ title: \"Ay....\", newTitle: \"Testing\" });;\n  }\n}","import { Controller } from './lib/controller.js';\nimport { NotFoundException } from './exception/notfound.js';\nimport { getFormData } from './helpers/formData.js';\n\n\nexport class SleepController extends Controller {\n  static get route() {\n    return '/sleeps';\n  }\n\n  async create(url, request) {\n    // Show the create an entry UI.\n    return this.view.create(new this.Model);\n  }\n\n  async post(url, request) {\n\n    const formData = await getFormData(request);\n    \n    const startDate = formData.get('startDate');\n    const startTime = formData.get('startTime');\n    const endDate = formData.get('endDate');\n    const endTime = formData.get('endTime');\n\n    const start = new Date(`${startDate}T${startTime}`);\n    const end = (!!endDate && !!endTime) ? new Date(`${endDate}T${endTime}`) : undefined;\n    \n    const sleep = new this.Model({ startTime: start, endTime: end });\n\n    sleep.put();\n\n    return this.redirect(SleepController.route);\n  }\n\n  async edit(url, id) {\n    // Get the Data.\n    const sleep = await this.Model.get(parseInt(id, 10));\n\n    if (!!sleep == false) throw new NotFoundException(`Sleep ${id} not found`);;\n    \n    return this.view.edit(sleep);\n  }\n\n  async put(url, id, request) {\n    // Get the Data.\n    const sleep = await this.Model.get(parseInt(id, 10));\n\n    if (!!sleep == false) throw new NotFoundException(`Sleep ${id} not found`);\n\n    const formData = await getFormData(request);\n\n    const startDate = formData.get('startDate');\n    const startTime = formData.get('startTime');\n    const endDate = formData.get('endDate');\n    const endTime = formData.get('endTime');\n\n    sleep.startTime = new Date(`${startDate}T${startTime}`);\n    sleep.endTime = (!!endDate && !!endTime) ? new Date(`${endDate}T${endTime}`) : undefined;\n    \n    sleep.put();\n\n    return this.redirect(SleepController.route);\n  }\n\n  async get(url, id) {\n    // Get the Data.\n    const sleep = await this.Model.get(parseInt(id, 10));\n\n    if (!!sleep == false) throw new NotFoundException(`Sleep ${id} not found`);\n\n    return this.view.get(sleep);\n  }\n\n  async getAll(url) {\n    // Get the Data.....\n    const sleeps = await this.Model.getAll('type,startTime', { filter: ['BETWEEN', ['sleep', new Date(0)], ['sleep', new Date(99999999999999)]], order: this.Model.DESCENDING }) || [];\n\n    return this.view.getAll(sleeps);\n  }\n\n  async del(url, id) {\n    // Get the Data.\n    const model = await this.Model.get(parseInt(id, 10));\n\n    if (!!model == false) throw new NotFoundException(`Sleep ${id} not found`);\n\n    await model.delete();\n    return this.redirect(SleepController.route);\n  }\n}","import { Controller } from './lib/controller.js';\nimport { NotFoundException } from './exception/notfound.js';\nimport { getFormData } from './helpers/formData.js';\n\nexport class WeeController extends Controller {\n  static get route() {\n    return '/wees';\n  }\n\n  async create(url, request) {\n    return this.view.create(new this.Model);\n  }\n\n  async post(url, request) {\n\n    const formData = await getFormData(request);\n    \n    const startDate = formData.get('startDate');\n    const startTime = formData.get('startTime');\n\n    const start = `${startDate}T${startTime}`;\n    \n    const wee = new this.Model({ startTime: start });\n\n    wee.put();\n\n    return this.redirect(WeeController.route);\n  }\n\n  async edit(url, id) {\n    // Get the Data.\n    const wee = await this.Model.get(parseInt(id, 10));\n\n    if (!!wee == false) throw new NotFoundException(`Wee ${id} not found`);;\n    \n    return this.view.edit(wee);\n  }\n\n  async put(url, id, request) {\n    // Get the Data.\n    const wee = await this.Model.get(parseInt(id, 10));\n\n    if (!!wee == false) throw new NotFoundException(`Wee ${id} not found`);\n\n    const formData = await getFormData(request);\n\n    const startDate = formData.get('startDate');\n    const startTime = formData.get('startTime');\n\n    wee.startTime = new Date(`${startDate}T${startTime}`);\n\n    wee.put();\n\n    return this.redirect(WeeController.route);\n  }\n\n  async get(url, id) {\n    // Get the Data.\n    const wee = await this.Model.get(parseInt(id, 10));\n\n    if (!!wee == false) throw new NotFoundException(`Wee ${id} not found`);\n\n    return this.view.get(wee);\n  }\n\n  async getAll(url) {\n    // Get the Data.....\n    const wees = await this.Model.getAll('type,startTime', { filter: ['BETWEEN', ['wee', new Date(0)], ['wee', new Date(99999999999999)]], order: this.Model.DESCENDING }) || [];\n\n    return this.view.getAll(wees);\n  }\n\n  async del(url, id) {\n    // Get the Data.\n    const model = await this.Model.get(parseInt(id, 10));\n\n    if (!!model == false) throw new NotFoundException(`Wee ${id} not found`);\n\n    await model.delete();\n    return this.redirect(WeeController.route);\n  }\n}","import { Controller } from './lib/controller.js';\nimport { NotFoundException } from './exception/notfound.js';\nimport { getFormData } from './helpers/formData.js';\n\n\nexport class PoopController extends Controller {\n  static get route() {\n    return '/poops';\n  }\n\n  async create(url, request) {\n    // Show the create an entry UI.\n    return this.view.create(new this.Model);\n  }\n\n  async post(url, request) {\n\n    const formData = await getFormData(request);\n\n    const startDate = formData.get('startDate');\n    const startTime = formData.get('startTime');\n\n    const start = `${startDate}T${startTime}`;\n    \n    const poop = new this.Model({ startTime: start });\n\n    poop.put();\n\n    return this.redirect(PoopController.route);\n  }\n\n  async edit(url, id) {\n    // Get the Data.\n    const poop = await this.Model.get(parseInt(id, 10));\n\n    if (!!poop == false) throw new NotFoundException(`Poop ${id} not found`);;\n    \n    return this.view.edit(poop);\n  }\n\n  async put(url, id, request) {\n    // Get the Data.\n    const poop = await this.Model.get(parseInt(id, 10));\n\n    if (!!poop == false) throw new NotFoundException(`Poop ${id} not found`);\n\n    const formData = await getFormData(request);\n\n    const startDate = formData.get('startDate');\n    const startTime = formData.get('startTime');\n\n    poop.startTime = new Date(`${startDate}T${startTime}`);\n\n    poop.put();\n\n    return this.redirect(PoopController.route);\n  }\n\n  async get(url, id) {\n    // Get the Data.\n    const poop = await this.Model.get(parseInt(id, 10));\n\n    if (!!poop == false) throw new NotFoundException(`Poop ${id} not found`);\n\n    return this.view.get(poop);\n  }\n\n  async getAll(url) {\n    // Get the Data.....\n    const poops = await this.Model.getAll('type,startTime', { filter: ['BETWEEN', ['poop', new Date(0)], ['poop', new Date(99999999999999)]], order: this.Model.DESCENDING }) || [];\n\n    return this.view.getAll(poops);\n  }\n\n  async del(url, id) {\n    // Get the Data.\n    const model = await this.Model.get(parseInt(id, 10));\n\n    if (!!model == false) throw new NotFoundException(`Poop ${id} not found`);\n\n    await model.delete();\n    return this.redirect(PoopController.route);\n  }\n}","const encoder = new TextEncoder();\n\nconst pipeInto = async (from, controller) => {\n  const reader = from.getReader();\n  \n  return reader.read().then(function process(result) {\n    if (result.done) {\n      return;\n    }\n    if (!!result.value) {\n      controller.enqueue(result.value);\n    }\n    return reader.read().then(process);\n  });\n};\n\nconst enqueueItem = async (val, controller) => {\n  if (val instanceof globalThis.ReadableStream) {\n    await pipeInto(val, controller);\n  } \n  else if (val instanceof Promise) {\n    let newVal;\n    newVal = await val;\n\n    if (newVal instanceof globalThis.ReadableStream) {\n      await pipeInto(newVal, controller);\n    } else {\n      await enqueueItem(newVal, controller);\n    }\n  }\n  else {\n    if (Array.isArray(val)) {\n      for (let item of val) {\n        await enqueueItem(item, controller)\n      }\n    }\n    else if (!!val) {\n      controller.enqueue(encoder.encode(val));\n    }\n  }\n}\n\nexport default async (strings, ...values) => {\n  if (\"ReadableStream\" in globalThis === false) {\n    // For node not supporting streams properly..... This should tree-shake away\n    globalThis = {...globalThis, ...await import(\"./private/streams/streams.js\")};\n  }\n  return new globalThis.ReadableStream({\n    start(controller) {\n      async function push() {\n        let i = 0;\n        while (i < values.length) {\n          let html = strings[i];\n          controller.enqueue(encoder.encode(html));\n          await enqueueItem(values[i], controller);\n\n          i++;\n        }\n        controller.enqueue(encoder.encode(strings[i]));\n        controller.close();\n      }\n\n      push();\n    }\n  });\n};","import template from '../lib/florawg.js'\n\nexport const head = (data, body) => {\n  return template`<!DOCTYPE html>\n<html>\n  <head>\n    <title>Baby Logger</title>\n    <script src=\"/client.js\" type=\"module\" defer></script>\n    <link rel=\"stylesheet\" href=\"/styles/main.css\">\n    <link rel=\"manifest\" href=\"/manifest.json\">\n    <meta name=\"viewport\" content=\"width=device-width\">\n  </head>\n  ${body}\n</html>`;\n};","import template from '../lib/florawg.js'\n\nexport const body = (data, items) => {\n  return template`\n  <header>\n    <h1>Baby Log</h1>\n    <div><a href=\"/\">All</a>, <a href=\"/feeds\">Feeds</a>, <a href=\"/sleeps\">Sleeps</a>, <a href=\"/poops\">Poops</a>,  <a href=\"/wees\">Wees</a></div>\n    </header>\n  <main>\n    <header>\n      <h2>${data.header}</h2>\n    </header>\n    <section>\n    ${items}\n    </section>\n  </main>\n  <footer>\n    <span>Add</span><a href=\"/feeds/new\" title=\"Add a feed\">🍼</a><a href=\"/sleeps/new\" title=\"Add a Sleep\">💤</a><a href=\"/poops/new\" title=\"Add a Poop\">💩</a><a href=\"/wees/new\" title=\"Add a Wee\">⛲️</a>\n  </footer>\n  `;\n};","import template from '../lib/florawg.js'\n\nif ('navigator' in globalThis === false) globalThis.navigator = {\n  language: 'en-GB'\n}\n\nconst calculateDuration = (ms) => {\n  const hours = Math.floor(ms / (1000 * 60 * 60));\n  ms -= hours * 1000 * 60 * 60;\n  const minutes = Math.floor(ms / (1000 * 60));\n\n  const hourStr = (hours == 1) ? 'Hour' : 'Hours'\n  const minuteStr = (minutes == 1) ? 'Minute' : 'Minutes'\n  return `${hours} ${hourStr} ${minutes} ${minuteStr}`;\n}\n\nexport const aggregate = (items) => {\n  const templates = [];\n  const lang = navigator.language;\n  const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n  let dayAggregate = {};\n  let timeAggregate = {};\n  let currentDay;\n  let firstDay= true;\n  for (let item of items) {\n    if (item.startTime.toLocaleDateString(lang, options) != currentDay) {\n      if (firstDay == false) {\n        templates.push(template`<div>${Object.entries(dayAggregate).map(([key, value]) => `${value} ${key}${value > 1 ? 's' : ''}`).join(', ')}</div>`);\n        templates.push(template`<div>${Object.entries(timeAggregate).map(([key, value]) => `${calculateDuration(value)} ${key}ing`).join(', ')}</div>`);\n\n        dayAggregate = {};\n      }\n      firstDay = false;\n      currentDay = item.startTime.toLocaleDateString(lang, options);\n      templates.push(template`<h3>${currentDay}</h3>`);\n    }\n\n    if (item.type in dayAggregate == false) dayAggregate[item.type] = 0;\n    dayAggregate[item.type]++\n\n    if (item.isDuration && item.hasFinished) {\n      if (item.type in timeAggregate == false) timeAggregate[item.type] = 0;\n      timeAggregate[item.type] += item.duration;\n    }\n   \n    templates.push(template`<div class=\"row\">\n      <img src=\"/images/icons/${item.type}/res/mipmap-xxhdpi/${item.type}.png\" alt=\"${item.type}\"><span>\n        ${item.startTime.toLocaleTimeString(navigator.language, {hour: 'numeric', minute: 'numeric'})} \n        ${(item.isDuration) ?\n        (`- ${calculateDuration(item.duration)} ${(item.hasFinished === false) ? `(Still ${item.type}ing)` : ``} `)\n        : ``}\n        </span>\n        <a href=\"/${item.type}s/${item.id}/edit\"><img src=\"/images/icons/ui/edit_18dp.png\"></a><button class=\"delete row\" form=\"deleteForm${item.id}\"><img src=\"/images/icons/ui/delete_18dp.png\"></button>\n        <form id=\"deleteForm${item.id}\" class=\"deleteForm\" method=\"POST\" action=\"/${item.type}s/${item.id}/delete\"></form>\n    </div>`)\n  }\n  // Add a final aggregate. \n  templates.push(template`<div>${Object.entries(dayAggregate).map(([key, value]) => `${value} ${key}${value > 1 ? 's' : ''}`).join(', ')}</div>`);\n  templates.push(template`<div>${Object.entries(timeAggregate).map(([key, value]) => `${calculateDuration(value)} ${key}ing`).join(', ')}</div>`);\n\n  return templates;\n}","export const correctISOTime = (date) => {\n  const tzoffset = (new Date()).getTimezoneOffset() * 60000;\n  return (new Date(date - tzoffset)).toISOString().replace(/:(\\d+).(\\d+)Z$/, '');\n};\n\nexport const getDate = (date) => {\n  if (date instanceof Date === false) date = new Date(date);\n  return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, 0)}-${date.getDate().toString().padStart(2, 0)}`;\n};\n\nexport const getTime = (date) => {\n  if (date instanceof Date === false) date = new Date(date);\n  return `${date.getHours().toString().padStart(2, 0)}:${date.getMinutes().toString().padStart(2, 0)}`;\n}","import { head } from './partials/head.js';\nimport { body } from './partials/body.js';\nimport template from './lib/florawg.js';\nimport { aggregate } from './helpers/aggregate.js';\nimport { correctISOTime, getDate, getTime } from './helpers/timezone.js';\n\nif ('navigator' in globalThis === false) globalThis.navigator = {\n  language: 'en-GB'\n};\nexport class FeedView {\n  async getAll(data) {\n\n    data.type = \"Feed\";\n    data.header = \"Feeds\";\n\n    return template`${head(data,\n      body(data,\n        template`${aggregate(data)}`\n    ))}`;\n  }\n\n  async get(data) {\n\n    data.header = \"Feed\";\n\n    const lang = navigator.language;\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric' };\n  \n    return template`${head(data,\n      body(data,\n        template`<div>Start time: ${data.startTime.toLocaleString(lang, options)}</div>\n        <div>End time: ${(!!data.endTime) ? data.endTime.toLocaleString(lang, options) : ''}</div>\n        <a href=\"/${data.type}s/${data.id}/edit\"><img src=\"/images/icons/ui/edit_18dp.png\"></a>\n        <div class=\"row\">\n        <form method=\"POST\" id=\"deleteForm\" action=\"/${data.type}s/${data.id}/delete\"></form>\n        <button form=\"deleteForm\" class=\"delete\"><img src=\"/images/icons/ui/delete_18dp.png\"></button>\n        </div>`\n        )\n    )}`;\n  }\n\n  async create(data) {\n\n    data.header = \"Add a Feed\";\n\n    return template`${head(data,\n      body(data, `<div class=\"form\">\n    <form method=\"POST\" action=\"/${data.type}s\">\n    <div>\n      <label for=startDate>Start time: \n        <input type=\"date\" name=\"startDate\" pattern=\"[0-9]{4}-[0-9]{2}-[0-9]{2}\" placeholder=\"YYYY-MM-DD\" value=\"${getDate(correctISOTime(new Date()))}\">\n        <input type=\"time\" name=\"startTime\" pattern=\"[0-9]{2}:[0-9]{2}\" placeholder=\"HH:MM\" value=\"${getTime(correctISOTime(new Date()))}\">\n      </label>\n    </div>\n    <div>\n      <label for=endDate>End time: \n        <input type=\"date\" name=\"endDate\" pattern=\"[0-9]{4}-[0-9]{2}-[0-9]{2}\" placeholder=\"YYYY-MM-DD\" >\n        <input type=\"time\" name=\"endTime\" pattern=\"[0-9]{2}:[0-9]{2}\" placeholder=\"HH:MM\" >\n      </label>\n    </div>\n    <div class=\"controls\">\n      <input type=\"submit\" value=\"Save\">\n    </div>\n  </form></div>`))}`;\n  }\n\n  async edit(data) {\n    data.header = \"Update a Feed\";\n\n    return template`${head(data,\n      body(data, `<div class=\"form\">\n      <form method=\"POST\" id=\"deleteForm\" action=\"/${data.type}s/${data.id}/delete\"></form>\n      <form method=\"POST\" id=\"editForm\" action=\"/${data.type}s/${data.id}/edit\"></form>\n      <div>\n        <div>\n          <label for=startDate>Start time: \n            <input type=\"date\" name=\"startDate\" form=\"editForm\" value=\"${getDate(correctISOTime(data.startTime))}\">\n            <input type=\"time\" name=\"startTime\" form=\"editForm\" value=\"${getTime(correctISOTime(data.startTime))}\">\n          </label>\n        </div>\n        <div>\n          <label for=endDate>End time: \n            <input type=\"date\" name=\"endDate\" form=\"editForm\" value=\"${getDate(correctISOTime(data.endTime || new Date()))}\">\n            <input type=\"time\" name=\"endTime\" form=\"editForm\" value=\"${getTime(correctISOTime(data.endTime || new Date()))}\">\n          </label>\n        <div>\n        <div class=\"controls\">\n          <button form=\"deleteForm\" class=\"delete\"><img src=\"/images/icons/ui/delete_18dp.png\"></button>\n          <input type=\"submit\" form=\"editForm\" value=\"Save\">\n        </div>\n      </div>\n    </div>\n    `))}`;\n  }\n}","/**\n *\n * Copyright 2020 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst Config = {\n  name: 'babylog',\n  version: 6,\n  stores: {\n    'Log': {\n      properties: {\n        autoIncrement: true,\n        keyPath: 'id'\n      },\n      indexes: {\n        \"type,startTime\": { unique: true },\n        \"startTime,type\": { unique: true }\n      }\n    }\n  }\n};\n\nexport default Config;","/**\n *\n * Copyright 2015 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Config from '../config/config.js';\n\nexport default function ConfigManagerInstance () {\n\n  if (typeof globalThis.ConfigManagerInstance_ !== 'undefined')\n    return Promise.resolve(globalThis.ConfigManagerInstance_);\n\n  globalThis.ConfigManagerInstance_ = new ConfigManager();\n\n  return Promise.resolve(globalThis.ConfigManagerInstance_);\n}\n\nclass ConfigManager {\n\n  constructor () {\n    this.config = Config;\n  }\n\n  set config (c) {\n    this.config_ = c;\n  }\n\n  get config () {\n    return this.config_;\n  }\n\n  getStore (storeName) {\n    return this.config_.stores[storeName];\n  }\n\n}","/**\n * Copyright 2015 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport ConfigManagerInstance from './configmanager.js';\n\nexport function DatabaseInstance() {\n\n  if (typeof globalThis.DatabaseInstance_ !== 'undefined')\n    return Promise.resolve(globalThis.DatabaseInstance_);\n\n  globalThis.DatabaseInstance_ = new Database();\n\n  return Promise.resolve(globalThis.DatabaseInstance_);\n}\n\nexport function hasSupport() {\n  return ('indexedDB' in globalThis);\n}\n\nconst parseFilter = ([operator, ...values]) => {\n  // >= 10\n  // BETWEEN 10,20\n  const [lower, upper] = values;\n\n  switch(operator) {\n    case 'BETWEEN': return IDBKeyRange.bound(lower, upper, false, false);\n    case '=':  return IDBKeyRange.only(lower);\n    case '<':  return IDBKeyRange.upperBound(lower);\n    case '<=': return IDBKeyRange.upperBound(lower, true);\n    case '>':  return IDBKeyRange.lowerBound(lower);\n    case '>=': return IDBKeyRange.lowerBound(lower, true);\n    default: return; // Just return if we don't recognise the combination\n  };\n}\n\nclass Database {\n\n  constructor() {\n\n    ConfigManagerInstance().then((configManager) => {\n\n      var config = configManager.config;\n\n      this.db_ = null;\n      this.name_ = config.name;\n      this.version_ = config.version;\n      this.stores_ = config.stores;\n\n    });\n  }\n\n  getStore(storeName) {\n\n    if (!this.stores_[storeName])\n      throw 'There is no store with name \"' + storeName + '\"';\n\n    return this.stores_[storeName];\n  }\n\n  async open() {\n    if (this.db_)\n      return Promise.resolve(this.db_);\n\n    return new Promise((resolve, reject) => {\n    \n      var dbOpen = indexedDB.open(this.name_, this.version_);\n\n      dbOpen.onupgradeneeded = (e) => {\n      \n        this.db_ = e.target.result;\n\n        var transaction = e.target.transaction;\n        var storeNames = Object.keys(this.stores_);\n        var storeName;\n\n        for (var s = 0; s < storeNames.length; s++) {\n          var dbStore;\n\n          storeName = storeNames[s];\n\n          // If the store already exists\n          if (this.db_.objectStoreNames.contains(storeName)) {\n\n            // Check to see if the store should be deleted.\n            // If so delete, and if not skip to the next store.\n            if (this.stores_[storeName].deleteOnUpgrade) {\n              this.db_.deleteObjectStore(storeName);\n              continue;\n            }\n\n            dbStore = transaction.objectStore(storeName);\n          }\n          else {\n            dbStore = this.db_.createObjectStore(\n              storeName,\n              this.stores_[storeName].properties\n            );\n          }\n\n          if (typeof this.stores_[storeName].indexes !== 'undefined') {\n            var indexes = this.stores_[storeName].indexes;\n            var indexNames = Object.keys(indexes);\n            var existingIndexNames = dbStore.indexNames;\n\n            var index;\n\n            for (var i = 0; i < indexNames.length; i++) {\n              index = indexNames[i];\n              if (existingIndexNames.contains(index) === false) {\n                // Only add Index if it doesn't exist\n                dbStore.createIndex(index, index.split(','), indexes[index]);\n              }\n            }\n\n            // Delete indexes that are removed.\n            for (var i = 0; i < dbStore.indexNames.length; i++) {\n              index = dbStore.indexNames[i];\n              if (indexNames.indexOf(index) < 0) {\n                dbStore.deleteIndex(index);\n              }\n            }\n          }\n        }\n      }\n\n      dbOpen.onsuccess = (e) => {\n        this.db_ = e.target.result;\n        resolve(this.db_);\n      }\n\n      dbOpen.onerror = (e) => {\n        reject(e);\n      };\n\n    });\n  }\n\n  close() {\n\n    return new Promise((resolve, reject) => {\n\n      if (!this.db_)\n        reject('No database connection');\n\n      this.db_.close();\n      resolve(this.db_);\n\n    });\n  }\n\n  nuke() {\n    return new Promise((resolve, reject) => {\n\n      console.log(\"Nuking... \" + this.name_);\n\n      this.close();\n\n      var dbTransaction = indexedDB.deleteDatabase(this.name_);\n      dbTransaction.onsuccess = (e) => {\n        console.log(\"Nuked...\");\n        resolve(e);\n      }\n\n      dbTransaction.onerror = (e) => {\n        reject(e);\n      }\n    });\n  }\n\n  put(storeName, value, key) {\n\n    return this.open().then((db) => {\n\n      return new Promise((resolve, reject) => {\n\n        var dbTransaction = db.transaction(storeName, 'readwrite');\n        var dbStore = dbTransaction.objectStore(storeName);\n        var dbRequest = dbStore.put(value, key);\n\n        dbTransaction.oncomplete = (e) => {\n          resolve(dbRequest.result);\n        }\n\n        dbTransaction.onabort =\n          dbTransaction.onerror = (e) => {\n            reject(e);\n          }\n\n      });\n\n    });\n\n  }\n\n  get(storeName, value) {\n\n    return this.open().then((db) => {\n\n      return new Promise((resolve, reject) => {\n\n        var dbTransaction = db.transaction(storeName, 'readonly');\n        var dbStore = dbTransaction.objectStore(storeName);\n        var dbStoreRequest;\n\n        dbTransaction.oncomplete = (e) => {\n          resolve(dbStoreRequest.result);\n        }\n\n        dbTransaction.onabort =\n          dbTransaction.onerror = (e) => {\n            reject(e);\n          }\n\n        dbStoreRequest = dbStore.get(value);\n\n      });\n\n    });\n  }\n\n  getAll(storeName, index, { filter, order, cmpFunc }) {\n\n    return this.open().then((db) => {\n\n      return new Promise((resolve, reject) => {\n\n        var dbTransaction = db.transaction(storeName, 'readonly');\n        var dbStore = dbTransaction.objectStore(storeName);\n        var dbCursor;\n        var dbFilter = parseFilter(filter);\n\n        if (typeof order !== 'string')\n          order = 'next';\n\n        if (typeof index === 'string')\n          dbCursor = dbStore.index(index).openCursor(dbFilter, order);\n        else\n          dbCursor = dbStore.openCursor();\n\n        var dbResults = [];\n\n        dbCursor.onsuccess = (e) => {\n          var cursor = e.target.result;\n\n          if (cursor) {\n            if (cmpFunc === undefined || cmpFunc(cursor.value)) {\n              dbResults.push({\n                key: cursor.key,\n                value: cursor.value\n              });\n            }\n            cursor.continue();\n          } else {\n            resolve(dbResults);\n          }\n        }\n\n        dbCursor.onerror = (e) => {\n          reject(e);\n        }\n\n      });\n\n    });\n  }\n\n  delete(storeName, key) {\n    return this.open().then((db) => {\n\n      return new Promise((resolve, reject) => {\n\n        var dbTransaction = db.transaction(storeName, 'readwrite');\n        var dbStore = dbTransaction.objectStore(storeName);\n\n        dbTransaction.oncomplete = (e) => {\n          resolve(e);\n        }\n\n        dbTransaction.onabort =\n          dbTransaction.onerror = (e) => {\n            reject(e);\n          }\n\n        dbStore.delete(key);\n\n      });\n    });\n  }\n\n  deleteAll(storeName) {\n\n    return this.open().then((db) => {\n\n      return new Promise((resolve, reject) => {\n\n        var dbTransaction = db.transaction(storeName, 'readwrite');\n        var dbStore = dbTransaction.objectStore(storeName);\n        var dbRequest = dbStore.clear();\n\n        dbRequest.onsuccess = (e) => {\n          resolve(e);\n        }\n\n        dbRequest.onerror = (e) => {\n          reject(e);\n        }\n\n      });\n\n    });\n  }\n\n}","/**\n *\n * Copyright 2015 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DatabaseInstance, hasSupport} from './database.js';\nimport ConfigManagerInstance from './configmanager.js';\n\nexport class Model {\n\n  constructor(key) {\n    this.key = key;\n  }\n\n  static get ASCENDING() {\n    return 'next';\n  }\n\n  static get DESCENDING() {\n    return 'prev';\n  }\n\n  static get UPDATED() {\n    return 'Model-updated';\n  }\n\n  static get storeName() {\n    return 'Model';\n  }\n\n  static nuke() {\n    return DatabaseInstance()\n      .then(db => db.close())\n      .then(db => db.nuke());\n  }\n\n  static get(key) {\n\n    if (hasSupport() === false) {\n      return Promise.resolve();\n    }\n\n    if (this instanceof Model)\n      Promise.reject(\"Can't call get on Model directly. Inherit first.\");\n\n    return DatabaseInstance()\n\n      // Do the query.\n      .then(db => db.get(this.storeName, key))\n\n      // Wrap the result in the correct class.\n      .then(result => {\n\n        return ConfigManagerInstance().then(configManager => {\n\n          var store = configManager.getStore(this.storeName);\n\n          if (!result)\n            return;\n\n          var resultKey = key;\n\n          // If the store uses a keypath then reset\n          // the key back to undefined.\n          if (store.properties.keyPath)\n            resultKey = undefined;\n\n          return new this(result, resultKey);\n\n        });\n\n      });\n\n  }\n\n  /**\n   * Gets all the objects from the database.\n   */\n  static getAll(index, { filter, order, cmpFunc }) {\n\n    if (hasSupport() === false) {\n      return Promise.resolve();\n    }\n\n    if (this instanceof Model)\n      Promise.reject(\"Can't call getAll on Model directly. Inherit first.\");\n\n    return DatabaseInstance()\n\n      // Do the query.\n      .then(db => db.getAll(this.storeName, index, {filter, order, cmpFunc}))\n\n      // Wrap all the results in the correct class.\n      .then(results => {\n\n        return ConfigManagerInstance().then(configManager => {\n\n          var store = configManager.getStore(this.storeName);\n          var results_ = [];\n\n          for (let result of results) {\n\n            var key = result.key;\n\n            // If the store uses a keypath then reset\n            // the key back to undefined.\n            if (store.properties.keyPath)\n              key = undefined;\n\n            results_.push(new this(result.value, key));\n          }\n\n          return results_;\n\n        });\n\n      });\n\n  }\n\n  put() {\n    return this.constructor.put(this);\n  }\n\n  /**\n   * Either inserts or update depending on whether the key / keyPath is set.\n   * If the keyPath is set, and a property of the value matches (in-line key)\n   * then the object is updated. If the keyPath is not set and the value's key\n   * is null, then the object is inserted. If the keypath is not set and the\n   * value's key is set then the object is updated.\n   */\n  static put(value) {\n\n    if (this instanceof Model)\n      Promise.reject(\"Can't call put on Model directly. Inherit first.\");\n\n    return DatabaseInstance()\n\n      // Do the query.\n      .then(db => db.put(this.storeName, value, value.key))\n\n      .then(key => {\n\n        return ConfigManagerInstance().then(configManager => {\n\n          // Inserting may provide a key. If there is no keyPath set\n          // the object needs to be updated with a key value so it can\n          // be altered and saved again without creating a new record.\n          var store = configManager.getStore(this.storeName);\n\n          var keyPath =\n            store.properties.keyPath;\n\n          if (!keyPath)\n            value.key = key;\n\n          return value;\n\n        })\n\n      });\n\n  }\n\n  static deleteAll() {\n\n    if (this instanceof Model)\n      Promise.reject(\"Can't call deleteAll on Model directly. Inherit first.\");\n\n    return DatabaseInstance()\n\n      .then(db => db.deleteAll(this.storeName))\n\n      .catch(e => {\n        // It may be that the store doesn't exist yet, so relax for that one.\n        if (e.name !== 'NotFoundError')\n          throw e;\n      });\n\n  }\n\n  delete() {\n    return this.constructor.delete(this);\n  }\n\n  static delete(value) {\n\n    if (this instanceof Model)\n      Promise.reject(\"Can't call delete on Model directly. Inherit first.\");\n\n    return ConfigManagerInstance().then(configManager => {\n\n      // If passed the full object to delete then\n      // grab its key for the delete\n      if (value instanceof this) {\n\n        var store = configManager.getStore(this.storeName);\n        var keyPath = store.properties.keyPath;\n\n        if (keyPath)\n          value = value[keyPath];\n        else\n          value = value.key;\n      }\n\n      return DatabaseInstance()\n\n        .then(db => db.delete(this.storeName, value));\n\n    });\n  }\n}","import { Model }  from './lib/model.js'\n\nexport class Log extends Model {\n\n  get hasFinished() {\n    return !!this.endTime;\n  }\n  \n  get duration() {\n    let end = this.endTime;\n    if (!!end === false) {\n      end = new Date;\n    }\n    return end - this.startTime;\n  }\n\n  constructor({id, endTime, startTime, type, isDuration = false}, key) {\n    super(key);\n\n    if(!!id) { \n      this.id = id;\n    }\n\n    if (endTime) {\n      this.endTime = new Date(endTime);\n    }\n    \n    this.startTime = new Date(startTime);\n    this.isDuration = isDuration;\n    this.type = type;\n  }\n\n  static get storeName() {\n    return 'Log';\n  }\n}","import { Controller } from \"../lib/controller.js\";\n\n// This will be a server only route;\nexport class StaticController extends Controller {\n\n  static get route() {\n    return ''; // Match everything.\n  }\n\n  constructor(paths) {\n    super();\n  }\n\n  async get(url, id, request) {\n    return caches.match(request).then(response => {\n      if (!!response) return response;\n      return fetch(url);\n    });\n  }\n\n  /*\n    url: URL\n  */\n  async getAll(url, request) {\n    return this.get(url, undefined, request);\n  }\n}","import { App } from '../app.js';\n\nimport { IndexController, FeedController, SleepController, WeeController, PoopController } from '../controllers/_.js';\nimport { IndexView, FeedView, SleepView, WeeView, PoopView } from '../views/_.js';\nimport { Log, Feed, Sleep, Wee, Poop } from '../models/_.js';\n\nimport { NotFoundController } from '../controllers/notfound.js';\nimport { StaticController } from '../controllers/client/static.js';\n\nimport paths from './sw-manifest.json';\n\nconst app = new App();\n\napp.registerRoute(IndexController.route, new IndexController(new IndexView, Log));\napp.registerRoute(FeedController.route, new FeedController(new FeedView, Feed));\napp.registerRoute(SleepController.route, new SleepController(new SleepView, Sleep));\napp.registerRoute(PoopController.route, new PoopController(new PoopView, Poop));\napp.registerRoute(WeeController.route, new WeeController(new WeeView, Wee));\napp.registerRoute(StaticController.route, new StaticController);\n\nself.onfetch = (event) => {\n  const { request } = event\n  const url = new URL(request.url);\n\n  const controller = app.resolve(url);\n  if (controller instanceof NotFoundController) {\n    // Fall through to the network\n    return;\n  }\n  const view = controller.getView(url, request);\n\n  if (!!view) {\n    return event.respondWith(view.then(output => {\n      if (output instanceof Response) return output;\n\n      const options = {\n        status: (!!output) ? 200 : 404,\n        headers: {\n          'Content-Type': 'text/html; charset=utf-8'\n        }\n      };\n      let body = output || \"Not Found\";\n\n      return new Response(body, options);\n    }).catch(ex => {\n      const options = {\n        status: 404,\n        headers: {\n          'Content-Type': 'text/html'\n        }\n      };\n      return new Response(ex.toString(), options);\n    }));\n  }\n\n  // If not caught by a controller, go to the network.\n};\n\nlet urls = [];\n\nself.oninstall = async (event) => {\n  // We will do something a lot more clever here soon.\n  event.waitUntil(caches.open(\"v1\").then(async (cache) => {\n   \n    return cache.addAll(paths);\n  }));\n  self.skipWaiting();\n}\n\nself.onactivate = (event) => {\n  event.waitUntil(clients.claim());\n}","import { head } from './partials/head.js';\nimport { body } from './partials/body.js';\nimport template from './lib/florawg.js';\nimport { aggregate } from './helpers/aggregate.js';\n\nexport class IndexView {\n  async getAll(data) {\n\n    data.type = \"All\";\n    data.header = \"All\";\n\n    return template`${head(data, \n      body(data, \n        template`${aggregate(data)}`)\n    )}`;\n  }\n}\n\n\n","import { Log } from './log.js'\n\nexport class Feed extends Log {\n  constructor(data = {}, key) {\n    super({...data, ...{isDuration: true}}, key);\n    this.type = 'feed';\n  }\n}","import { head } from './partials/head.js';\nimport { body } from './partials/body.js';\nimport template from './lib/florawg.js'\nimport { aggregate } from './helpers/aggregate.js';\nimport { correctISOTime, getDate, getTime } from './helpers/timezone.js';\n\nexport class SleepView {\n  async getAll(data) {\n\n    data.type = \"Sleeps\";\n    data.header = \"Sleeps\";\n\n    return template`${head(data,\n      body(data,\n        template`${aggregate(data)}`)\n    )}`;\n  }\n\n  async get(data) {\n\n    data.header = \"Sleep\";\n\n    const lang = navigator.language;\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric' };\n  \n    return template`${head(data,\n      body(data,\n        template`<div>Start time: ${data.startTime.toLocaleString(lang, options)}</div>\n        <div>End time: ${(!!data.endTime) ? data.endTime.toLocaleString(lang, options) : ''}</div>`)\n    )}`;\n  }\n\n  async create(data) {\n\n    data.header = \"Add a Sleep\";\n\n    return template`${head(data,\n      body(data, `<div class=\"form\">\n    <form method=\"POST\" action=\"/${data.type}s\">\n    <div>\n      <label for=startDate>Start time: \n        <input type=\"date\" name=\"startDate\" pattern=\"[0-9]{4}-[0-9]{2}-[0-9]{2}\" placeholder=\"YYYY-MM-DD\" value=\"${getDate(correctISOTime(new Date()))}\">\n        <input type=\"time\" name=\"startTime\" pattern=\"[0-9]{2}:[0-9]{2}\" placeholder=\"HH:MM\" value=\"${getTime(correctISOTime(new Date()))}\">\n      </label>\n    </div>\n    <div>\n      <label for=endDate>End time: \n        <input type=\"date\" name=\"endDate\" pattern=\"[0-9]{4}-[0-9]{2}-[0-9]{2}\" placeholder=\"YYYY-MM-DD\" >\n        <input type=\"time\" name=\"endTime\" pattern=\"[0-9]{2}:[0-9]{2}\" placeholder=\"HH:MM\" >\n      </label>\n    </div>\n    <div class=\"controls\">\n      <input type=\"submit\" value=\"Save\">\n    </div>\n  </form></div>`))}`;\n  }\n\n  async edit(data) {\n\n    data.header = \"Update a Sleep\";\n\n    return template`${head(data,\n      body(data, `<div class=\"form\">\n      <form method=\"POST\" id=\"deleteForm\" action=\"/${data.type}s/${data.id}/delete\"></form>\n      <form method=\"POST\" id=\"editForm\" action=\"/${data.type}s/${data.id}/edit\"></form>\n      <div>\n        <div>\n          <label for=startDate>Start time: \n            <input type=\"date\" name=\"startDate\" form=\"editForm\" value=\"${getDate(correctISOTime(data.startTime))}\">\n            <input type=\"time\" name=\"startTime\" form=\"editForm\" value=\"${getTime(correctISOTime(data.startTime))}\">\n          </label>\n        </div>\n        <div>\n          <label for=endDate>End time: \n            <input type=\"date\" name=\"endDate\" form=\"editForm\" value=\"${getDate(correctISOTime(data.endTime || new Date()))}\">\n            <input type=\"time\" name=\"endTime\" form=\"editForm\" value=\"${getTime(correctISOTime(data.endTime || new Date()))}\">\n          </label>\n        <div>\n        <div class=\"controls\">\n          <button form=\"deleteForm\" class=\"delete\"><img src=\"/images/icons/ui/delete_18dp.png\"></button>\n          <input type=\"submit\" form=\"editForm\" value=\"Save\">\n        </div>\n      </div>\n    </div>\n    `))}`;\n  }\n}","import { Log } from './log.js';\n\nexport class Sleep extends Log {\n  constructor(data = {}, key) {\n    super({...data, ...{isDuration: true}}, key);\n    this.type = 'sleep';\n  }\n}\n\n","import { head } from './partials/head.js';\nimport { body } from './partials/body.js';\nimport template from './lib/florawg.js'\nimport { aggregate } from './helpers/aggregate.js';\nimport { correctISOTime, getDate, getTime } from './helpers/timezone.js';\n\nexport class PoopView {\n  async getAll(data) {\n\n    data.type = \"Poop\";\n    data.header = \"Poops\";\n\n    return template`${head(data,\n      body(data,\n        template`${aggregate(data)}`)\n    )}`;\n  }\n\n  async get(data) {\n\n    data.header = \"Poop\";\n\n    const lang = navigator.language;\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric' };\n  \n    return template`${head(data,\n      body(data,\n        template`<div>Start time: ${data.startTime.toLocaleString(lang, options)}</div>\n        <div>End time: ${(!!data.endTime) ? data.endTime.toLocaleString(lang, options) : ''}</div>`)\n    )}`;\n  }\n\n  async create(data) {\n\n    data.header = \"Add a Poop\";\n\n    return template`${head(data,\n      body(data, `<div class=\"form\">\n    <form method=\"POST\" action=\"/${data.type}s\">\n    <div>\n      <label for=startDate>Start time: \n        <input type=\"date\" name=\"startDate\" pattern=\"[0-9]{4}-[0-9]{2}-[0-9]{2}\" value=\"${getDate(correctISOTime(new Date()))}\">\n        <input type=\"time\" name=\"startTime\" pattern=\"[0-9]{2}:[0-9]{2}\" placeholder=\"HH:MM\" value=\"${getTime(correctISOTime(new Date()))}\">\n      </label>\n    </div>\n    <div class=\"controls\">\n      <input type=\"submit\" value=\"Save\">\n    </div>\n  </form></div>`))}`;\n  }\n\n  async edit(data) {\n\n    data.header = \"Update a Poop\";\n\n    return template`${head(data,\n      body(data, `<div class=\"form\">\n    <form method=\"POST\" id=\"deleteForm\" action=\"/${data.type}s/${data.id}/delete\"></form>\n    <form method=\"POST\" id=\"editForm\" action=\"/${data.type}s/${data.id}/edit\"></form>\n    <div>\n      <div>\n        <label for=startDate>Start time: \n          <input type=\"date\" name=\"startDate\" form=\"editForm\" placeholder=\"YYYY-MM-DD\" value=\"${getDate(correctISOTime(data.startTime))}\">\n          <input type=\"time\" name=\"startTime\" form=\"editForm\" placeholder=\"HH:MM\" value=\"${getTime(correctISOTime(data.startTime))}\">\n        </label>\n      </div>\n      <div class=\"controls\">\n        <button form=\"deleteForm\" class=\"delete\"><img src=\"/images/icons/ui/delete_18dp.png\"></button>\n        <input type=\"submit\" form=\"editForm\" value=\"Save\">\n      </div>\n    </div>\n    `))}`;\n  }\n}","import { Log }  from './log.js'\n\nexport class Poop extends Log {\n  constructor(data = {}, key) {\n    super(data, key);\n    this.type = 'poop';\n  }\n}\n","import { head } from './partials/head.js';\nimport { body } from './partials/body.js';\nimport template from './lib/florawg.js'\nimport { aggregate } from './helpers/aggregate.js';\nimport { correctISOTime, getDate, getTime } from './helpers/timezone.js';\n\nexport class WeeView {\n  async getAll(data) {\n\n    data.type = \"Wee\";\n    data.header = \"Wees\";\n\n    return template`${head(data,\n      body(data,\n        template`${aggregate(data)}`)\n    )}`;\n  }\n\n  async get(data) {\n\n    data.header = \"Wee\";\n\n    const lang = navigator.language;\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric' };\n\n    return template`${head(data,\n      body(data,\n        template`<div>Start time: ${data.startTime.toLocaleString(lang, options)}</div>\n        <div>End time: ${(!!data.endTime) ? data.endTime.toLocaleString(lang, options) : ''}</div>`)\n    )}`;\n  }\n\n  async create(data) {\n\n    data.header = \"Add a Wee\";\n\n    return template`${head(data,\n      body(data, `<div class=\"form\">\n  <form method=\"POST\" action=\"/${data.type}s\">\n    <div>\n      <label for=startDate>Start time: \n        <input type=\"date\" name=\"startDate\" pattern=\"[0-9]{4}-[0-9]{2}-[0-9]{2}\" placeholder=\"YYYY-MM-DD\" value=\"${getDate(correctISOTime(new Date()))}\">\n        <input type=\"time\" name=\"startTime\" pattern=\"[0-9]{2}:[0-9]{2}\" placeholder=\"HH:MM\" value=\"${getTime(correctISOTime(new Date()))}\">\n      </label>\n    </div>\n    <div class=\"controls\">\n      <input type=\"submit\" value=\"Save\">\n    </div>\n  </form>\n</div>`))}`;\n  }\n\n  async edit(data) {\n\n    data.header = \"Update a Wee\";\n\n    return template`${head(data,\n      body(data, `<div class=\"form\">\n    <form method=\"POST\" id=\"deleteForm\" action=\"/${data.type}s/${data.id}/delete\"></form>\n    <form method=\"POST\" id=\"editForm\" action=\"/${data.type}s/${data.id}/edit\"></form>\n    <div>\n      <div>\n        <label for=startDate>Start time: \n          <input type=\"date\" name=\"startDate\" form=\"editForm\" value=\"${getDate(correctISOTime(data.startTime))}\">\n          <input type=\"time\" name=\"startTime\" form=\"editForm\" value=\"${getTime(correctISOTime(data.startTime))}\">\n        </label>\n      </div>\n      <div class=\"controls\">\n        <button form=\"deleteForm\" class=\"delete\"><img src=\"/images/icons/ui/delete_18dp.png\"></button>\n        <input type=\"submit\" form=\"editForm\" value=\"Save\">\n      </div>\n    </div>\n    `))}`;\n  }\n}","import { Log } from './log.js';\n\nexport class Wee extends Log {\n  constructor(data = {}, key) {\n    super(data, key);\n    this.type = 'wee';\n  }\n}\n"],"names":["MethodNotFound","[object Object]","message","this","name","Controller","view","model","Model","url","request","pathname","URL","method","route","constructor","idMatch","match","create","edit","get","getAll","post","put","del","Response","redirect","NotFoundController","routes","routeNotFound","NotFoundException","Error","super","getFormData","async","data","arrayBuffer","decoder","TextDecoder","URLSearchParams","decode","FeedController","formData","startDate","startTime","endDate","endTime","start","Date","end","undefined","id","feed","parseInt","feeds","filter","order","DESCENDING","delete","IndexController","logs","render","title","newTitle","SleepController","sleep","sleeps","WeeController","wee","wees","PoopController","poop","poops","encoder","TextEncoder","pipeInto","from","controller","reader","getReader","read","then","process","result","done","value","enqueue","enqueueItem","val","globalThis","ReadableStream","Promise","newVal","Array","isArray","item","encode","strings","values","i","length","html","close","push","head","body","template","items","header","navigator","language","calculateDuration","ms","hours","Math","floor","minutes","aggregate","templates","lang","options","weekday","year","month","day","currentDay","dayAggregate","timeAggregate","firstDay","toLocaleDateString","Object","entries","map","key","join","type","isDuration","hasFinished","duration","toLocaleTimeString","hour","minute","correctISOTime","date","tzoffset","getTimezoneOffset","toISOString","replace","getDate","getFullYear","getMonth","toString","padStart","getTime","getHours","getMinutes","Config","version","stores","Log","properties","autoIncrement","keyPath","indexes","type,startTime","unique","startTime,type","ConfigManagerInstance","ConfigManagerInstance_","ConfigManager","resolve","config","c","config_","storeName","DatabaseInstance","DatabaseInstance_","Database","hasSupport","configManager","db_","name_","version_","stores_","reject","dbOpen","indexedDB","open","onupgradeneeded","e","target","transaction","storeNames","keys","s","dbStore","objectStoreNames","contains","deleteOnUpgrade","deleteObjectStore","objectStore","createObjectStore","index","indexNames","existingIndexNames","createIndex","split","indexOf","deleteIndex","onsuccess","onerror","console","log","dbTransaction","deleteDatabase","db","dbRequest","oncomplete","onabort","dbStoreRequest","cmpFunc","dbCursor","dbFilter","operator","lower","upper","IDBKeyRange","bound","only","upperBound","lowerBound","parseFilter","openCursor","dbResults","cursor","continue","clear","ASCENDING","UPDATED","nuke","store","getStore","resultKey","results","results_","deleteAll","catch","StaticController","paths","caches","response","fetch","app","registerRoute","toLocaleString","self","onfetch","event","getView","respondWith","output","status","headers","Content-Type","ex","oninstall","waitUntil","cache","addAll","skipWaiting","onactivate","clients","claim"],"mappings":"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"}